{"version":3,"sources":["content/dashboards/Analytics/AudienceOverview.js","content/dashboards/Analytics/Conversions.js","content/dashboards/Analytics/TopLandingPages.js","content/dashboards/Analytics/PendingInvitations.js","content/dashboards/Analytics/SessionsByCountry.js","content/dashboards/Analytics/TrafficSources.js","content/dashboards/Analytics/PageHeader.js","content/dashboards/Analytics/index.js","components/Label/index.js","components/PageTitleWrapper/index.js","components/Gauge/index.js","content/dashboards/Analytics/ActiveReferrals.js","content/dashboards/Analytics/BounceRate.js","content/dashboards/Analytics/ConversionsAlt.js"],"names":["CardActionsWrapper","styled","CardActions","theme","colors","alpha","black","AudienceOverview","t","useTranslation","periods","value","text","audiences","actionRef1","useRef","actionRef2","useState","openPeriod","setOpenMenuPeriod","openAudience","setOpenMenuAudience","period","setPeriod","audience","setAudience","useTheme","ChartSparklineOptions","chart","background","toolbar","show","sparkline","enabled","zoom","primary","main","dataLabels","mode","palette","fill","opacity","type","grid","padding","top","stroke","width","legend","labels","tooltip","xaxis","axisBorder","axisTicks","yaxis","ChartAudienceOptions","lines","strokeDashArray","borderColor","markers","hover","sizeOffset","shape","size","strokeWidth","strokeOpacity","strokeColors","white","curve","lineCap","style","secondary","tickAmount","data","Card","CardHeader","action","Button","variant","ref","onClick","endIcon","fontSize","Menu","disableScrollLock","anchorEl","current","onClose","open","anchorOrigin","vertical","horizontal","transformOrigin","map","_period","MenuItem","title","Divider","CardContent","_audience","Box","mt","options","series","name","height","Grid","container","alignItems","xs","sm","md","item","sx","position","component","display","orientation","flexItem","absolute","p","Typography","gutterBottom","AvatarWrapperError","Avatar","error","lighter","AvatarWrapperSuccess","success","AvatarWrapperWarning","warning","Conversions","Gauge","circleRatio","styles","buildStyles","rotation","color","List","disablePadding","dense","ListItem","ListItemText","primaryTypographyProps","noWrap","secondaryTypographyProps","my","AvatarLight","typography","fontWeightBold","pxToRem","TopLandingPages","flexDirection","disableGutters","ListItemAvatar","mr","Label","alignSelf","href","py","flex","justifyContent","AvatarError","getContrastText","spacing","shadows","CardContentWrapper","PendingInvitations","ml","mb","Link","fontWeight","pl","ImageWrapper","LinearProgressWrapper","LinearProgress","ListItemWrapper","SessionsByCountry","alt","src","usFlag","minWidth","flexWrap","flexGrow","deFlag","frFlag","esFlag","cnFlag","TabsContainerWrapper","EmptyResultsWrapper","TrafficSources","currentTab","setCurrentTab","tabs","label","chartOptions","plotOptions","bar","borderRadius","columnWidth","divider","Tabs","onChange","_event","scrollButtons","textColor","indicatorColor","tab","Tab","textAlign","align","PageHeader","user","useAuth","avatar","format","Date","DashboardAnalytics","PageTitleWrapper","px","direction","lg","ActiveReferrals","BounceRate","ConversionsAlt","Footer","LabelWrapper","general","info","className","children","rest","PageTitle","GaugeWrapper","CircularProgressbarWithChildren","trueWhite","AvatarSuccess","contrastText","AvatarPrimary","AvatarWarning"],"mappings":"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","file":"static/js/70.4e4e0e24.chunk.js","sourcesContent":["import { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ExpandMoreTwoToneIcon from '@mui/icons-material/ExpandMoreTwoTone';\n\nimport {\n  Button,\n  Card,\n  Box,\n  CardContent,\n  CardHeader,\n  Menu,\n  MenuItem,\n  CardActions,\n  Grid,\n  Typography,\n  Divider,\n  styled,\n  useTheme\n} from '@mui/material';\n\nimport Chart from 'react-apexcharts';\n\nconst CardActionsWrapper = styled(CardActions)(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: 0;\n      display: block;\n`\n);\n\nfunction AudienceOverview() {\n  const { t } = useTranslation();\n\n  const periods = [\n    {\n      value: 'today',\n      text: t('Today')\n    },\n    {\n      value: 'yesterday',\n      text: t('Yesterday')\n    },\n    {\n      value: 'last_month',\n      text: t('Last month')\n    },\n    {\n      value: 'last_year',\n      text: t('Last year')\n    }\n  ];\n  const audiences = [\n    {\n      value: 'users',\n      text: t('Users')\n    },\n    {\n      value: 'new_users',\n      text: t('New users')\n    },\n    {\n      value: 'page_views',\n      text: t('Page views')\n    },\n    {\n      value: 'avg_session_duration',\n      text: t('Avg. session duration')\n    },\n    {\n      value: 'bounce_rate',\n      text: t('Bounce rate')\n    },\n    {\n      value: 'sessions',\n      text: t('Sessions')\n    }\n  ];\n\n  const actionRef1 = useRef(null);\n  const actionRef2 = useRef(null);\n  const [openPeriod, setOpenMenuPeriod] = useState(false);\n  const [openAudience, setOpenMenuAudience] = useState(false);\n  const [period, setPeriod] = useState(periods[3].text);\n  const [audience, setAudience] = useState(audiences[1].text);\n  const theme = useTheme();\n\n  const ChartSparklineOptions = {\n    chart: {\n      background: 'transparent',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    colors: [theme.colors.primary.main],\n    dataLabels: {\n      enabled: false\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    fill: {\n      opacity: 1,\n      colors: [theme.colors.primary.main],\n      type: 'solid'\n    },\n    grid: {\n      padding: {\n        top: 2\n      }\n    },\n    stroke: {\n      show: true,\n      colors: [theme.colors.primary.main],\n      width: 2\n    },\n    legend: {\n      show: false\n    },\n    labels: [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec'\n    ],\n    tooltip: {\n      enabled: false\n    },\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    }\n  };\n\n  const ChartAudienceOptions = {\n    chart: {\n      background: 'transparent',\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    colors: [theme.colors.primary.main],\n    labels: [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec'\n    ],\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      opacity: 1\n    },\n    grid: {\n      xaxis: {\n        lines: {\n          show: false\n        }\n      },\n      yaxis: {\n        lines: {\n          show: true\n        }\n      },\n      strokeDashArray: 5,\n      borderColor: theme.colors.alpha.black[10]\n    },\n    legend: {\n      show: false\n    },\n    markers: {\n      hover: {\n        sizeOffset: 2\n      },\n      shape: 'circle',\n      size: 6,\n      strokeWidth: 3,\n      strokeOpacity: 1,\n      strokeColors: [theme.colors.primary.main],\n      colors: [theme.colors.alpha.white[100]]\n    },\n    stroke: {\n      curve: 'smooth',\n      lineCap: 'butt',\n      width: 3\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    xaxis: {\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    },\n    yaxis: {\n      tickAmount: 3,\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    }\n  };\n\n  const data = {\n    users: 14.586,\n    newUsers: 12.847,\n    pageViews: 67.492,\n    avgSessionDuration: '00:05:21',\n    bounceRate: '65.37%',\n    sessions: 25.694\n  };\n\n  return (\n    <Card>\n      <CardHeader\n        action={\n          <>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              ref={actionRef1}\n              onClick={() => setOpenMenuPeriod(true)}\n              endIcon={<ExpandMoreTwoToneIcon fontSize=\"small\" />}\n            >\n              {period}\n            </Button>\n            <Menu\n              disableScrollLock\n              anchorEl={actionRef1.current}\n              onClose={() => setOpenMenuPeriod(false)}\n              open={openPeriod}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right'\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right'\n              }}\n            >\n              {periods.map((_period) => (\n                <MenuItem\n                  key={_period.value}\n                  onClick={() => {\n                    setPeriod(_period.text);\n                    setOpenMenuPeriod(false);\n                  }}\n                >\n                  {_period.text}\n                </MenuItem>\n              ))}\n            </Menu>\n          </>\n        }\n        title={t('Audience Overview')}\n      />\n      <Divider />\n      <CardContent>\n        <Button\n          size=\"small\"\n          variant=\"outlined\"\n          ref={actionRef2}\n          onClick={() => setOpenMenuAudience(true)}\n          endIcon={<ExpandMoreTwoToneIcon fontSize=\"small\" />}\n        >\n          {audience}\n        </Button>\n        <Menu\n          disableScrollLock\n          anchorEl={actionRef2.current}\n          onClose={() => setOpenMenuAudience(false)}\n          open={openAudience}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'left'\n          }}\n        >\n          {audiences.map((_audience) => (\n            <MenuItem\n              key={_audience.value}\n              onClick={() => {\n                setAudience(_audience.text);\n                setOpenMenuAudience(false);\n              }}\n            >\n              {_audience.text}\n            </MenuItem>\n          ))}\n        </Menu>\n        <Box mt={2}>\n          <Chart\n            options={ChartAudienceOptions}\n            series={[\n              {\n                name: 'New Users',\n                data: [\n                  324, 315, 578, 576, 227, 459, 473, 282, 214, 623, 477, 401\n                ]\n              }\n            ]}\n            type=\"line\"\n            height={230}\n          />\n        </Box>\n      </CardContent>\n      <Divider />\n      <CardActionsWrapper>\n        <Box>\n          <Grid container alignItems=\"center\">\n            <Grid\n              xs={12}\n              sm={6}\n              md={4}\n              item\n              sx={{\n                position: 'relative'\n              }}\n            >\n              <Box\n                component=\"span\"\n                sx={{\n                  display: { xs: 'none', sm: 'inline-block' }\n                }}\n              >\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Box>\n              <Box\n                sx={{\n                  p: 3\n                }}\n              >\n                <Box>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {t('Users')}\n                  </Typography>\n                  <Typography variant=\"h3\">{data.users}</Typography>\n                </Box>\n\n                <Chart\n                  options={ChartSparklineOptions}\n                  series={[\n                    {\n                      name: 'Users',\n                      data: [\n                        467, 696, 495, 477, 422, 585, 691, 294, 508, 304, 499,\n                        390\n                      ]\n                    }\n                  ]}\n                  type=\"line\"\n                  height={55}\n                />\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid\n              xs={12}\n              sm={6}\n              md={4}\n              item\n              sx={{\n                position: 'relative'\n              }}\n            >\n              <Box\n                component=\"span\"\n                sx={{\n                  display: { xs: 'none', sm: 'inline-block' }\n                }}\n              >\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Box>\n              <Box\n                sx={{\n                  p: 3\n                }}\n              >\n                <Box>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {t('New Users')}\n                  </Typography>\n                  <Typography variant=\"h3\">{data.newUsers}</Typography>\n                </Box>\n                <Chart\n                  options={ChartSparklineOptions}\n                  series={[\n                    {\n                      name: 'New Users',\n                      data: [\n                        581, 203, 462, 518, 329, 395, 375, 447, 303, 423, 405,\n                        589\n                      ]\n                    }\n                  ]}\n                  type=\"line\"\n                  height={55}\n                />\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid\n              xs={12}\n              sm={6}\n              md={4}\n              item\n              sx={{\n                position: 'relative'\n              }}\n            >\n              <Box\n                component=\"span\"\n                sx={{\n                  display: { xs: 'none', sm: 'inline-block' }\n                }}\n              >\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Box>\n              <Box\n                sx={{\n                  p: 3\n                }}\n              >\n                <Box>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {t('Page Views')}\n                  </Typography>\n                  <Typography variant=\"h3\">{data.pageViews}</Typography>\n                </Box>\n\n                <Chart\n                  options={ChartSparklineOptions}\n                  series={[\n                    {\n                      name: 'Page Views',\n                      data: [\n                        353, 380, 325, 246, 682, 605, 672, 271, 386, 630, 577,\n                        511\n                      ]\n                    }\n                  ]}\n                  type=\"line\"\n                  height={55}\n                />\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid\n              xs={12}\n              sm={6}\n              md={4}\n              item\n              sx={{\n                position: 'relative'\n              }}\n            >\n              <Box\n                component=\"span\"\n                sx={{\n                  display: { xs: 'none', sm: 'inline-block' }\n                }}\n              >\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Box>\n              <Box\n                sx={{\n                  p: 3\n                }}\n              >\n                <Box>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {t('Avg. Session Duration')}\n                  </Typography>\n                  <Typography variant=\"h3\">\n                    {data.avgSessionDuration}\n                  </Typography>\n                </Box>\n\n                <Chart\n                  options={ChartSparklineOptions}\n                  series={[\n                    {\n                      name: 'Avg. Session Duration',\n                      data: [\n                        508, 420, 336, 278, 627, 475, 575, 307, 441, 249, 413,\n                        574\n                      ]\n                    }\n                  ]}\n                  type=\"line\"\n                  height={55}\n                />\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid\n              xs={12}\n              sm={6}\n              md={4}\n              item\n              sx={{\n                position: 'relative'\n              }}\n            >\n              <Box\n                component=\"span\"\n                sx={{\n                  display: { xs: 'none', sm: 'inline-block' }\n                }}\n              >\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Box>\n              <Box\n                sx={{\n                  p: 3\n                }}\n              >\n                <Box>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {t('Bounce Rate')}\n                  </Typography>\n                  <Typography variant=\"h3\">{data.bounceRate}</Typography>\n                </Box>\n\n                <Chart\n                  options={ChartSparklineOptions}\n                  series={[\n                    {\n                      name: 'Bounce Rate',\n                      data: [\n                        534, 345, 622, 332, 567, 250, 494, 270, 313, 470, 329,\n                        287\n                      ]\n                    }\n                  ]}\n                  type=\"line\"\n                  height={55}\n                />\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid\n              xs={12}\n              sm={6}\n              md={4}\n              item\n              sx={{\n                position: 'relative'\n              }}\n            >\n              <Box\n                component=\"span\"\n                sx={{\n                  display: { xs: 'none', sm: 'inline-block' }\n                }}\n              >\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Box>\n              <Box\n                sx={{\n                  p: 3\n                }}\n              >\n                <Box>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {t('Sessions')}\n                  </Typography>\n                  <Typography variant=\"h3\">{data.sessions}</Typography>\n                </Box>\n\n                <Chart\n                  options={ChartSparklineOptions}\n                  series={[\n                    {\n                      name: 'Sessions',\n                      data: [\n                        610, 234, 374, 423, 207, 507, 699, 304, 285, 257, 350,\n                        227\n                      ]\n                    }\n                  ]}\n                  type=\"line\"\n                  height={55}\n                />\n              </Box>\n              <Divider />\n            </Grid>\n          </Grid>\n        </Box>\n      </CardActionsWrapper>\n    </Card>\n  );\n}\n\nexport default AudienceOverview;\n","import { useTranslation } from 'react-i18next';\nimport {\n  CardHeader,\n  Divider,\n  CardContent,\n  Avatar,\n  Card,\n  ListItemText,\n  List,\n  ListItem,\n  styled\n} from '@mui/material';\nimport Gauge from 'src/components/Gauge';\nimport { buildStyles } from 'react-circular-progressbar';\nimport TrendingDown from '@mui/icons-material/TrendingDown';\nimport TrendingUp from '@mui/icons-material/TrendingUp';\nimport TrendingFlat from '@mui/icons-material/TrendingFlat';\n\nconst AvatarWrapperError = styled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.error.lighter};\n      color:  ${theme.colors.error.main};\n`\n);\n\nconst AvatarWrapperSuccess = styled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.success.lighter};\n      color:  ${theme.colors.success.main};\n`\n);\n\nconst AvatarWrapperWarning = styled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.warning.lighter};\n      color:  ${theme.colors.warning.main};\n`\n);\n\nfunction Conversions() {\n  const { t } = useTranslation();\n\n  const data = {\n    percentage: 67,\n    sales: 127,\n    customers: 1.358,\n    earnings: '$15,864.00'\n  };\n\n  return (\n    <Card>\n      <CardHeader title={t('Conversions')} />\n      <Divider />\n      <CardContent>\n        <Gauge\n          circleRatio={0.65}\n          styles={buildStyles({ rotation: 1 / 2 + 1 / 5.7 })}\n          value={data.percentage}\n          strokeWidth={13}\n          text={`${data.percentage}%`}\n          color=\"primary\"\n          size=\"xxlarge\"\n        />\n\n        <List disablePadding dense>\n          <ListItem>\n            <ListItemText\n              primary={t('Sales Today')}\n              primaryTypographyProps={{\n                variant: 'subtitle2',\n                gutterBottom: true,\n                noWrap: true\n              }}\n              secondary={data.sales}\n              secondaryTypographyProps={{\n                variant: 'h3',\n                color: 'textPrimary',\n                noWrap: true\n              }}\n            />\n            <AvatarWrapperError>\n              <TrendingDown />\n            </AvatarWrapperError>\n          </ListItem>\n          <Divider\n            sx={{\n              my: 1\n            }}\n          />\n          <ListItem>\n            <ListItemText\n              primary={t('Customers per month')}\n              primaryTypographyProps={{\n                variant: 'subtitle2',\n                gutterBottom: true,\n                noWrap: true\n              }}\n              secondary={data.customers}\n              secondaryTypographyProps={{\n                variant: 'h3',\n                color: 'textPrimary'\n              }}\n            />\n            <AvatarWrapperWarning>\n              <TrendingFlat />\n            </AvatarWrapperWarning>\n          </ListItem>\n          <Divider\n            sx={{\n              my: 1\n            }}\n          />\n          <ListItem>\n            <ListItemText\n              primary={t('Earnings Report')}\n              primaryTypographyProps={{\n                variant: 'subtitle2',\n                gutterBottom: true,\n                noWrap: true\n              }}\n              secondary={data.earnings}\n              secondaryTypographyProps={{\n                variant: 'h3',\n                color: 'textPrimary'\n              }}\n            />\n            <AvatarWrapperSuccess>\n              <TrendingUp />\n            </AvatarWrapperSuccess>\n          </ListItem>\n        </List>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default Conversions;\n","import {\n  CardHeader,\n  Divider,\n  CardContent,\n  Avatar,\n  Box,\n  CardActions,\n  Button,\n  Typography,\n  ListItemAvatar,\n  Card,\n  ListItemText,\n  List,\n  ListItem,\n  styled\n} from '@mui/material';\n\nimport { useTranslation } from 'react-i18next';\nimport Label from 'src/components/Label';\n\nconst AvatarLight = styled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[10]};\n      color:  ${theme.colors.alpha.black[100]};\n      font-weight: ${theme.typography.fontWeightBold};\n      font-size: ${theme.typography.pxToRem(15)};\n`\n);\n\nfunction TopLandingPages() {\n  const { t } = useTranslation();\n\n  return (\n    <Card\n      sx={{\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n      }}\n    >\n      <CardHeader title={t('Top Landing Pages')} />\n      <Divider />\n      <CardContent>\n        <List component=\"div\" disablePadding>\n          <ListItem\n            sx={{\n              display: { xs: 'block', sm: 'flex' }\n            }}\n            disableGutters\n            alignItems=\"flex-start\"\n            component=\"div\"\n          >\n            <ListItemAvatar>\n              <AvatarLight>1</AvatarLight>\n            </ListItemAvatar>\n\n            <ListItemText\n              primary=\"/templates/react/react-free/\"\n              primaryTypographyProps={{\n                variant: 'h6',\n                sx: {\n                  mt: 1\n                },\n                gutterBottom: true,\n                noWrap: true\n              }}\n              secondaryTypographyProps={{ variant: 'h3', noWrap: true }}\n              secondary={\n                <Box\n                  sx={{\n                    mt: 1,\n                    flexDirection: 'row',\n                    display: 'flex'\n                  }}\n                >\n                  <Box\n                    sx={{\n                      mr: 5\n                    }}\n                  >\n                    <Typography\n                      component=\"div\"\n                      variant=\"body2\"\n                      gutterBottom\n                      color=\"text.secondary\"\n                    >\n                      {t('Impressions')}\n                    </Typography>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Typography\n                        component=\"div\"\n                        variant=\"h3\"\n                        sx={{\n                          mr: 1\n                        }}\n                      >\n                        84.873\n                      </Typography>\n                      <Label color=\"success\">34.76%</Label>\n                    </Box>\n                  </Box>\n                  <Box>\n                    <Typography\n                      component=\"div\"\n                      variant=\"body2\"\n                      gutterBottom\n                      color=\"text.secondary\"\n                    >\n                      {t('Clicks')}\n                    </Typography>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Typography\n                        component=\"div\"\n                        variant=\"h3\"\n                        sx={{\n                          mr: 1\n                        }}\n                      >\n                        15.594\n                      </Typography>\n                      <Label color=\"success\">28.75%</Label>\n                    </Box>\n                  </Box>\n                </Box>\n              }\n            />\n            <Box\n              sx={{\n                mt: { xs: 2, sm: 0 }\n              }}\n              alignSelf=\"center\"\n            >\n              <Button size=\"small\" href=\"#\">\n                {t('Visit URL')}\n              </Button>\n            </Box>\n          </ListItem>\n          <Divider\n            sx={{\n              my: 1\n            }}\n          />\n          <ListItem\n            sx={{\n              display: { xs: 'block', sm: 'flex' }\n            }}\n            disableGutters\n            alignItems=\"flex-start\"\n            component=\"div\"\n          >\n            <ListItemAvatar>\n              <AvatarLight>2</AvatarLight>\n            </ListItemAvatar>\n\n            <ListItemText\n              primary=\"/templates/react/react-free/\"\n              primaryTypographyProps={{\n                variant: 'h6',\n                sx: {\n                  mt: 1\n                },\n                gutterBottom: true,\n                noWrap: true\n              }}\n              secondaryTypographyProps={{ variant: 'h3', noWrap: true }}\n              secondary={\n                <Box\n                  sx={{\n                    mt: 1,\n                    flexDirection: 'row',\n                    display: 'flex'\n                  }}\n                >\n                  <Box\n                    sx={{\n                      mr: 5\n                    }}\n                  >\n                    <Typography\n                      component=\"div\"\n                      variant=\"body2\"\n                      gutterBottom\n                      color=\"text.secondary\"\n                    >\n                      {t('Impressions')}\n                    </Typography>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Typography\n                        component=\"div\"\n                        variant=\"h3\"\n                        sx={{\n                          mr: 1\n                        }}\n                      >\n                        84.873\n                      </Typography>\n                      <Label color=\"success\">34.76%</Label>\n                    </Box>\n                  </Box>\n                  <Box>\n                    <Typography\n                      component=\"div\"\n                      variant=\"body2\"\n                      gutterBottom\n                      color=\"text.secondary\"\n                    >\n                      {t('Clicks')}\n                    </Typography>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Typography\n                        component=\"div\"\n                        variant=\"h3\"\n                        sx={{\n                          mr: 1\n                        }}\n                      >\n                        15.594\n                      </Typography>\n                      <Label color=\"success\">28.75%</Label>\n                    </Box>\n                  </Box>\n                </Box>\n              }\n            />\n            <Box\n              sx={{\n                mt: { xs: 2, sm: 0 }\n              }}\n              alignSelf=\"center\"\n            >\n              <Button size=\"small\" href=\"#\">\n                {t('Visit URL')}\n              </Button>\n            </Box>\n          </ListItem>\n          <Divider\n            sx={{\n              my: 1\n            }}\n          />\n          <ListItem\n            sx={{\n              display: { xs: 'block', sm: 'flex' }\n            }}\n            disableGutters\n            alignItems=\"flex-start\"\n            component=\"div\"\n          >\n            <ListItemAvatar>\n              <AvatarLight>3</AvatarLight>\n            </ListItemAvatar>\n\n            <ListItemText\n              primary=\"/templates/react/react-free/\"\n              primaryTypographyProps={{\n                variant: 'h6',\n                sx: {\n                  mt: 1\n                },\n                gutterBottom: true,\n                noWrap: true\n              }}\n              secondaryTypographyProps={{ variant: 'h3', noWrap: true }}\n              secondary={\n                <Box\n                  sx={{\n                    mt: 1,\n                    flexDirection: 'row',\n                    display: 'flex'\n                  }}\n                >\n                  <Box\n                    sx={{\n                      mr: 5\n                    }}\n                  >\n                    <Typography\n                      component=\"div\"\n                      variant=\"body2\"\n                      gutterBottom\n                      color=\"text.secondary\"\n                    >\n                      {t('Impressions')}\n                    </Typography>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Typography\n                        component=\"div\"\n                        variant=\"h3\"\n                        sx={{\n                          mr: 1\n                        }}\n                      >\n                        84.873\n                      </Typography>\n                      <Label color=\"success\">34.76%</Label>\n                    </Box>\n                  </Box>\n                  <Box>\n                    <Typography\n                      component=\"div\"\n                      variant=\"body2\"\n                      gutterBottom\n                      color=\"text.secondary\"\n                    >\n                      {t('Clicks')}\n                    </Typography>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Typography\n                        component=\"div\"\n                        variant=\"h3\"\n                        sx={{\n                          mr: 1\n                        }}\n                      >\n                        15.594\n                      </Typography>\n                      <Label color=\"success\">28.75%</Label>\n                    </Box>\n                  </Box>\n                </Box>\n              }\n            />\n            <Box\n              sx={{\n                mt: { xs: 2, sm: 0 }\n              }}\n              alignSelf=\"center\"\n            >\n              <Button size=\"small\" href=\"#\">\n                {t('Visit URL')}\n              </Button>\n            </Box>\n          </ListItem>\n        </List>\n      </CardContent>\n      <Divider />\n      <CardActions\n        sx={{\n          py: 2,\n          height: '100%',\n          flex: 1,\n          justifyContent: 'center'\n        }}\n      >\n        <Button size=\"small\" variant=\"contained\" color=\"primary\">\n          {t('Advanced View')}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default TopLandingPages;\n","import {\n  Link,\n  CardContent,\n  Avatar,\n  Box,\n  Typography,\n  ListItemAvatar,\n  Card,\n  ListItemText,\n  ListItem,\n  styled\n} from '@mui/material';\n\nimport { useTranslation } from 'react-i18next';\nimport BusinessTwoToneIcon from '@mui/icons-material/BusinessTwoTone';\n\nconst AvatarError = styled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.error.main};\n      color: ${theme.palette.getContrastText(theme.colors.error.main)};\n      width: ${theme.spacing(8)};\n      height: ${theme.spacing(8)};\n      box-shadow: ${theme.colors.shadows.error};\n`\n);\n\nconst CardContentWrapper = styled(CardContent)(\n  ({ theme }) => `\n     padding: ${theme.spacing(2.5, 3, 3)};\n  \n     &:last-child {\n     padding-bottom: 0;\n     }\n`\n);\n\nfunction PendingInvitations() {\n  const { t } = useTranslation();\n\n  return (\n    <Card>\n      <CardContentWrapper>\n        <Typography variant=\"overline\" color=\"text.primary\">\n          {t('Pending Invitations')}\n        </Typography>\n\n        <ListItem\n          disableGutters\n          sx={{\n            my: 1\n          }}\n          component=\"div\"\n        >\n          <ListItemAvatar>\n            <AvatarError variant=\"rounded\">\n              <BusinessTwoToneIcon fontSize=\"large\" />\n            </AvatarError>\n          </ListItemAvatar>\n\n          <ListItemText\n            primary=\"19\"\n            primaryTypographyProps={{\n              variant: 'h1',\n              sx: {\n                ml: 2\n              },\n              noWrap: true\n            }}\n          />\n        </ListItem>\n        <ListItem\n          disableGutters\n          sx={{\n            mt: 0.5,\n            mb: 1.5\n          }}\n          component=\"div\"\n        >\n          <ListItemText\n            primary={\n              <>\n                <Link fontWeight=\"bold\" href=\"#\">\n                  {t('See all invitations')}\n                </Link>\n                <Box\n                  component=\"span\"\n                  sx={{\n                    pl: 0.5\n                  }}\n                >\n                  {t('not opened yet.')}\n                </Box>\n              </>\n            }\n            primaryTypographyProps={{ variant: 'body2', noWrap: true }}\n          />\n        </ListItem>\n      </CardContentWrapper>\n    </Card>\n  );\n}\n\nexport default PendingInvitations;\n","import {\n  CardHeader,\n  Divider,\n  Card,\n  LinearProgress,\n  List,\n  ListItem,\n  Box,\n  Typography,\n  styled\n} from '@mui/material';\n\nimport { useTranslation } from 'react-i18next';\nimport deFlag from 'country-flag-icons/3x2/DE.svg';\nimport usFlag from 'country-flag-icons/3x2/US.svg';\nimport esFlag from 'country-flag-icons/3x2/ES.svg';\nimport frFlag from 'country-flag-icons/3x2/FR.svg';\nimport cnFlag from 'country-flag-icons/3x2/CN.svg';\n\nconst ImageWrapper = styled('img')(\n  ({ theme }) => `\n        margin-right: ${theme.spacing(1)};\n        width: 36px;\n`\n);\n\nconst LinearProgressWrapper = styled(LinearProgress)(\n  ({ theme }) => `\n        flex-grow: 1;\n        margin-right: ${theme.spacing(1)};\n`\n);\n\nconst ListItemWrapper = styled(ListItem)(\n  () => `\n        border-radius: 0;\n`\n);\n\nfunction SessionsByCountry() {\n  const { t } = useTranslation();\n\n  return (\n    <Card>\n      <CardHeader title={t('Sessions by Country')} />\n      <Divider />\n      <List disablePadding component=\"nav\">\n        <ListItemWrapper\n          sx={{\n            py: 3.15\n          }}\n        >\n          <ImageWrapper alt=\"USA\" src={usFlag} />\n          <Typography\n            variant=\"h5\"\n            color=\"text.primary\"\n            noWrap\n            sx={{\n              minWidth: 80\n            }}\n          >\n            USA\n          </Typography>\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n            sx={{\n              ml: 1,\n              flexGrow: 1\n            }}\n          >\n            <LinearProgressWrapper\n              value={57}\n              color=\"primary\"\n              variant=\"determinate\"\n            />\n            <Typography variant=\"h4\" color=\"text.primary\">\n              57%\n            </Typography>\n          </Box>\n        </ListItemWrapper>\n        <Divider />\n        <ListItemWrapper\n          sx={{\n            py: 3.15\n          }}\n        >\n          <ImageWrapper alt=\"Germany\" src={deFlag} />\n          <Typography\n            variant=\"h5\"\n            color=\"text.primary\"\n            noWrap\n            sx={{\n              minWidth: 80\n            }}\n          >\n            Germany\n          </Typography>\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n            sx={{\n              ml: 1,\n              flexGrow: 1\n            }}\n          >\n            <LinearProgressWrapper\n              value={34}\n              color=\"primary\"\n              variant=\"determinate\"\n            />\n            <Typography variant=\"h4\" color=\"text.primary\">\n              34%\n            </Typography>\n          </Box>\n        </ListItemWrapper>\n        <Divider />\n        <ListItemWrapper\n          sx={{\n            py: 3.15\n          }}\n        >\n          <ImageWrapper alt=\"France\" src={frFlag} />\n          <Typography\n            variant=\"h5\"\n            color=\"text.primary\"\n            noWrap\n            sx={{\n              minWidth: 80\n            }}\n          >\n            France\n          </Typography>\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n            sx={{\n              ml: 1,\n              flexGrow: 1\n            }}\n          >\n            <LinearProgressWrapper\n              value={21}\n              color=\"primary\"\n              variant=\"determinate\"\n            />\n            <Typography variant=\"h4\" color=\"text.primary\">\n              21%\n            </Typography>\n          </Box>\n        </ListItemWrapper>\n        <Divider />\n        <ListItemWrapper\n          sx={{\n            py: 3.15\n          }}\n        >\n          <ImageWrapper alt=\"Spain\" src={esFlag} />\n          <Typography\n            variant=\"h5\"\n            color=\"text.primary\"\n            noWrap\n            sx={{\n              minWidth: 80\n            }}\n          >\n            Spain\n          </Typography>\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n            sx={{\n              ml: 1,\n              flexGrow: 1\n            }}\n          >\n            <LinearProgressWrapper\n              value={13}\n              color=\"primary\"\n              variant=\"determinate\"\n            />\n            <Typography variant=\"h4\" color=\"text.primary\">\n              13%\n            </Typography>\n          </Box>\n        </ListItemWrapper>\n        <Divider />\n        <ListItemWrapper\n          sx={{\n            py: 3.15\n          }}\n        >\n          <ImageWrapper alt=\"China\" src={cnFlag} />\n          <Typography\n            variant=\"h5\"\n            color=\"text.primary\"\n            noWrap\n            sx={{\n              minWidth: 80\n            }}\n          >\n            China\n          </Typography>\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n            sx={{\n              ml: 1,\n              flexGrow: 1\n            }}\n          >\n            <LinearProgressWrapper\n              value={71}\n              color=\"primary\"\n              variant=\"determinate\"\n            />\n            <Typography variant=\"h4\" color=\"text.primary\">\n              71%\n            </Typography>\n          </Box>\n        </ListItemWrapper>\n        <Divider />\n      </List>\n    </Card>\n  );\n}\n\nexport default SessionsByCountry;\n","import { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ExpandMoreTwoToneIcon from '@mui/icons-material/ExpandMoreTwoTone';\nimport Chart from 'react-apexcharts';\n\nimport {\n  Button,\n  Card,\n  Box,\n  CardContent,\n  CardHeader,\n  Divider,\n  Menu,\n  MenuItem,\n  CardActions,\n  Grid,\n  Typography,\n  styled,\n  useTheme,\n  Tabs,\n  Tab\n} from '@mui/material';\n\nconst CardActionsWrapper = styled(CardActions)(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: 0;\n      display: block;\n`\n);\n\nconst TabsContainerWrapper = styled(CardContent)(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n`\n);\n\nconst EmptyResultsWrapper = styled('img')(\n  ({ theme }) => `\n      max-width: 100%;\n      width: auto;\n      height: ${theme.spacing(17)};\n      margin-top: ${theme.spacing(2)};\n`\n);\n\nfunction TrafficSources() {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const periods = [\n    {\n      value: 'today',\n      text: t('Today')\n    },\n    {\n      value: 'yesterday',\n      text: t('Yesterday')\n    },\n    {\n      value: 'last_month',\n      text: t('Last month')\n    },\n    {\n      value: 'last_year',\n      text: t('Last year')\n    }\n  ];\n\n  const data = {\n    users: 2.593,\n    pagesSession: 2.66,\n    newSessions: '82.05%',\n    avgSessionDuration: '00:03:56',\n    bounceRate: '49.75%',\n    sessions: 9.381\n  };\n\n  const actionRef1 = useRef(null);\n  const [openPeriod, setOpenMenuPeriod] = useState(false);\n  const [period, setPeriod] = useState('Select period');\n\n  const [currentTab, setCurrentTab] = useState('referral');\n\n  const tabs = [\n    { value: 'direct', label: t('Direct') },\n    { value: 'referral', label: t('Referral') },\n    { value: 'organic', label: t('Organic') },\n    { value: 'social', label: t('Social') }\n  ];\n\n  const handleTabsChange = (_event, value) => {\n    setCurrentTab(value);\n  };\n\n  const chartOptions = {\n    stroke: {\n      curve: 'smooth',\n      width: [0, 5]\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    chart: {\n      background: 'transparent',\n      toolbar: {\n        show: false\n      }\n    },\n    markers: {\n      hover: {\n        sizeOffset: 2\n      },\n      shape: 'circle',\n      size: 6,\n      strokeWidth: 3,\n      strokeOpacity: 1,\n      strokeColors: theme.colors.alpha.white[100],\n      colors: [theme.colors.error.main]\n    },\n    colors: [theme.colors.primary.main, theme.colors.error.main],\n    fill: {\n      opacity: 1\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        borderRadius: 8,\n        columnWidth: '25%'\n      }\n    },\n    labels: [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December'\n    ],\n    dataLabels: {\n      enabled: false\n    },\n    grid: {\n      strokeDashArray: 5,\n      borderColor: theme.palette.divider\n    },\n    legend: {\n      show: false\n    },\n    xaxis: {\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    },\n    yaxis: {\n      tickAmount: 6,\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    }\n  };\n\n  const chartData = [\n    {\n      name: 'Past Referrals',\n      type: 'column',\n      data: [1008, 940, 1010, 821, 1035, 1030, 957, 926, 993, 1021, 997, 879]\n    },\n    {\n      name: 'Current Referrals',\n      type: 'line',\n      data: [648, 745, 897, 743, 635, 842, 811, 696, 878, 987, 747, 731]\n    }\n  ];\n\n  return (\n    <Card>\n      <CardHeader\n        action={\n          <>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              ref={actionRef1}\n              onClick={() => setOpenMenuPeriod(true)}\n              endIcon={<ExpandMoreTwoToneIcon fontSize=\"small\" />}\n            >\n              {period}\n            </Button>\n            <Menu\n              disableScrollLock\n              anchorEl={actionRef1.current}\n              onClose={() => setOpenMenuPeriod(false)}\n              open={openPeriod}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right'\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right'\n              }}\n            >\n              {periods.map((_period) => (\n                <MenuItem\n                  key={_period.value}\n                  onClick={() => {\n                    setPeriod(_period.text);\n                    setOpenMenuPeriod(false);\n                  }}\n                >\n                  {_period.text}\n                </MenuItem>\n              ))}\n            </Menu>\n          </>\n        }\n        title={t('Traffic Sources')}\n      />\n      <Divider />\n      <TabsContainerWrapper>\n        <Tabs\n          onChange={handleTabsChange}\n          value={currentTab}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          textColor=\"primary\"\n          indicatorColor=\"primary\"\n        >\n          {tabs.map((tab) => (\n            <Tab key={tab.value} label={tab.label} value={tab.value} />\n          ))}\n        </Tabs>\n      </TabsContainerWrapper>\n      <Divider\n        sx={{\n          display: { xs: 'none', sm: 'flex' }\n        }}\n      />\n      <CardContent>\n        {currentTab === 'direct' && (\n          <Box\n            sx={{\n              textAlign: 'center'\n            }}\n          >\n            <EmptyResultsWrapper src=\"/static/images/placeholders/illustrations/1.svg\" />\n            <Typography\n              align=\"center\"\n              variant=\"h4\"\n              fontWeight=\"normal\"\n              color=\"text.secondary\"\n              sx={{\n                mt: 3\n              }}\n              gutterBottom\n            >\n              There are no charts generated for <b>Direct</b> traffic sources!\n            </Typography>\n            <Button\n              variant=\"contained\"\n              sx={{\n                my: 3\n              }}\n            >\n              {t('Generate Chart')}\n            </Button>\n          </Box>\n        )}\n        {currentTab === 'referral' && (\n          <Chart\n            options={chartOptions}\n            series={chartData}\n            type=\"line\"\n            height={306}\n          />\n        )}\n        {currentTab === 'organic' && (\n          <Box\n            sx={{\n              textAlign: 'center'\n            }}\n          >\n            <EmptyResultsWrapper src=\"/static/images/placeholders/illustrations/1.svg\" />\n\n            <Typography\n              align=\"center\"\n              variant=\"h4\"\n              fontWeight=\"normal\"\n              color=\"text.secondary\"\n              sx={{\n                mt: 3\n              }}\n              gutterBottom\n            >\n              There are no charts generated for <b>Organic</b> traffic sources!\n            </Typography>\n            <Button\n              variant=\"contained\"\n              sx={{\n                my: 3\n              }}\n            >\n              {t('Generate Chart')}\n            </Button>\n          </Box>\n        )}\n        {currentTab === 'social' && (\n          <Box\n            sx={{\n              textAlign: 'center'\n            }}\n          >\n            <EmptyResultsWrapper src=\"/static/images/placeholders/illustrations/1.svg\" />\n\n            <Typography\n              align=\"center\"\n              variant=\"h4\"\n              fontWeight=\"normal\"\n              color=\"text.secondary\"\n              sx={{\n                mt: 3\n              }}\n              gutterBottom\n            >\n              There are no charts generated for <b>Social</b> traffic sources!\n            </Typography>\n            <Button\n              variant=\"contained\"\n              sx={{\n                my: 3\n              }}\n            >\n              {t('Generate Chart')}\n            </Button>\n          </Box>\n        )}\n      </CardContent>\n      <Divider />\n      <CardActionsWrapper>\n        <Box>\n          <Grid container alignItems=\"center\">\n            <Grid\n              xs={12}\n              sm={6}\n              md={4}\n              item\n              sx={{\n                position: 'relative'\n              }}\n            >\n              <Box\n                component=\"span\"\n                sx={{\n                  display: { xs: 'none', sm: 'inline-block' }\n                }}\n              >\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Box>\n              <Box\n                sx={{\n                  p: 3\n                }}\n              >\n                <Box>\n                  <Typography align=\"center\" variant=\"h3\" gutterBottom>\n                    {data.users}\n                  </Typography>\n                  <Typography\n                    align=\"center\"\n                    variant=\"body1\"\n                    color=\"text.secondary\"\n                  >\n                    {t('Users')}\n                  </Typography>\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid\n              xs={12}\n              sm={6}\n              md={4}\n              item\n              sx={{\n                position: 'relative'\n              }}\n            >\n              <Box\n                component=\"span\"\n                sx={{\n                  display: { xs: 'none', sm: 'inline-block' }\n                }}\n              >\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Box>\n              <Box\n                sx={{\n                  p: 3\n                }}\n              >\n                <Box>\n                  <Typography align=\"center\" variant=\"h3\" gutterBottom>\n                    {data.sessions}\n                  </Typography>\n                  <Typography\n                    align=\"center\"\n                    variant=\"body1\"\n                    color=\"text.secondary\"\n                  >\n                    {t('Sessions')}\n                  </Typography>\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid\n              xs={12}\n              sm={6}\n              md={4}\n              item\n              sx={{\n                position: 'relative'\n              }}\n            >\n              <Box\n                component=\"span\"\n                sx={{\n                  display: { xs: 'none', sm: 'inline-block' }\n                }}\n              >\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Box>\n              <Box\n                sx={{\n                  p: 3\n                }}\n              >\n                <Box>\n                  <Typography align=\"center\" variant=\"h3\" gutterBottom>\n                    {data.pagesSession}\n                  </Typography>\n                  <Typography\n                    align=\"center\"\n                    variant=\"body1\"\n                    color=\"text.secondary\"\n                  >\n                    {t('pages/session')}\n                  </Typography>\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid\n              xs={12}\n              sm={6}\n              md={4}\n              item\n              sx={{\n                position: 'relative'\n              }}\n            >\n              <Box\n                component=\"span\"\n                sx={{\n                  display: { xs: 'none', sm: 'inline-block' }\n                }}\n              >\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Box>\n              <Box\n                sx={{\n                  p: 3\n                }}\n              >\n                <Box>\n                  <Typography align=\"center\" variant=\"h3\" gutterBottom>\n                    {data.avgSessionDuration}\n                  </Typography>\n                  <Typography\n                    align=\"center\"\n                    variant=\"body1\"\n                    color=\"text.secondary\"\n                  >\n                    {t('Avg. Session Duration')}\n                  </Typography>\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid\n              xs={12}\n              sm={6}\n              md={4}\n              item\n              sx={{\n                position: 'relative'\n              }}\n            >\n              <Box\n                component=\"span\"\n                sx={{\n                  display: { xs: 'none', sm: 'inline-block' }\n                }}\n              >\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Box>\n              <Box\n                sx={{\n                  p: 3\n                }}\n              >\n                <Box>\n                  <Typography align=\"center\" variant=\"h3\" gutterBottom>\n                    {data.newSessions}\n                  </Typography>\n                  <Typography\n                    align=\"center\"\n                    variant=\"body1\"\n                    color=\"text.secondary\"\n                  >\n                    {t('% New Sessions')}\n                  </Typography>\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid\n              xs={12}\n              sm={6}\n              md={4}\n              item\n              sx={{\n                position: 'relative'\n              }}\n            >\n              <Box\n                component=\"span\"\n                sx={{\n                  display: { xs: 'none', sm: 'inline-block' }\n                }}\n              >\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Box>\n              <Box\n                sx={{\n                  p: 3\n                }}\n              >\n                <Box>\n                  <Typography align=\"center\" variant=\"h3\" gutterBottom>\n                    {data.bounceRate}\n                  </Typography>\n                  <Typography\n                    align=\"center\"\n                    variant=\"body1\"\n                    color=\"text.secondary\"\n                  >\n                    {t('Bounce Rate')}\n                  </Typography>\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n          </Grid>\n        </Box>\n      </CardActionsWrapper>\n    </Card>\n  );\n}\n\nexport default TrafficSources;\n","import { Grid, Typography, Avatar, useTheme } from '@mui/material';\nimport useAuth from 'src/hooks/useAuth';\nimport { useTranslation } from 'react-i18next';\nimport { format } from 'date-fns';\n\nfunction PageHeader() {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const theme = useTheme();\n\n  return (\n    <Grid container alignItems=\"center\">\n      <Grid item>\n        <Avatar\n          sx={{\n            mr: 2,\n            width: theme.spacing(8),\n            height: theme.spacing(8)\n          }}\n          variant=\"rounded\"\n          alt={user.name}\n          src={user.avatar}\n        />\n      </Grid>\n      <Grid item>\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n          {t('Welcome')}, {user.name}!\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          {t('These are your analytics stats for today')},{' '}\n          <b>{format(new Date(), 'MMMM dd yyyy')}</b>\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PageHeader;\n","import Footer from 'src/components/Footer';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { Helmet } from 'react-helmet-async';\nimport { Grid } from '@mui/material';\n\nimport AudienceOverview from './AudienceOverview';\nimport Conversions from './Conversions';\nimport TopLandingPages from './TopLandingPages';\nimport ActiveReferrals from './ActiveReferrals';\nimport PendingInvitations from './PendingInvitations';\nimport BounceRate from './BounceRate';\nimport ConversionsAlt from './ConversionsAlt';\nimport SessionsByCountry from './SessionsByCountry';\nimport TrafficSources from './TrafficSources';\nimport PageHeader from './PageHeader';\n\nfunction DashboardAnalytics() {\n  return (\n    <>\n      <Helmet>\n        <title>Analytics Dashboard</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageHeader />\n      </PageTitleWrapper>\n      <Grid\n        sx={{\n          px: 4\n        }}\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        spacing={4}\n      >\n        <Grid item lg={8} md={6} xs={12}>\n          <Grid\n            container\n            spacing={4}\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"stretch\"\n          >\n            <Grid item sm={6} xs={12}>\n              <ActiveReferrals />\n            </Grid>\n            <Grid item sm={6} xs={12}>\n              <PendingInvitations />\n            </Grid>\n            <Grid item sm={6} xs={12}>\n              <BounceRate />\n            </Grid>\n            <Grid item sm={6} xs={12}>\n              <ConversionsAlt />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={4} md={6} xs={12}>\n          <SessionsByCountry />\n        </Grid>\n        <Grid item xs={12}>\n          <AudienceOverview />\n        </Grid>\n        <Grid item md={5} xs={12}>\n          <Conversions />\n        </Grid>\n        <Grid item md={7} xs={12}>\n          <TopLandingPages />\n        </Grid>\n        <Grid item xs={12}>\n          <TrafficSources />\n        </Grid>\n      </Grid>\n      <Footer />\n    </>\n  );\n}\n\nexport default DashboardAnalytics;\n","import PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\n\nconst LabelWrapper = styled('span')(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: ${theme.spacing(0.5, 1)};\n      font-size: ${theme.typography.pxToRem(13)};\n      border-radius: ${theme.general.borderRadius};\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      max-height: ${theme.spacing(3)};\n      \n      &.MuiLabel {\n        &-primary {\n          background-color: ${theme.colors.primary.lighter};\n          color: ${theme.palette.primary.main}\n        }\n\n        &-black {\n          background-color: ${theme.colors.alpha.black[100]};\n          color: ${theme.colors.alpha.white[100]};\n        }\n        \n        &-secondary {\n          background-color: ${theme.colors.secondary.lighter};\n          color: ${theme.palette.secondary.main}\n        }\n        \n        &-success {\n          background-color: ${theme.colors.success.lighter};\n          color: ${theme.palette.success.main}\n        }\n        \n        &-warning {\n          background-color: ${theme.colors.warning.lighter};\n          color: ${theme.palette.warning.main}\n        }\n              \n        &-error {\n          background-color: ${theme.colors.error.lighter};\n          color: ${theme.palette.error.main}\n        }\n        \n        &-info {\n          background-color: ${theme.colors.info.lighter};\n          color: ${theme.palette.info.main}\n        }\n      }\n`\n);\n\nconst Label = ({ className, color = 'secondary', children, ...rest }) => {\n  return (\n    <LabelWrapper className={`MuiLabel-${color}`} {...rest}>\n      {children}\n    </LabelWrapper>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'primary',\n    'black',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info'\n  ])\n};\n\nexport default Label;\n","import PropTypes from 'prop-types';\nimport { Box, styled } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4)};\n`\n);\n\nconst PageTitleWrapper = ({ children }) => {\n  return (\n    <>\n      <PageTitle className=\"MuiPageTitle-wrapper\">{children}</PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","import PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\n\nimport { CircularProgressbarWithChildren } from 'react-circular-progressbar';\n\nconst GaugeWrapper = styled(CircularProgressbarWithChildren)(\n  ({ theme }) => `\n  \n  &.CircularProgressbar {\n    vertical-align: middle;\n    width: 80%;\n    margin: 0 auto;\n    display: flex;\n    \n    & + [data-test-id=\"CircularProgressbarWithChildren__children\"] {\n      margin-top: 0 !important;\n      top: 0;\n    }\n\n    .CircularProgressbar-path {\n      stroke-linecap: round;\n      transition: stroke-dashoffset 0.5s ease 0s;\n    }\n  \n    .CircularProgressbar-trail {\n      stroke-linecap: round;\n    }\n    \n    .CircularProgressbar-text {\n      font-size: ${theme.typography.pxToRem(15)};\n      dominant-baseline: middle;\n      text-anchor: middle;\n      font-weight: bold;\n    }\n  \n    &.MuiGauge {\n      &-xsmall {\n        max-width: 48px;\n      }\n      &-small {\n        max-width: 62px;\n        .CircularProgressbar-text {\n          font-weight: bold;\n          font-size: ${theme.typography.pxToRem(24)};\n        }\n      }\n      &-medium {\n        max-width: 120px;\n      }\n      &-large {\n        max-width: 140px;\n      }\n      &-xlarge {\n        max-width: 180px;\n      }\n      &-xxlarge {\n        max-width: 230px;\n      }\n      \n      &-primary {\n\n        .CircularProgressbar-path {\n          stroke: ${theme.colors.primary.main};\n        }\n    \n        .CircularProgressbar-trail {\n          stroke: ${theme.colors.alpha.black[10]};\n        }\n    \n        .CircularProgressbar-text {\n          fill: ${theme.colors.alpha.black[100]};\n        }\n    \n        .CircularProgressbar-background {\n          fill: rgba(${theme.colors.primary.main}, .05);\n        }\n      }\n\n      &-success {\n\n        .CircularProgressbar-path {\n          stroke: ${theme.colors.success.main};\n        }\n    \n        .CircularProgressbar-trail {\n          stroke: ${theme.colors.alpha.black[10]};\n        }\n    \n        .CircularProgressbar-text {\n          fill: ${theme.colors.alpha.black[100]};\n        }\n    \n        .CircularProgressbar-background {\n          fill: rgba(${theme.colors.success.main}, .05);\n        }\n      }\n\n      &-warning {\n\n        .CircularProgressbar-path {\n          stroke: ${theme.colors.warning.main};\n        }\n    \n        .CircularProgressbar-trail {\n          stroke: ${theme.colors.alpha.black[10]};\n        }\n    \n        .CircularProgressbar-text {\n          fill: ${theme.colors.alpha.black[100]};\n        }\n    \n        .CircularProgressbar-background {\n          fill: rgba(${theme.colors.warning.main}, .05);\n        }\n      }\n      \n      &-error {\n\n        .CircularProgressbar-path {\n          stroke: ${theme.colors.error.main};\n        }\n    \n        .CircularProgressbar-trail {\n          stroke: ${theme.colors.alpha.black[10]};\n        }\n    \n        .CircularProgressbar-text {\n          fill: ${theme.colors.alpha.black[100]};\n        }\n    \n        .CircularProgressbar-background {\n          fill: rgba(${theme.colors.error.main}, .05);\n        }\n      }\n      \n      &-info {\n\n        .CircularProgressbar-path {\n          stroke: ${theme.colors.info.main};\n        }\n    \n        .CircularProgressbar-trail {\n          stroke: ${theme.colors.alpha.black[10]};\n        }\n    \n        .CircularProgressbar-text {\n          fill: ${theme.colors.alpha.black[100]};\n        }\n    \n        .CircularProgressbar-background {\n          fill: rgba(${theme.colors.info.main}, .05);\n        }\n      }\n\n      &-success {\n\n        .CircularProgressbar-path {\n          stroke: ${theme.colors.success.main};\n        }\n    \n        .CircularProgressbar-trail {\n          stroke: ${theme.colors.alpha.black[10]};\n        }\n    \n        .CircularProgressbar-text {\n          fill: ${theme.colors.alpha.black[100]};\n        }\n    \n        .CircularProgressbar-background {\n          fill: rgba(${theme.colors.success.main}, .05);\n        }\n      }\n\n      &-warning {\n\n        .CircularProgressbar-path {\n          stroke: ${theme.colors.warning.main};\n        }\n    \n        .CircularProgressbar-trail {\n          stroke: ${theme.colors.alpha.black[10]};\n        }\n    \n        .CircularProgressbar-text {\n          fill: ${theme.colors.alpha.black[100]};\n        }\n    \n        .CircularProgressbar-background {\n          fill: rgba(${theme.colors.warning.main}, .05);\n        }\n      }\n      \n      &-error {\n\n        .CircularProgressbar-path {\n          stroke: ${theme.colors.error.main};\n        }\n    \n        .CircularProgressbar-trail {\n          stroke: ${theme.colors.alpha.black[10]};\n        }\n    \n        .CircularProgressbar-text {\n          fill: ${theme.colors.alpha.black[100]};\n        }\n    \n        .CircularProgressbar-background {\n          fill: rgba(${theme.colors.error.main}, .05);\n        }\n      }\n      \n      &-info {\n\n        .CircularProgressbar-path {\n          stroke: ${theme.colors.info.main};\n        }\n    \n        .CircularProgressbar-trail {\n          stroke: ${theme.colors.alpha.black[10]};\n        }\n    \n        .CircularProgressbar-text {\n          fill: ${theme.colors.alpha.black[100]};\n        }\n    \n        .CircularProgressbar-background {\n          fill: rgba(${theme.colors.info.main}, .05);\n        }\n      }\n      \n      &-white {\n\n        .CircularProgressbar-path {\n          stroke: ${theme.colors.alpha.white[100]};\n        }\n    \n        .CircularProgressbar-trail {\n          stroke: ${theme.colors.alpha.white[30]};\n        }\n    \n        .CircularProgressbar-text {\n          fill: ${theme.colors.alpha.white[100]};\n        }\n      }\n\n      &-trueWhite {\n\n        .CircularProgressbar-path {\n          stroke: ${theme.colors.alpha.trueWhite[100]};\n        }\n    \n        .CircularProgressbar-trail {\n          stroke: ${theme.colors.alpha.trueWhite[30]};;\n        }\n    \n        .CircularProgressbar-text {\n          fill: ${theme.colors.alpha.trueWhite[100]};\n        }\n      }\n    }\n  }\n`\n);\n\nconst Gauge = ({\n  className,\n  color = 'primary',\n  size = 'medium',\n  circleRatio,\n  value,\n  styles,\n  text,\n  strokeWidth,\n  children,\n  ...rest\n}) => {\n  return (\n    <GaugeWrapper\n      circleRatio={circleRatio}\n      value={value}\n      text={text}\n      strokeWidth={strokeWidth}\n      styles={styles}\n      className={`MuiGauge-${color} MuiGauge-${size}`}\n      {...rest}\n    >\n      {children}\n    </GaugeWrapper>\n  );\n};\n\nGauge.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  styles: PropTypes.any,\n  value: PropTypes.number,\n  text: PropTypes.any,\n  strokeWidth: PropTypes.number,\n  circleRatio: PropTypes.number,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info',\n    'white',\n    'trueWhite'\n  ]),\n  size: PropTypes.oneOf([\n    'xsmall',\n    'small',\n    'medium',\n    'large',\n    'xlarge',\n    'xxlarge'\n  ])\n};\n\nexport default Gauge;\n","import {\n  Link,\n  CardContent,\n  Avatar,\n  Box,\n  Typography,\n  ListItemAvatar,\n  Card,\n  ListItemText,\n  ListItem,\n  styled\n} from '@mui/material';\n\nimport { useTranslation } from 'react-i18next';\nimport AssessmentTwoToneIcon from '@mui/icons-material/AssessmentTwoTone';\n\nconst AvatarSuccess = styled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.success.main};\n      color: ${theme.palette.primary.contrastText};\n      width: ${theme.spacing(8)};\n      height: ${theme.spacing(8)};\n      box-shadow: ${theme.colors.shadows.success};\n`\n);\n\nconst CardContentWrapper = styled(CardContent)(\n  ({ theme }) => `\n     padding: ${theme.spacing(2.5, 3, 3)};\n  \n     &:last-child {\n     padding-bottom: 0;\n     }\n`\n);\n\nfunction ActiveReferrals() {\n  const { t } = useTranslation();\n\n  return (\n    <Card>\n      <CardContentWrapper>\n        <Typography variant=\"overline\" color=\"text.primary\">\n          {t('Active Referrals')}\n        </Typography>\n\n        <ListItem\n          disableGutters\n          sx={{\n            my: 1\n          }}\n          component=\"div\"\n        >\n          <ListItemAvatar>\n            <AvatarSuccess variant=\"rounded\">\n              <AssessmentTwoToneIcon fontSize=\"large\" />\n            </AvatarSuccess>\n          </ListItemAvatar>\n\n          <ListItemText\n            primary=\"275\"\n            primaryTypographyProps={{\n              variant: 'h1',\n              sx: {\n                ml: 2\n              },\n              noWrap: true\n            }}\n          />\n        </ListItem>\n        <ListItem\n          disableGutters\n          sx={{\n            mt: 0.5,\n            mb: 1.5\n          }}\n          component=\"div\"\n        >\n          <ListItemText\n            primary={\n              <>\n                <Link fontWeight=\"bold\" href=\"#\">\n                  {t('See referring domains')}\n                </Link>\n                <Box\n                  component=\"span\"\n                  sx={{\n                    pl: 0.5\n                  }}\n                >\n                  {t('which sent most traffic')}.\n                </Box>\n              </>\n            }\n            primaryTypographyProps={{ variant: 'body2', noWrap: true }}\n          />\n        </ListItem>\n      </CardContentWrapper>\n    </Card>\n  );\n}\n\nexport default ActiveReferrals;\n","import {\n  Link,\n  CardContent,\n  Avatar,\n  Box,\n  Typography,\n  ListItemAvatar,\n  Card,\n  ListItemText,\n  ListItem,\n  styled\n} from '@mui/material';\n\nimport { useTranslation } from 'react-i18next';\nimport SportsBasketballTwoToneIcon from '@mui/icons-material/SportsBasketballTwoTone';\n\nconst AvatarPrimary = styled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.primary.main};\n      color: ${theme.palette.getContrastText(theme.colors.primary.main)};\n      width: ${theme.spacing(8)};\n      height: ${theme.spacing(8)};\n      box-shadow: ${theme.colors.shadows.primary};\n`\n);\n\nconst CardContentWrapper = styled(CardContent)(\n  ({ theme }) => `\n     padding: ${theme.spacing(2.5, 3, 3)};\n  \n     &:last-child {\n     padding-bottom: 0;\n     }\n`\n);\n\nfunction ActiveReferrals() {\n  const { t } = useTranslation();\n\n  return (\n    <Card>\n      <CardContentWrapper>\n        <Typography variant=\"overline\" color=\"text.primary\">\n          {t('Bounce Rate')}\n        </Typography>\n\n        <ListItem\n          disableGutters\n          sx={{\n            my: 1\n          }}\n          component=\"div\"\n        >\n          <ListItemAvatar>\n            <AvatarPrimary variant=\"rounded\">\n              <SportsBasketballTwoToneIcon fontSize=\"large\" />\n            </AvatarPrimary>\n          </ListItemAvatar>\n\n          <ListItemText\n            primary=\"49.3%\"\n            primaryTypographyProps={{\n              variant: 'h1',\n              sx: {\n                ml: 2\n              },\n              noWrap: true\n            }}\n          />\n        </ListItem>\n        <ListItem\n          disableGutters\n          sx={{\n            mt: 0.5,\n            mb: 1.5\n          }}\n          component=\"div\"\n        >\n          <ListItemText\n            primary={\n              <>\n                <Link fontWeight=\"bold\" href=\"#\">\n                  {t('See all links')}\n                </Link>\n                <Box\n                  component=\"span\"\n                  sx={{\n                    pl: 0.5\n                  }}\n                >\n                  {t('with high bounce rate.')}\n                </Box>\n              </>\n            }\n            primaryTypographyProps={{ variant: 'body2', noWrap: true }}\n          />\n        </ListItem>\n      </CardContentWrapper>\n    </Card>\n  );\n}\n\nexport default ActiveReferrals;\n","import {\n  Link,\n  CardContent,\n  Avatar,\n  Box,\n  Typography,\n  ListItemAvatar,\n  Card,\n  ListItemText,\n  ListItem,\n  styled\n} from '@mui/material';\n\nimport { useTranslation } from 'react-i18next';\nimport LocalConvenienceStoreTwoToneIcon from '@mui/icons-material/LocalConvenienceStoreTwoTone';\n\nconst AvatarWarning = styled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.warning.main};\n      color:  ${theme.palette.primary.contrastText};\n      width: ${theme.spacing(8)};\n      height: ${theme.spacing(8)};\n      box-shadow: ${theme.colors.shadows.warning};\n`\n);\n\nconst CardContentWrapper = styled(CardContent)(\n  ({ theme }) => `\n     padding: ${theme.spacing(2.5, 3, 3)};\n  \n     &:last-child {\n     padding-bottom: 0;\n     }\n`\n);\n\nfunction ConversionsAlt() {\n  const { t } = useTranslation();\n\n  return (\n    <Card>\n      <CardContentWrapper>\n        <Typography variant=\"overline\" color=\"text.primary\">\n          {t('Conversion')}\n        </Typography>\n\n        <ListItem\n          disableGutters\n          sx={{\n            my: 1\n          }}\n          component=\"div\"\n        >\n          <ListItemAvatar>\n            <AvatarWarning variant=\"rounded\">\n              <LocalConvenienceStoreTwoToneIcon fontSize=\"large\" />\n            </AvatarWarning>\n          </ListItemAvatar>\n\n          <ListItemText\n            primary=\"55.2%\"\n            primaryTypographyProps={{\n              variant: 'h1',\n              sx: {\n                ml: 2\n              },\n              noWrap: true\n            }}\n          />\n        </ListItem>\n        <ListItem\n          disableGutters\n          sx={{\n            mt: 0.5,\n            mb: 1.5\n          }}\n          component=\"div\"\n        >\n          <ListItemText\n            primary={\n              <>\n                <Link fontWeight=\"bold\" href=\"#\">\n                  {t('See products')}\n                </Link>\n                <Box\n                  component=\"span\"\n                  sx={{\n                    pl: 0.5\n                  }}\n                >\n                  {t('with the best conversion rates.')}\n                </Box>\n              </>\n            }\n            primaryTypographyProps={{ variant: 'body2', noWrap: true }}\n          />\n        </ListItem>\n      </CardContentWrapper>\n    </Card>\n  );\n}\n\nexport default ConversionsAlt;\n"],"sourceRoot":""}