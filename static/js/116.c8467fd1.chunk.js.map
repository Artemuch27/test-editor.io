{"version":3,"sources":["content/management/Products/shop/Results.js","content/management/Products/shop/PageHeader.js","content/management/Products/shop/Sidebar.js","content/management/Products/shop/index.js"],"names":["Results","products","useState","page","setPage","limit","setLimit","t","useTranslation","enqueueSnackbar","useSnackbar","query","setQuery","toggleView","setToggleView","location","useLocation","handleCart","variant","preventDuplicate","anchorOrigin","vertical","horizontal","TransitionComponent","Slide","handlePageChange","_event","newPage","handleLimitChange","event","parseInt","target","value","filteredProducts","filter","product","matches","containsQuery","forEach","property","toLowerCase","includes","applyFilters","paginatedProducts","slice","applyPagination","AvatarWrapper","styled","Box","theme","spacing","transitions","create","IconButtonError","IconButton","colors","error","main","lighter","Grid","container","item","xs","Card","TextField","fullWidth","onChange","persist","InputProps","startAdornment","InputAdornment","position","placeholder","display","alignItems","justifyContent","Typography","component","length","ToggleButtonGroup","exclusive","newValue","ToggleButton","disableRipple","sx","py","fontWeight","color","align","map","md","p","Avatar","RouterLink","to","pathname","split","id","src","images","textAlign","px","mb","name","summary","Rating","readOnly","defaultValue","rating","precision","sale_price","pr","textDecorationLine","numeral","price","format","Text","pb","pt","Button","size","onClick","Divider","fontSize","stock","TablePagination","count","onPageChange","onRowsPerPageChange","rowsPerPage","rowsPerPageOptions","mr","orientation","flexItem","flex","my","gutterBottom","defaultProps","PageHeader","mt","sm","startIcon","AccordionSummaryWrapper","AccordionSummary","ListItemWrapper","ListItemButton","Sidebar","checked2","setChecked2","handleToggle2","currentIndex","indexOf","newChecked","push","splice","checked3","setChecked3","handleToggle3","setValue","Accordion","defaultExpanded","expandIcon","AccordionDetails","Slider","step","min","max","valueLabelDisplay","valueLabelFormat","List","ListItemIcon","minWidth","Checkbox","edge","checked","tabIndex","ListItemText","primary","primaryTypographyProps","DrawerWrapperMobile","Drawer","IconButtonToggle","ManagementProductsShop","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","isMountedRef","useRefMounted","setProducts","getProducts","useCallback","a","axios","get","response","current","data","console","useEffect","direction","anchor","open","onClose","Scrollbar","Footer"],"mappings":"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","file":"static/js/116.c8467fd1.chunk.js","sourcesContent":["import { useState } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\n\nimport {\n  Grid,\n  Typography,\n  Card,\n  Box,\n  TextField,\n  IconButton,\n  InputAdornment,\n  Avatar,\n  Button,\n  ToggleButton,\n  ToggleButtonGroup,\n  Rating,\n  Slide,\n  Divider,\n  styled,\n  TablePagination\n} from '@mui/material';\nimport FavoriteTwoToneIcon from '@mui/icons-material/FavoriteTwoTone';\nimport { useTranslation } from 'react-i18next';\nimport numeral from 'numeral';\nimport Text from 'src/components/Text';\nimport { useSnackbar } from 'notistack';\nimport SearchTwoToneIcon from '@mui/icons-material/SearchTwoTone';\nimport GridViewTwoToneIcon from '@mui/icons-material/GridViewTwoTone';\nimport TableRowsTwoToneIcon from '@mui/icons-material/TableRowsTwoTone';\n\nconst applyFilters = (products, query) => {\n  return products.filter((product) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['name'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (product[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    return matches;\n  });\n};\n\nconst applyPagination = (products, page, limit) => {\n  return products.slice(page * limit, page * limit + limit);\n};\n\nconst Results = ({ products }) => {\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(4);\n  const { t } = useTranslation();\n  const { enqueueSnackbar } = useSnackbar();\n  const [query, setQuery] = useState('');\n  const [toggleView, setToggleView] = useState('grid_view');\n  const location = useLocation();\n\n  const handleViewOrientation = (_event, newValue) => {\n    setToggleView(newValue);\n  };\n\n  const handleCart = () => {\n    enqueueSnackbar(t('You added a product to cart'), {\n      variant: 'success',\n      preventDuplicate: false,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      TransitionComponent: Slide\n    });\n  };\n\n  const handlePageChange = (_event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  const handleQueryChange = (event) => {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  const filteredProducts = applyFilters(products, query);\n  const paginatedProducts = applyPagination(filteredProducts, page, limit);\n\n  const AvatarWrapper = styled(Box)(\n    ({ theme }) => `\n      .MuiAvatar-root {\n        height: auto;\n        width: ${theme.spacing(26)};\n        transition: ${theme.transitions.create(['opacity'])};\n\n        &:hover {\n          opacity: .8;\n        }\n      }\n`\n  );\n\n  const IconButtonError = styled(IconButton)(\n    ({ theme }) => `\n       color: ${theme.colors.error.main};\n  \n       &:hover {\n        background: ${theme.colors.error.lighter};\n      }\n  `\n  );\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Card>\n          <TextField\n            fullWidth\n            onChange={handleQueryChange}\n            value={query}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchTwoToneIcon />\n                </InputAdornment>\n              )\n            }}\n            placeholder={t('Search by product name...')}\n          />\n        </Card>\n      </Grid>\n      <Grid item xs={12}>\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Box>\n            <Typography component=\"span\" variant=\"subtitle1\">\n              {t('Showing')}:\n            </Typography>{' '}\n            <b>\n              {filteredProducts.length} {t('products')}\n            </b>\n          </Box>\n          <ToggleButtonGroup\n            value={toggleView}\n            exclusive\n            onChange={handleViewOrientation}\n          >\n            <ToggleButton disableRipple value=\"list_view\">\n              <TableRowsTwoToneIcon />\n            </ToggleButton>\n            <ToggleButton disableRipple value=\"grid_view\">\n              <GridViewTwoToneIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Box>\n      </Grid>\n\n      {toggleView === 'grid_view' && (\n        <>\n          {paginatedProducts.length === 0 ? (\n            <Grid item xs={12}>\n              <Typography\n                sx={{\n                  py: 10\n                }}\n                variant=\"h3\"\n                fontWeight=\"normal\"\n                color=\"text.secondary\"\n                align=\"center\"\n              >\n                {t(\n                  \"We couldn't find any products matching your search criteria\"\n                )}\n              </Typography>\n            </Grid>\n          ) : (\n            <>\n              {paginatedProducts.map((product) => {\n                return (\n                  <Grid key={product.id} item xs={12} md={6}>\n                    <Card>\n                      <AvatarWrapper\n                        p={3}\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n                      >\n                        <Avatar\n                          component={RouterLink}\n                          to={`/${\n                            location.pathname.split('/')[1]\n                          }/management/commerce/products/single/${product.id}`}\n                          src={product.images[0]}\n                          variant=\"rounded\"\n                        />\n                      </AvatarWrapper>\n                      <Box textAlign=\"center\" px={3}>\n                        <Typography\n                          variant=\"h3\"\n                          sx={{\n                            mb: 1\n                          }}\n                        >\n                          {product.name}\n                        </Typography>\n                        <Typography variant=\"h6\" color=\"text.secondary\">\n                          {product.summary}\n                        </Typography>\n                        <Box py={2}>\n                          <Rating\n                            readOnly\n                            defaultValue={product.rating}\n                            precision={0.5}\n                          />\n                        </Box>\n                      </Box>\n                      <Box display=\"flex\" justifyContent=\"center\">\n                        <Box>\n                          <Typography\n                            component=\"span\"\n                            variant={product.sale_price !== 0 ? 'h4' : 'h3'}\n                            sx={{\n                              pr: 2,\n                              textDecorationLine:\n                                product.sale_price !== 0 ? 'line-through' : ''\n                            }}\n                          >\n                            ${numeral(product.price).format(`0,0.00`)}\n                          </Typography>\n                          {product.sale_price !== 0 && (\n                            <Typography component=\"span\" variant=\"h3\">\n                              <Text color=\"error\">\n                                ${numeral(product.sale_price).format(`0,0.00`)}\n                              </Text>\n                            </Typography>\n                          )}\n                        </Box>\n                      </Box>\n                      <Box pb={3} pt={1} display=\"flex\" justifyContent=\"center\">\n                        <Button\n                          size=\"small\"\n                          variant=\"outlined\"\n                          onClick={handleCart}\n                        >\n                          {t('Add to cart')}\n                        </Button>\n                      </Box>\n                      <Divider />\n                      <Box\n                        p={2}\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                      >\n                        <IconButtonError size=\"small\">\n                          <FavoriteTwoToneIcon fontSize=\"small\" />\n                        </IconButtonError>\n                        <Typography variant=\"subtitle2\">\n                          {t('In Stock')}:{' '}\n                          <Typography\n                            component=\"span\"\n                            color=\"text.primary\"\n                            variant=\"h4\"\n                          >\n                            {product.stock}\n                          </Typography>\n                        </Typography>\n                      </Box>\n                    </Card>\n                  </Grid>\n                );\n              })}\n              <Grid item xs={12}>\n                <Card\n                  sx={{\n                    p: 2\n                  }}\n                >\n                  <TablePagination\n                    component=\"div\"\n                    count={filteredProducts.length}\n                    onPageChange={handlePageChange}\n                    onRowsPerPageChange={handleLimitChange}\n                    page={page}\n                    rowsPerPage={limit}\n                    rowsPerPageOptions={[4, 8, 12]}\n                  />\n                </Card>\n              </Grid>\n            </>\n          )}\n        </>\n      )}\n      {toggleView === 'list_view' && (\n        <>\n          {paginatedProducts.length === 0 ? (\n            <Grid item xs={12}>\n              <Typography\n                sx={{\n                  py: 10\n                }}\n                variant=\"h3\"\n                fontWeight=\"normal\"\n                color=\"text.secondary\"\n                align=\"center\"\n              >\n                {t(\n                  \"We couldn't find any products matching your search criteria\"\n                )}\n              </Typography>\n            </Grid>\n          ) : (\n            <>\n              {paginatedProducts.map((product) => {\n                return (\n                  <Grid key={product.id} item xs={12}>\n                    <Card\n                      sx={{\n                        p: 2,\n                        display: { md: 'flex' },\n                        alignItems: { md: 'center' }\n                      }}\n                    >\n                      <AvatarWrapper\n                        p={2}\n                        sx={{\n                          justifyContent: { md: 'center' }\n                        }}\n                        display=\"flex\"\n                        alignItems=\"center\"\n                      >\n                        <Avatar\n                          component={RouterLink}\n                          to={`/${\n                            location.pathname.split('/')[1]\n                          }/management/commerce/products/single/${product.id}`}\n                          src={product.images[0]}\n                          variant=\"rounded\"\n                        />\n                      </AvatarWrapper>\n                      <Box\n                        component=\"span\"\n                        sx={{\n                          display: { xs: 'none', md: 'inline-block' }\n                        }}\n                      >\n                        <Divider\n                          sx={{\n                            mr: 2\n                          }}\n                          orientation=\"vertical\"\n                          flexItem\n                        />\n                      </Box>\n                      <Box flex={1} p={2}>\n                        <Rating\n                          readOnly\n                          defaultValue={product.rating}\n                          precision={0.5}\n                        />\n                        <Typography\n                          variant=\"h3\"\n                          sx={{\n                            my: 1\n                          }}\n                        >\n                          {product.name}\n                        </Typography>\n                        <Typography variant=\"subtitle2\">\n                          {product.summary}\n                        </Typography>\n                        <Box py={2}>\n                          <Typography\n                            component=\"span\"\n                            variant={product.sale_price !== 0 ? 'h4' : 'h3'}\n                            sx={{\n                              pr: 2,\n                              textDecorationLine:\n                                product.sale_price !== 0 ? 'line-through' : ''\n                            }}\n                          >\n                            ${numeral(product.price).format(`0,0.00`)}\n                          </Typography>\n                          {product.sale_price !== 0 && (\n                            <Typography component=\"span\" variant=\"h3\">\n                              <Text color=\"error\">\n                                ${numeral(product.sale_price).format(`0,0.00`)}\n                              </Text>\n                            </Typography>\n                          )}\n                        </Box>\n                        <Box\n                          display=\"flex\"\n                          alignItems=\"center\"\n                          justifyContent=\"space-between\"\n                        >\n                          <Box display=\"flex\" alignItems=\"center\">\n                            <Button\n                              sx={{\n                                mr: 2\n                              }}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              onClick={handleCart}\n                            >\n                              {t('Add to cart')}\n                            </Button>\n                            <IconButtonError size=\"small\">\n                              <FavoriteTwoToneIcon fontSize=\"small\" />\n                            </IconButtonError>\n                          </Box>\n\n                          <Typography variant=\"subtitle2\">\n                            {t('In Stock')}:{' '}\n                            <Typography\n                              component=\"span\"\n                              color=\"text.primary\"\n                              variant=\"h4\"\n                            >\n                              {product.stock}\n                            </Typography>\n                          </Typography>\n                        </Box>\n                      </Box>\n                    </Card>\n                  </Grid>\n                );\n              })}\n              <Grid item xs={12}>\n                <Card\n                  sx={{\n                    p: 2\n                  }}\n                >\n                  <TablePagination\n                    component=\"div\"\n                    count={filteredProducts.length}\n                    onPageChange={handlePageChange}\n                    onRowsPerPageChange={handleLimitChange}\n                    page={page}\n                    rowsPerPage={limit}\n                    rowsPerPageOptions={[4, 8, 12]}\n                  />\n                </Card>\n              </Grid>\n            </>\n          )}\n        </>\n      )}\n      {!toggleView && (\n        <Grid item xs={12}>\n          <Card\n            sx={{\n              textAlign: 'center',\n              p: 3\n            }}\n          >\n            <Typography\n              align=\"center\"\n              variant=\"h4\"\n              fontWeight=\"normal\"\n              color=\"text.secondary\"\n              sx={{\n                my: 5\n              }}\n              gutterBottom\n            >\n              {t(\n                'Choose between table or grid views for displaying the projects list.'\n              )}\n            </Typography>\n          </Card>\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nResults.propTypes = {\n  products: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  products: []\n};\n\nexport default Results;\n","import { Link as RouterLink, useLocation } from 'react-router-dom';\nimport { Box, Grid, Typography, Button } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\n\nfunction PageHeader() {\n  const { t } = useTranslation();\n  const location = useLocation();\n\n  return (\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n      <Grid item>\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Box>\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n              {t('Storefront')}\n            </Typography>\n            <Typography variant=\"subtitle2\">\n              {t('This is a list of all commerce products')}\n            </Typography>\n          </Box>\n        </Box>\n      </Grid>\n      <Grid item>\n        <Button\n          sx={{\n            mt: { xs: 2, sm: 0 }\n          }}\n          component={RouterLink}\n          startIcon={<EditTwoToneIcon />}\n          to={`/${\n            location.pathname.split('/')[1]\n          }/management/commerce/products`}\n          variant=\"contained\"\n        >\n          {t('Manage products')}\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PageHeader;\n","import { useState } from 'react';\n\nimport {\n  Typography,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Divider,\n  Card,\n  ListItemIcon,\n  Slider,\n  Checkbox,\n  Rating,\n  List,\n  ListItemButton,\n  ListItemText,\n  styled\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nconst AccordionSummaryWrapper = styled(AccordionSummary)(\n  () => `\n      &.Mui-expanded {\n        min-height: 48px;\n      }\n\n      .MuiAccordionSummary-content.Mui-expanded {\n        margin: 12px 0;\n      }\n  `\n);\n\nconst ListItemWrapper = styled(ListItemButton)(\n  () => `\n      &.MuiButtonBase-root {\n        border-radius: 0;\n      }\n  `\n);\n\nfunction Sidebar() {\n  const { t } = useTranslation();\n\n  const categories = [\n    {\n      id: 1,\n      name: 'Toys & Hobbies',\n      value: 'toys_hobbies'\n    },\n    {\n      id: 2,\n      name: 'Office Supplies',\n      value: 'office_supplies'\n    },\n    {\n      id: 3,\n      name: 'Electronics',\n      value: 'electronics'\n    },\n    {\n      id: 4,\n      name: 'Video Games',\n      value: 'video_games'\n    }\n  ];\n\n  const rating = [\n    {\n      id: 1,\n      rating: 5\n    },\n    {\n      id: 2,\n      rating: 4\n    },\n    {\n      id: 3,\n      rating: 3\n    },\n    {\n      id: 4,\n      rating: 2\n    },\n    {\n      id: 5,\n      rating: 1\n    }\n  ];\n\n  const [checked2, setChecked2] = useState([0]);\n\n  const handleToggle2 = (value) => () => {\n    const currentIndex = checked2.indexOf(value);\n    const newChecked = [...checked2];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked2(newChecked);\n  };\n\n  const [checked3, setChecked3] = useState([0]);\n\n  const handleToggle3 = (value) => () => {\n    const currentIndex = checked3.indexOf(value);\n    const newChecked = [...checked3];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked3(newChecked);\n  };\n\n  const [value, setValue] = useState([200, 800]);\n\n  const handleChange = (_event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Card>\n      <Accordion defaultExpanded>\n        <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\n          <Typography variant=\"h5\">{t('Price Range')}</Typography>\n        </AccordionSummaryWrapper>\n        <AccordionDetails\n          sx={{\n            pt: 5\n          }}\n        >\n          <Slider\n            value={value}\n            step={50}\n            min={100}\n            max={2000}\n            onChange={handleChange}\n            valueLabelDisplay=\"on\"\n            valueLabelFormat={(value) => <div>${value}</div>}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Divider />\n      <Accordion defaultExpanded>\n        <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\n          <Typography variant=\"h5\">{t('Categories')}</Typography>\n        </AccordionSummaryWrapper>\n        <AccordionDetails\n          sx={{\n            p: 0\n          }}\n        >\n          <List component=\"div\">\n            {categories.map((value) => {\n              return (\n                <ListItemWrapper\n                  sx={{\n                    py: 0,\n                    px: 2\n                  }}\n                  key={value.id}\n                  onClick={handleToggle2(value.id)}\n                >\n                  <ListItemIcon\n                    sx={{\n                      minWidth: 32\n                    }}\n                  >\n                    <Checkbox\n                      edge=\"start\"\n                      checked={checked2.indexOf(value.id) !== -1}\n                      tabIndex={-1}\n                      disableRipple\n                    />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={value.name}\n                    primaryTypographyProps={{ variant: 'body1' }}\n                  />\n                </ListItemWrapper>\n              );\n            })}\n          </List>\n        </AccordionDetails>\n      </Accordion>\n      <Divider />\n      <Accordion defaultExpanded>\n        <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\n          <Typography variant=\"h5\">{t('Rating')}</Typography>\n        </AccordionSummaryWrapper>\n        <AccordionDetails\n          sx={{\n            p: 0\n          }}\n        >\n          <List component=\"div\">\n            {rating.map((value) => {\n              return (\n                <ListItemWrapper\n                  key={value.id}\n                  onClick={handleToggle3(value.id)}\n                >\n                  <Rating value={value.rating} precision={1} readOnly />\n                </ListItemWrapper>\n              );\n            })}\n          </List>\n        </AccordionDetails>\n      </Accordion>\n    </Card>\n  );\n}\n\nexport default Sidebar;\n","import { useState, useEffect, useCallback } from 'react';\n\nimport { Helmet } from 'react-helmet-async';\nimport Footer from 'src/components/Footer';\nimport Scrollbar from 'src/components/Scrollbar';\n\nimport { styled, Box, Grid, IconButton, Drawer, useTheme } from '@mui/material';\nimport axios from 'src/utils/axios';\nimport MenuTwoToneIcon from '@mui/icons-material/MenuTwoTone';\n\nimport useRefMounted from 'src/hooks/useRefMounted';\n\nimport Results from './Results';\nimport PageHeader from './PageHeader';\nimport Sidebar from './Sidebar';\n\nconst DrawerWrapperMobile = styled(Drawer)(\n  () => `\n    width: 340px;\n    flex-shrink: 0;\n\n  & > .MuiPaper-root {\n        width: 340px;\n        z-index: 3;\n  }\n`\n);\n\nconst IconButtonToggle = styled(IconButton)(\n  ({ theme }) => `\n  width: ${theme.spacing(6)};\n  height: ${theme.spacing(6)};\n`\n);\n\nfunction ManagementProductsShop() {\n  const theme = useTheme();\n\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const isMountedRef = useRefMounted();\n  const [products, setProducts] = useState([]);\n\n  const getProducts = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/products');\n\n      if (isMountedRef.current) {\n        setProducts(response.data.products);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProducts();\n  }, [getProducts]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Products Platform - Applications</title>\n      </Helmet>\n\n      <Grid\n        sx={{\n          px: 4\n        }}\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        spacing={4}\n      >\n        <Grid display=\"flex\" alignItems=\"center\" item xs={12}>\n          <IconButtonToggle\n            sx={{\n              mr: 1,\n              display: { md: 'none', xs: 'flex' }\n            }}\n            color=\"primary\"\n            onClick={handleDrawerToggle}\n            size=\"small\"\n          >\n            <MenuTwoToneIcon />\n          </IconButtonToggle>\n          <Box flex={1} mt={3}>\n            <PageHeader />\n          </Box>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={3}\n          sx={{\n            display: { xs: 'none', md: 'block' }\n          }}\n        >\n          <Sidebar />\n        </Grid>\n        <Grid item xs={12} md={9}>\n          {products && <Results products={products} />}\n        </Grid>\n      </Grid>\n      <DrawerWrapperMobile\n        sx={{\n          display: { md: 'none', xs: 'flex' }\n        }}\n        variant=\"temporary\"\n        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n        open={mobileOpen}\n        onClose={handleDrawerToggle}\n      >\n        <Scrollbar>\n          <Sidebar />\n        </Scrollbar>\n      </DrawerWrapperMobile>\n      <Footer />\n    </>\n  );\n}\n\nexport default ManagementProductsShop;\n"],"sourceRoot":""}