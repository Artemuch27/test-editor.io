{"version":3,"sources":["content/pages/Auth/Register/Basic/index.js","content/pages/Auth/Register/RegisterAuth0.js","content/pages/Auth/Register/RegisterFirebaseAuth.js","content/pages/Auth/Register/RegisterJWT.js","content/pages/Auth/Register/RegisterAmplify.js"],"names":["icons","CardImg","styled","Card","theme","colors","alpha","white","spacing","black","transitions","create","primary","main","BottomWrapper","Box","MainContent","TopWrapper","RegisterBasic","method","useAuth","t","useTranslation","maxWidth","sx","mt","px","pt","pb","variant","mb","color","fontWeight","component","RouterLink","to","arrow","placement","title","height","alt","src","severity","ImgWrapper","RegisterAuth0","loginWithPopup","useState","error","setError","isMountedRef","useRefMounted","handleRegister","a","console","current","message","fullWidth","onClick","size","py","RegisterFirebaseAuth","createUserWithEmailAndPassword","signInWithGoogle","handleGoogleClick","initialValues","email","password","terms","submit","validationSchema","Yup","shape","max","required","min","oneOf","onSubmit","values","setErrors","setStatus","setSubmitting","success","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","Boolean","helperText","label","placeholder","margin","name","onBlur","onChange","type","value","control","checked","href","startIcon","disabled","RegisterJWT","register","RegisterAmplify"],"mappings":"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","file":"static/js/77.b85f3dc1.chunk.js","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\nimport {\n  Box,\n  Card,\n  Link,\n  Tooltip,\n  Typography,\n  Container,\n  Alert,\n  styled\n} from '@mui/material';\nimport { Helmet } from 'react-helmet-async';\nimport useAuth from 'src/hooks/useAuth';\nimport { useTranslation } from 'react-i18next';\nimport Logo from 'src/components/LogoSign';\nimport Auth0Register from '../RegisterAuth0';\nimport FirebaseAuthRegister from '../RegisterFirebaseAuth';\nimport JWTRegister from '../RegisterJWT';\nimport AmplifyRegister from '../RegisterAmplify';\n\nconst icons = {\n  Auth0: '/static/images/logo/auth0.svg',\n  FirebaseAuth: '/static/images/logo/firebase.svg',\n  JWT: '/static/images/logo/jwt.svg',\n  Amplify: '/static/images/logo/amplify.svg'\n};\n\nconst CardImg = styled(Card)(\n  ({ theme }) => `\n    width: 90px;\n    height: 80px;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    background: ${theme.colors.alpha.white[100]};\n    margin: 0 ${theme.spacing(1)};\n    border: 1px solid ${theme.colors.alpha.black[10]};\n    transition: ${theme.transitions.create(['all'])};\n\n    &:hover {\n      border-color: ${theme.colors.primary.main};\n    }\n`\n);\nconst BottomWrapper = styled(Box)(\n  ({ theme }) => `\n    padding: ${theme.spacing(3)};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n);\n\nconst MainContent = styled(Box)(\n  () => `\n    height: 100%;\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n`\n);\n\nconst TopWrapper = styled(Box)(\n  () => `\n  display: flex;\n  width: 100%;\n  flex: 1;\n  padding: 20px;\n`\n);\n\nfunction RegisterBasic() {\n  const { method } = useAuth();\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Helmet>\n        <title>Register - Basic</title>\n      </Helmet>\n      <MainContent>\n        <TopWrapper>\n          <Container maxWidth=\"sm\">\n            <Logo />\n            <Card\n              sx={{\n                mt: 3,\n                px: 4,\n                pt: 5,\n                pb: 3\n              }}\n            >\n              <Box>\n                <Typography\n                  variant=\"h2\"\n                  sx={{\n                    mb: 1\n                  }}\n                >\n                  {t('Create account')}\n                </Typography>\n                <Typography\n                  variant=\"h4\"\n                  color=\"text.secondary\"\n                  fontWeight=\"normal\"\n                  sx={{\n                    mb: 3\n                  }}\n                >\n                  {t('Fill in the fields below to sign up for an account.')}\n                </Typography>\n              </Box>\n              {method === 'Auth0' && <Auth0Register />}\n              {method === 'FirebaseAuth' && <FirebaseAuthRegister />}\n              {method === 'JWT' && <JWTRegister />}\n              {method === 'Amplify' && <AmplifyRegister />}\n              <Box mt={4}>\n                <Typography\n                  component=\"span\"\n                  variant=\"subtitle2\"\n                  color=\"text.primary\"\n                  fontWeight=\"bold\"\n                >\n                  {t('Already have an account?')}\n                </Typography>{' '}\n                <Link component={RouterLink} to=\"/account/login-basic\">\n                  <b>{t('Sign in here')}</b>\n                </Link>\n              </Box>\n            </Card>\n            <BottomWrapper>\n              <Box mb={3}>\n                <Tooltip arrow placement=\"top\" title=\"Auth0\">\n                  <CardImg>\n                    <img height={50} alt=\"Auth0\" src={icons.Auth0} />\n                  </CardImg>\n                </Tooltip>\n                <Tooltip arrow placement=\"top\" title=\"Firebase\">\n                  <CardImg>\n                    <img height={50} alt=\"Firebase\" src={icons.FirebaseAuth} />\n                  </CardImg>\n                </Tooltip>\n                <Tooltip arrow placement=\"top\" title=\"JSON Web Token\">\n                  <CardImg>\n                    <img height={50} alt=\"JSON Web Token\" src={icons.JWT} />\n                  </CardImg>\n                </Tooltip>\n                <Tooltip arrow placement=\"top\" title=\"Amplify\">\n                  <CardImg>\n                    <img height={50} alt=\"Amplify\" src={icons.Amplify} />\n                  </CardImg>\n                </Tooltip>\n              </Box>\n            </BottomWrapper>\n            <Alert severity=\"warning\">\n              {t(\n                'Learn how to switch between auth methods by reading the section we’ve prepared in the documentation.'\n              )}\n            </Alert>\n          </Container>\n        </TopWrapper>\n      </MainContent>\n    </>\n  );\n}\n\nexport default RegisterBasic;\n","import { useState } from 'react';\nimport { Button, Alert, styled } from '@mui/material';\nimport useAuth from 'src/hooks/useAuth';\nimport useRefMounted from 'src/hooks/useRefMounted';\nimport { useTranslation } from 'react-i18next';\n\nconst ImgWrapper = styled('img')(\n  ({ theme }) => `\n    margin-right: ${theme.spacing(1)};\n    width: 32px;\n`\n);\n\nfunction RegisterAuth0() {\n  const { loginWithPopup } = useAuth();\n  const [error, setError] = useState(null);\n  const isMountedRef = useRefMounted();\n  const { t } = useTranslation();\n\n  const handleRegister = async () => {\n    try {\n      await loginWithPopup();\n    } catch (err) {\n      console.error(err);\n      if (isMountedRef.current) {\n        setError(err.message);\n      }\n    }\n  };\n\n  return (\n    <>\n      {error && <Alert severity=\"error\">{error}</Alert>}\n\n      <Button\n        fullWidth\n        onClick={handleRegister}\n        size=\"large\"\n        sx={{\n          py: 2\n        }}\n        variant=\"outlined\"\n      >\n        <ImgWrapper alt=\"Auth0\" src=\"/static/images/logo/auth0.svg\" />\n        {t('Sign in with')} Auth0\n      </Button>\n    </>\n  );\n}\n\nexport default RegisterAuth0;\n","import * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Button,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Link,\n  TextField,\n  Typography,\n  CircularProgress,\n  styled\n} from '@mui/material';\nimport useAuth from 'src/hooks/useAuth';\nimport useRefMounted from 'src/hooks/useRefMounted';\nimport { useTranslation } from 'react-i18next';\n\nconst ImgWrapper = styled('img')(\n  ({ theme }) => `\n    margin-right: ${theme.spacing(1)};\n`\n);\n\nfunction RegisterFirebaseAuth() {\n  const { createUserWithEmailAndPassword, signInWithGoogle } = useAuth();\n  const isMountedRef = useRefMounted();\n  const { t } = useTranslation();\n\n  const handleGoogleClick = async () => {\n    try {\n      await signInWithGoogle();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        fullWidth\n        onClick={handleGoogleClick}\n        size=\"large\"\n        variant=\"outlined\"\n      >\n        <ImgWrapper alt=\"Google\" src=\"/static/images/logo/google.svg\" />\n        Register with Google\n      </Button>\n      <Divider\n        sx={{\n          mt: 4,\n          mb: 2\n        }}\n      >\n        {t('or')}\n      </Divider>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          terms: true,\n          submit: null\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .email(t('The email provided should be a valid email address'))\n            .max(255)\n            .required(t('The email field is required')),\n          password: Yup.string()\n            .min(8)\n            .max(255)\n            .required(t('The password field is required')),\n          terms: Yup.boolean().oneOf(\n            [true],\n            t('You must agree to our terms and conditions')\n          )\n        })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            await createUserWithEmailAndPassword(values.email, values.password);\n\n            if (isMountedRef.current) {\n              setStatus({ success: true });\n              setSubmitting(false);\n            }\n          } catch (err) {\n            console.error(err);\n            if (isMountedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values\n        }) => (\n          <form noValidate onSubmit={handleSubmit}>\n            <TextField\n              error={Boolean(touched.email && errors.email)}\n              fullWidth\n              helperText={touched.email && errors.email}\n              label={t('Email address')}\n              placeholder={t('Your email address here...')}\n              margin=\"normal\"\n              name=\"email\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"email\"\n              value={values.email}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={Boolean(touched.password && errors.password)}\n              fullWidth\n              helperText={touched.password && errors.password}\n              label={t('Password')}\n              placeholder={t('Your password here...')}\n              margin=\"normal\"\n              name=\"password\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"password\"\n              value={values.password}\n              variant=\"outlined\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={values.terms}\n                  name=\"terms\"\n                  color=\"primary\"\n                  onChange={handleChange}\n                />\n              }\n              label={\n                <Typography variant=\"body2\">\n                  {t('I accept the')}{' '}\n                  <Link component=\"a\" href=\"#\">\n                    {t('terms and conditions')}\n                  </Link>\n                  .\n                </Typography>\n              }\n            />\n            <Button\n              sx={{\n                mt: 3\n              }}\n              color=\"primary\"\n              startIcon={isSubmitting ? <CircularProgress size=\"1rem\" /> : null}\n              disabled={isSubmitting}\n              size=\"large\"\n              fullWidth\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              {t('Create account')}\n            </Button>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nexport default RegisterFirebaseAuth;\n","import * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Button,\n  Checkbox,\n  FormHelperText,\n  TextField,\n  Typography,\n  FormControlLabel,\n  Link,\n  CircularProgress\n} from '@mui/material';\nimport useAuth from 'src/hooks/useAuth';\nimport useRefMounted from 'src/hooks/useRefMounted';\nimport { useTranslation } from 'react-i18next';\n\nfunction RegisterJWT() {\n  const { register } = useAuth();\n  const isMountedRef = useRefMounted();\n  const { t } = useTranslation();\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        name: '',\n        password: '',\n        terms: false,\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email(t('The email provided should be a valid email address'))\n          .max(255)\n          .required(t('The email field is required')),\n        name: Yup.string().max(255).required(t('The name field is required')),\n        password: Yup.string()\n          .min(8)\n          .max(255)\n          .required(t('The password field is required')),\n        terms: Yup.boolean().oneOf(\n          [true],\n          t('You must agree to our terms and conditions')\n        )\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          await register(values.email, values.name, values.password);\n\n          if (isMountedRef.current) {\n            setStatus({ success: true });\n            setSubmitting(false);\n          }\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form noValidate onSubmit={handleSubmit}>\n          <TextField\n            error={Boolean(touched.name && errors.name)}\n            fullWidth\n            margin=\"normal\"\n            helperText={touched.name && errors.name}\n            label={t('Name')}\n            name=\"name\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            value={values.name}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            margin=\"normal\"\n            helperText={touched.email && errors.email}\n            label={t('Email address')}\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            margin=\"normal\"\n            helperText={touched.password && errors.password}\n            label={t('Password')}\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.terms}\n                name=\"terms\"\n                color=\"primary\"\n                onChange={handleChange}\n              />\n            }\n            label={\n              <>\n                <Typography variant=\"body2\">\n                  {t('I accept the')}{' '}\n                  <Link component=\"a\" href=\"#\">\n                    {t('terms and conditions')}\n                  </Link>\n                  .\n                </Typography>\n              </>\n            }\n          />\n          {Boolean(touched.terms && errors.terms) && (\n            <FormHelperText error>{errors.terms}</FormHelperText>\n          )}\n          <Button\n            sx={{\n              mt: 3\n            }}\n            color=\"primary\"\n            startIcon={isSubmitting ? <CircularProgress size=\"1rem\" /> : null}\n            disabled={isSubmitting}\n            type=\"submit\"\n            fullWidth\n            size=\"large\"\n            variant=\"contained\"\n          >\n            {t('Create your account')}\n          </Button>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nexport default RegisterJWT;\n","import * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Button,\n  Checkbox,\n  FormHelperText,\n  TextField,\n  Typography,\n  FormControlLabel,\n  Link,\n  CircularProgress\n} from '@mui/material';\nimport useAuth from 'src/hooks/useAuth';\nimport useRefMounted from 'src/hooks/useRefMounted';\nimport { useTranslation } from 'react-i18next';\n\nfunction RegisterAmplify() {\n  const { register } = useAuth();\n  const isMountedRef = useRefMounted();\n  const { t } = useTranslation();\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n        terms: false,\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email(t('The email provided should be a valid email address'))\n          .max(255)\n          .required(t('The email field is required')),\n        password: Yup.string()\n          .min(8)\n          .max(255)\n          .required(t('The password field is required')),\n        terms: Yup.boolean().oneOf(\n          [true],\n          t('You must agree to our terms and conditions')\n        )\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          await register(values.email, values.password);\n\n          if (isMountedRef.current) {\n            setStatus({ success: true });\n            setSubmitting(false);\n          }\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form noValidate onSubmit={handleSubmit}>\n          <TextField\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            margin=\"normal\"\n            helperText={touched.email && errors.email}\n            label={t('Email address')}\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            margin=\"normal\"\n            helperText={touched.password && errors.password}\n            label={t('Password')}\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.terms}\n                name=\"terms\"\n                color=\"primary\"\n                onChange={handleChange}\n              />\n            }\n            label={\n              <>\n                <Typography variant=\"body2\">\n                  {t('I accept the')}{' '}\n                  <Link component=\"a\" href=\"#\">\n                    {t('terms and conditions')}\n                  </Link>\n                  .\n                </Typography>\n              </>\n            }\n          />\n          {Boolean(touched.terms && errors.terms) && (\n            <FormHelperText error>{errors.terms}</FormHelperText>\n          )}\n          <Button\n            sx={{\n              mt: 3\n            }}\n            color=\"primary\"\n            startIcon={isSubmitting ? <CircularProgress size=\"1rem\" /> : null}\n            disabled={isSubmitting}\n            type=\"submit\"\n            fullWidth\n            size=\"large\"\n            variant=\"contained\"\n          >\n            {t('Create your account')}\n          </Button>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nexport default RegisterAmplify;\n"],"sourceRoot":""}