{"version":3,"sources":["content/dashboards/Crypto/AccountBalance.js","content/dashboards/Crypto/Wallets.js","content/dashboards/Crypto/RecentOrdersTable.js","content/dashboards/Crypto/RecentOrders.js","content/dashboards/Crypto/WatchListColumn.js","content/dashboards/Crypto/WatchListRow.js","content/dashboards/Crypto/WatchList.js","content/dashboards/Crypto/PageHeader.js","content/dashboards/Crypto/index.js","components/Label/index.js","components/PageTitleWrapper/index.js","content/dashboards/Crypto/AccountSecurity.js","content/management/Products/BulkActions.js"],"names":["AvatarSuccess","styled","Avatar","theme","colors","success","main","palette","contrastText","spacing","shadows","ListItemAvatarWrapper","ListItemAvatar","mode","alpha","trueWhite","black","AccountBalance","t","useTranslation","useTheme","chartOptions","chart","background","stacked","toolbar","show","plotOptions","pie","donut","size","dataLabels","enabled","formatter","val","style","foreColor","padding","borderRadius","borderWidth","opacity","dropShadow","top","left","blur","color","fill","labels","legend","stroke","width","Card","Grid","container","item","xs","md","Box","p","Typography","sx","pb","variant","gutterBottom","fontWeight","display","py","alignItems","mr","fontSize","noWrap","sm","Button","fullWidth","position","component","Divider","absolute","orientation","pr","flex","justifyContent","height","options","series","type","List","disablePadding","ListItem","disableGutters","alt","src","ListItemText","primary","primaryTypographyProps","secondary","secondaryTypographyProps","align","Text","AvatarWrapper","AvatarAddWrapper","CardAddAction","transitions","create","Wallets","startIcon","px","CardContent","pt","Tooltip","arrow","title","CardActionArea","getStatusLabel","cryptoOrderStatus","failed","text","completed","pending","Label","RecentOrdersTable","cryptoOrders","useState","selectedCryptoOrders","setSelectedCryptoOrders","selectedBulkActions","length","page","setPage","limit","setLimit","status","filters","setFilters","statusOptions","id","name","filteredCryptoOrders","filter","cryptoOrder","matches","applyFilters","paginatedCryptoOrders","slice","applyPagination","selectedSomeCryptoOrders","selectedAllCryptoOrders","BulkActions","CardHeader","action","FormControl","InputLabel","Select","value","onChange","e","target","prevFilters","label","autoWidth","map","statusOption","MenuItem","TableContainer","Table","TableHead","TableRow","TableCell","Checkbox","checked","indeterminate","event","TableBody","isCryptoOrderSelected","includes","hover","selected","cryptoOrderId","prevSelected","orderDetails","format","orderDate","orderID","sourceName","sourceDesc","amountCrypto","cryptoCurrency","numeral","amount","currency","IconButton","lighter","error","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","defaultProps","RecentOrders","isMountedRef","useRefMounted","setCryptoOrders","getCryptoOrders","useCallback","a","axios","get","response","current","data","console","useEffect","WatchListColumn","sparkline","zoom","gradient","shade","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","xaxis","axisBorder","axisTicks","yaxis","tickAmount","tooltip","x","y","marker","direction","overflow","mb","pl","WatchListRow","Box1Options","animations","curve","grid","right","bottom","fixed","Stack","divider","flexItem","mt","warning","CardActions","disableSpacing","EmptyResultsWrapper","WatchList","tabs","setTab","ToggleButtonGroup","exclusive","_event","newValue","ToggleButton","disableRipple","textAlign","PageHeader","user","useAuth","avatar","DashboardCrypto","PageTitleWrapper","lg","AccountSecurity","Footer","LabelWrapper","typography","pxToRem","general","white","info","className","children","rest","PageTitle","AvatarWrapperError","AvatarWrapperSuccess","AvatarWrapperWarning","setChecked","handleToggle","currentIndex","indexOf","newChecked","push","splice","edge","ButtonError","dark","onMenuOpen","menuOpen","moreRef","useRef","ml","onClick","ref","disableScrollLock","keepMounted","anchorEl","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","button"],"mappings":"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","file":"static/js/76.6b108025.chunk.js","sourcesContent":["import {\n  Button,\n  Card,\n  Box,\n  Grid,\n  Typography,\n  useTheme,\n  styled,\n  Avatar,\n  Divider,\n  alpha,\n  ListItem,\n  ListItemText,\n  List,\n  ListItemAvatar\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport TrendingUp from '@mui/icons-material/TrendingUp';\nimport Text from 'src/components/Text';\nimport Chart from 'react-apexcharts';\n\nconst AvatarSuccess = styled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.success.main};\n      color: ${theme.palette.success.contrastText};\n      width: ${theme.spacing(8)};\n      height: ${theme.spacing(8)};\n      box-shadow: ${theme.colors.shadows.success};\n`\n);\n\nconst ListItemAvatarWrapper = styled(ListItemAvatar)(\n  ({ theme }) => `\n  min-width: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: ${theme.spacing(1)};\n  padding: ${theme.spacing(0.5)};\n  border-radius: 60px;\n  background: ${\n    theme.palette.mode === 'dark'\n      ? theme.colors.alpha.trueWhite[30]\n      : alpha(theme.colors.alpha.black[100], 0.07)\n  };\n\n  img {\n    background: ${theme.colors.alpha.trueWhite[100]};\n    padding: ${theme.spacing(0.5)};\n    display: block;\n    border-radius: inherit;\n    height: ${theme.spacing(4.5)};\n    width: ${theme.spacing(4.5)};\n  }\n`\n);\n\nfunction AccountBalance() {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      pie: {\n        donut: {\n          size: '60%'\n        }\n      }\n    },\n    colors: ['#ff9900', '#1c81c2', '#333', '#5c6ac0'],\n    dataLabels: {\n      enabled: true,\n      formatter(val) {\n        return `${val}%`;\n      },\n      style: {\n        colors: [theme.colors.alpha.trueWhite[100]]\n      },\n      background: {\n        enabled: true,\n        foreColor: theme.colors.alpha.trueWhite[100],\n        padding: 8,\n        borderRadius: 4,\n        borderWidth: 0,\n        opacity: 0.3,\n        dropShadow: {\n          enabled: true,\n          top: 1,\n          left: 1,\n          blur: 1,\n          color: theme.colors.alpha.black[70],\n          opacity: 0.5\n        }\n      },\n      dropShadow: {\n        enabled: true,\n        top: 1,\n        left: 1,\n        blur: 1,\n        color: theme.colors.alpha.black[50],\n        opacity: 0.5\n      }\n    },\n    fill: {\n      opacity: 1\n    },\n    labels: [t('Bitcoin'), t('Ripple'), t('Cardano'), t('Ethereum')],\n    legend: {\n      labels: {\n        colors: theme.colors.alpha.trueWhite[100]\n      },\n      show: false\n    },\n    stroke: {\n      width: 0\n    },\n    theme: {\n      mode: theme.palette.mode\n    }\n  };\n\n  const chartSeries = [10, 20, 25, 45];\n\n  return (\n    <Card>\n      <Grid spacing={0} container>\n        <Grid item xs={12} md={6}>\n          <Box p={4}>\n            <Typography\n              sx={{\n                pb: 3\n              }}\n              variant=\"h4\"\n            >\n              {t('Account Balance')}\n            </Typography>\n            <Box>\n              <Typography variant=\"h1\" gutterBottom>\n                $54,584.23\n              </Typography>\n              <Typography\n                variant=\"h4\"\n                fontWeight=\"normal\"\n                color=\"text.secondary\"\n              >\n                1.0045983485234 BTC\n              </Typography>\n              <Box\n                display=\"flex\"\n                sx={{\n                  py: 4\n                }}\n                alignItems=\"center\"\n              >\n                <AvatarSuccess\n                  sx={{\n                    mr: 2\n                  }}\n                  variant=\"rounded\"\n                >\n                  <TrendingUp fontSize=\"large\" />\n                </AvatarSuccess>\n                <Box>\n                  <Typography variant=\"h4\">+ $3,594.00</Typography>\n                  <Typography variant=\"subtitle2\" noWrap>\n                    {t('this month')}\n                  </Typography>\n                </Box>\n              </Box>\n            </Box>\n            <Grid container spacing={3}>\n              <Grid sm item>\n                <Button fullWidth variant=\"outlined\">\n                  {t('Send')}\n                </Button>\n              </Grid>\n              <Grid sm item>\n                <Button fullWidth variant=\"contained\">\n                  {t('Receive')}\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n        <Grid\n          sx={{\n            position: 'relative'\n          }}\n          display=\"flex\"\n          alignItems=\"center\"\n          item\n          xs={12}\n          md={6}\n        >\n          <Box\n            component=\"span\"\n            sx={{\n              display: { xs: 'none', md: 'inline-block' }\n            }}\n          >\n            <Divider absolute orientation=\"vertical\" />\n          </Box>\n          <Box py={4} pr={4} flex={1}>\n            <Grid container spacing={0}>\n              <Grid\n                xs={12}\n                sm={5}\n                item\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n              >\n                <Chart\n                  height={250}\n                  options={chartOptions}\n                  series={chartSeries}\n                  type=\"donut\"\n                />\n              </Grid>\n              <Grid xs={12} sm={7} item display=\"flex\" alignItems=\"center\">\n                <List\n                  disablePadding\n                  sx={{\n                    width: '100%'\n                  }}\n                >\n                  <ListItem disableGutters>\n                    <ListItemAvatarWrapper>\n                      <img\n                        alt=\"BTC\"\n                        src=\"/static/images/placeholders/logo/bitcoin.png\"\n                      />\n                    </ListItemAvatarWrapper>\n                    <ListItemText\n                      primary=\"BTC\"\n                      primaryTypographyProps={{ variant: 'h5', noWrap: true }}\n                      secondary=\"Bitcoin\"\n                      secondaryTypographyProps={{\n                        variant: 'subtitle2',\n                        noWrap: true\n                      }}\n                    />\n                    <Box>\n                      <Typography align=\"right\" variant=\"h4\" noWrap>\n                        20%\n                      </Typography>\n                      <Text color=\"success\">+2.54%</Text>\n                    </Box>\n                  </ListItem>\n                  <ListItem disableGutters>\n                    <ListItemAvatarWrapper>\n                      <img\n                        alt=\"XRP\"\n                        src=\"/static/images/placeholders/logo/ripple.png\"\n                      />\n                    </ListItemAvatarWrapper>\n                    <ListItemText\n                      primary=\"XRP\"\n                      primaryTypographyProps={{ variant: 'h5', noWrap: true }}\n                      secondary=\"Ripple\"\n                      secondaryTypographyProps={{\n                        variant: 'subtitle2',\n                        noWrap: true\n                      }}\n                    />\n                    <Box>\n                      <Typography align=\"right\" variant=\"h4\" noWrap>\n                        10%\n                      </Typography>\n                      <Text color=\"error\">-1.22%</Text>\n                    </Box>\n                  </ListItem>\n                  <ListItem disableGutters>\n                    <ListItemAvatarWrapper>\n                      <img\n                        alt=\"ADA\"\n                        src=\"/static/images/placeholders/logo/cardano.png\"\n                      />\n                    </ListItemAvatarWrapper>\n                    <ListItemText\n                      primary=\"ADA\"\n                      primaryTypographyProps={{ variant: 'h5', noWrap: true }}\n                      secondary=\"Cardano\"\n                      secondaryTypographyProps={{\n                        variant: 'subtitle2',\n                        noWrap: true\n                      }}\n                    />\n                    <Box>\n                      <Typography align=\"right\" variant=\"h4\" noWrap>\n                        40%\n                      </Typography>\n                      <Text color=\"success\">+10.50%</Text>\n                    </Box>\n                  </ListItem>\n                  <ListItem disableGutters>\n                    <ListItemAvatarWrapper>\n                      <img\n                        alt=\"ETH\"\n                        src=\"/static/images/placeholders/logo/ethereum.png\"\n                      />\n                    </ListItemAvatarWrapper>\n                    <ListItemText\n                      primary=\"ETH\"\n                      primaryTypographyProps={{ variant: 'h5', noWrap: true }}\n                      secondary=\"Ethereum\"\n                      secondaryTypographyProps={{\n                        variant: 'subtitle2',\n                        noWrap: true\n                      }}\n                    />\n                    <Box>\n                      <Typography align=\"right\" variant=\"h4\" noWrap>\n                        30%\n                      </Typography>\n                      <Text color=\"error\">-12.38%</Text>\n                    </Box>\n                  </ListItem>\n                </List>\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\nexport default AccountBalance;\n","import {\n  Button,\n  Card,\n  Grid,\n  Box,\n  CardContent,\n  Typography,\n  Avatar,\n  alpha,\n  Tooltip,\n  CardActionArea,\n  styled\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\n\nconst AvatarWrapper = styled(Avatar)(\n  ({ theme }) => `\n    margin: ${theme.spacing(2, 0, 1, -0.5)};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: ${theme.spacing(1)};\n    padding: ${theme.spacing(0.5)};\n    border-radius: 60px;\n    height: ${theme.spacing(5.5)};\n    width: ${theme.spacing(5.5)};\n    background: ${\n      theme.palette.mode === 'dark'\n        ? theme.colors.alpha.trueWhite[30]\n        : alpha(theme.colors.alpha.black[100], 0.07)\n    };\n  \n    img {\n      background: ${theme.colors.alpha.trueWhite[100]};\n      padding: ${theme.spacing(0.5)};\n      display: block;\n      border-radius: inherit;\n      height: ${theme.spacing(4.5)};\n      width: ${theme.spacing(4.5)};\n    }\n`\n);\n\nconst AvatarAddWrapper = styled(Avatar)(\n  ({ theme }) => `\n        background: ${theme.colors.alpha.black[10]};\n        color: ${theme.colors.primary.main};\n        width: ${theme.spacing(8)};\n        height: ${theme.spacing(8)};\n`\n);\n\nconst CardAddAction = styled(Card)(\n  ({ theme }) => `\n        border: ${theme.colors.primary.main} dashed 1px;\n        height: 100%;\n        color: ${theme.colors.primary.main};\n        transition: ${theme.transitions.create(['all'])};\n        \n        .MuiCardActionArea-root {\n          height: 100%;\n          justify-content: center;\n          align-items: center;\n          display: flex;\n        }\n        \n        .MuiTouchRipple-root {\n          opacity: .2;\n        }\n        \n        &:hover {\n          border-color: ${theme.colors.alpha.black[70]};\n        }\n`\n);\n\nfunction Wallets() {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        sx={{\n          pb: 3\n        }}\n      >\n        <Typography variant=\"h3\">{t('Wallets')}</Typography>\n        <Button\n          size=\"small\"\n          variant=\"outlined\"\n          startIcon={<AddTwoToneIcon fontSize=\"small\" />}\n        >\n          {t('Add new wallet')}\n        </Button>\n      </Box>\n      <Grid container spacing={3}>\n        <Grid xs={12} sm={6} md={3} item>\n          <Card\n            sx={{\n              px: 1\n            }}\n          >\n            <CardContent>\n              <AvatarWrapper>\n                <img\n                  alt=\"BTC\"\n                  src=\"/static/images/placeholders/logo/bitcoin.png\"\n                />\n              </AvatarWrapper>\n              <Typography variant=\"h5\" noWrap>\n                Bitcoin\n              </Typography>\n              <Typography variant=\"subtitle1\" noWrap>\n                BTC\n              </Typography>\n              <Box\n                sx={{\n                  pt: 3\n                }}\n              >\n                <Typography variant=\"h3\" gutterBottom noWrap>\n                  $3,586.22\n                </Typography>\n                <Typography variant=\"subtitle2\" noWrap>\n                  1.25843 BTC\n                </Typography>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid xs={12} sm={6} md={3} item>\n          <Card\n            sx={{\n              px: 1\n            }}\n          >\n            <CardContent>\n              <AvatarWrapper>\n                <img\n                  alt=\"Ripple\"\n                  src=\"/static/images/placeholders/logo/ripple.png\"\n                />\n              </AvatarWrapper>\n              <Typography variant=\"h5\" noWrap>\n                Ripple\n              </Typography>\n              <Typography variant=\"subtitle1\" noWrap>\n                XRP\n              </Typography>\n              <Box\n                sx={{\n                  pt: 3\n                }}\n              >\n                <Typography variant=\"h3\" gutterBottom noWrap>\n                  $586.83\n                </Typography>\n                <Typography variant=\"subtitle2\" noWrap>\n                  5,783 XRP\n                </Typography>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid xs={12} sm={6} md={3} item>\n          <Card\n            sx={{\n              px: 1\n            }}\n          >\n            <CardContent>\n              <AvatarWrapper>\n                <img\n                  alt=\"Cardano\"\n                  src=\"/static/images/placeholders/logo/cardano.png\"\n                />\n              </AvatarWrapper>\n              <Typography variant=\"h5\" noWrap>\n                Cardano\n              </Typography>\n              <Typography variant=\"subtitle1\" noWrap>\n                ADA\n              </Typography>\n              <Box\n                sx={{\n                  pt: 3\n                }}\n              >\n                <Typography variant=\"h3\" gutterBottom noWrap>\n                  $54,985.00\n                </Typography>\n                <Typography variant=\"subtitle2\" noWrap>\n                  34,985 ADA\n                </Typography>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid xs={12} sm={6} md={3} item>\n          <Tooltip arrow title={t('Click to add a new wallet')}>\n            <CardAddAction>\n              <CardActionArea\n                sx={{\n                  px: 1\n                }}\n              >\n                <CardContent>\n                  <AvatarAddWrapper>\n                    <AddTwoToneIcon fontSize=\"large\" />\n                  </AvatarAddWrapper>\n                </CardContent>\n              </CardActionArea>\n            </CardAddAction>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default Wallets;\n","import { useState } from 'react';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport {\n  Tooltip,\n  Divider,\n  Box,\n  FormControl,\n  InputLabel,\n  Card,\n  Checkbox,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableContainer,\n  Select,\n  MenuItem,\n  Typography,\n  useTheme,\n  CardHeader\n} from '@mui/material';\n\nimport Label from 'src/components/Label';\nimport { useTranslation } from 'react-i18next';\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport BulkActions from 'src/content/management/Products/BulkActions';\n\nconst getStatusLabel = (cryptoOrderStatus) => {\n  const map = {\n    failed: {\n      text: 'Failed',\n      color: 'error'\n    },\n    completed: {\n      text: 'Completed',\n      color: 'success'\n    },\n    pending: {\n      text: 'Pending',\n      color: 'warning'\n    }\n  };\n\n  const { text, color } = map[cryptoOrderStatus];\n\n  return <Label color={color}>{text}</Label>;\n};\n\nconst applyFilters = (cryptoOrders, filters) => {\n  return cryptoOrders.filter((cryptoOrder) => {\n    let matches = true;\n\n    if (filters.status && cryptoOrder.status !== filters.status) {\n      matches = false;\n    }\n\n    return matches;\n  });\n};\n\nconst applyPagination = (cryptoOrders, page, limit) => {\n  return cryptoOrders.slice(page * limit, page * limit + limit);\n};\n\nconst RecentOrdersTable = ({ cryptoOrders }) => {\n  const { t } = useTranslation();\n\n  const [selectedCryptoOrders, setSelectedCryptoOrders] = useState([]);\n  const selectedBulkActions = selectedCryptoOrders.length > 0;\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const [filters, setFilters] = useState({\n    status: null\n  });\n\n  const statusOptions = [\n    {\n      id: 'all',\n      name: 'All'\n    },\n    {\n      id: 'completed',\n      name: t('Completed')\n    },\n    {\n      id: 'pending',\n      name: t('Pending')\n    },\n    {\n      id: 'failed',\n      name: t('Failed')\n    }\n  ];\n\n  const handleStatusChange = (e) => {\n    let value = null;\n\n    if (e.target.value !== 'all') {\n      value = e.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      status: value\n    }));\n  };\n\n  const handleSelectAllCryptoOrders = (event) => {\n    setSelectedCryptoOrders(\n      event.target.checked\n        ? cryptoOrders.map((cryptoOrder) => cryptoOrder.id)\n        : []\n    );\n  };\n\n  const handleSelectOneCryptoOrder = (event, cryptoOrderId) => {\n    if (!selectedCryptoOrders.includes(cryptoOrderId)) {\n      setSelectedCryptoOrders((prevSelected) => [\n        ...prevSelected,\n        cryptoOrderId\n      ]);\n    } else {\n      setSelectedCryptoOrders((prevSelected) =>\n        prevSelected.filter((id) => id !== cryptoOrderId)\n      );\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  const filteredCryptoOrders = applyFilters(cryptoOrders, filters);\n  const paginatedCryptoOrders = applyPagination(\n    filteredCryptoOrders,\n    page,\n    limit\n  );\n  const selectedSomeCryptoOrders =\n    selectedCryptoOrders.length > 0 &&\n    selectedCryptoOrders.length < cryptoOrders.length;\n  const selectedAllCryptoOrders =\n    selectedCryptoOrders.length === cryptoOrders.length;\n  const theme = useTheme();\n\n  return (\n    <Card>\n      {selectedBulkActions && (\n        <Box flex={1} p={2}>\n          <BulkActions />\n        </Box>\n      )}\n      {!selectedBulkActions && (\n        <CardHeader\n          action={\n            <Box width={150}>\n              <FormControl fullWidth variant=\"outlined\">\n                <InputLabel>{t('Status')}</InputLabel>\n                <Select\n                  value={filters.status || 'all'}\n                  onChange={handleStatusChange}\n                  label={t('Status')}\n                  autoWidth\n                >\n                  {statusOptions.map((statusOption) => (\n                    <MenuItem key={statusOption.id} value={statusOption.id}>\n                      {statusOption.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          }\n          title={t('Recent Orders')}\n        />\n      )}\n      <Divider />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell padding=\"checkbox\">\n                <Checkbox\n                  color=\"primary\"\n                  checked={selectedAllCryptoOrders}\n                  indeterminate={selectedSomeCryptoOrders}\n                  onChange={handleSelectAllCryptoOrders}\n                />\n              </TableCell>\n              <TableCell>{t('Order Details')}</TableCell>\n              <TableCell>{t('Order ID')}</TableCell>\n              <TableCell>{t('Source')}</TableCell>\n              <TableCell align=\"right\">{t('Amount')}</TableCell>\n              <TableCell align=\"right\">{t('Status')}</TableCell>\n              <TableCell align=\"right\">{t('Actions')}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {paginatedCryptoOrders.map((cryptoOrder) => {\n              const isCryptoOrderSelected = selectedCryptoOrders.includes(\n                cryptoOrder.id\n              );\n              return (\n                <TableRow\n                  hover\n                  key={cryptoOrder.id}\n                  selected={isCryptoOrderSelected}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"primary\"\n                      checked={isCryptoOrderSelected}\n                      onChange={(event) =>\n                        handleSelectOneCryptoOrder(event, cryptoOrder.id)\n                      }\n                      value={isCryptoOrderSelected}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {cryptoOrder.orderDetails}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                      {format(cryptoOrder.orderDate, 'MMMM dd yyyy')}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {cryptoOrder.orderID}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {cryptoOrder.sourceName}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                      {cryptoOrder.sourceDesc}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {cryptoOrder.amountCrypto}\n                      {cryptoOrder.cryptoCurrency}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                      {numeral(cryptoOrder.amount).format(\n                        `${cryptoOrder.currency}0,0.00`\n                      )}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {getStatusLabel(cryptoOrder.status)}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Tooltip title={t('Edit Order')} arrow>\n                      <IconButton\n                        sx={{\n                          '&:hover': {\n                            background: theme.colors.primary.lighter\n                          },\n                          color: theme.palette.primary.main\n                        }}\n                        color=\"inherit\"\n                        size=\"small\"\n                      >\n                        <EditTwoToneIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title={t('Delete Order')} arrow>\n                      <IconButton\n                        sx={{\n                          '&:hover': { background: theme.colors.error.lighter },\n                          color: theme.palette.error.main\n                        }}\n                        color=\"inherit\"\n                        size=\"small\"\n                      >\n                        <DeleteTwoToneIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Box p={2}>\n        <TablePagination\n          component=\"div\"\n          count={filteredCryptoOrders.length}\n          onPageChange={handlePageChange}\n          onRowsPerPageChange={handleLimitChange}\n          page={page}\n          rowsPerPage={limit}\n          rowsPerPageOptions={[5, 10, 25, 30]}\n        />\n      </Box>\n    </Card>\n  );\n};\n\nRecentOrdersTable.propTypes = {\n  cryptoOrders: PropTypes.array.isRequired\n};\n\nRecentOrdersTable.defaultProps = {\n  cryptoOrders: []\n};\n\nexport default RecentOrdersTable;\n","import { useState, useEffect, useCallback } from 'react';\n\nimport { Card } from '@mui/material';\nimport axios from 'src/utils/axios';\nimport useRefMounted from 'src/hooks/useRefMounted';\nimport RecentOrdersTable from './RecentOrdersTable';\n\nfunction RecentOrders() {\n  const isMountedRef = useRefMounted();\n  const [cryptoOrders, setCryptoOrders] = useState([]);\n\n  const getCryptoOrders = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/crypto-orders');\n\n      if (isMountedRef.current) {\n        setCryptoOrders(response.data.cryptoOrders);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getCryptoOrders();\n  }, [getCryptoOrders]);\n\n  return (\n    <Card>\n      <RecentOrdersTable cryptoOrders={cryptoOrders} />\n    </Card>\n  );\n}\n\nexport default RecentOrders;\n","import {\n  Card,\n  Box,\n  Typography,\n  Avatar,\n  Grid,\n  alpha,\n  useTheme,\n  styled\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport Label from 'src/components/Label';\nimport Text from 'src/components/Text';\nimport Chart from 'react-apexcharts';\n\nconst AvatarWrapper = styled(Avatar)(\n  ({ theme }) => `\n    margin: ${theme.spacing(0, 0, 1, -0.5)};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: ${theme.spacing(1)};\n    padding: ${theme.spacing(0.5)};\n    border-radius: 60px;\n    height: ${theme.spacing(5.5)};\n    width: ${theme.spacing(5.5)};\n    background: ${\n      theme.palette.mode === 'dark'\n        ? theme.colors.alpha.trueWhite[30]\n        : alpha(theme.colors.alpha.black[100], 0.07)\n    };\n  \n    img {\n      background: ${theme.colors.alpha.trueWhite[100]};\n      padding: ${theme.spacing(0.5)};\n      display: block;\n      border-radius: inherit;\n      height: ${theme.spacing(4.5)};\n      width: ${theme.spacing(4.5)};\n    }\n`\n);\n\nfunction WatchListColumn() {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    fill: {\n      gradient: {\n        shade: 'light',\n        type: 'vertical',\n        shadeIntensity: 0.1,\n        inverseColors: false,\n        opacityFrom: 0.8,\n        opacityTo: 0,\n        stops: [0, 100]\n      }\n    },\n    colors: [theme.colors.primary.main],\n    dataLabels: {\n      enabled: false\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    stroke: {\n      show: true,\n      colors: [theme.colors.primary.main],\n      width: 3\n    },\n    legend: {\n      show: false\n    },\n    labels: [\n      'Monday',\n      'Tueday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n      'Sunday'\n    ],\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false,\n      tickAmount: 5\n    },\n    tooltip: {\n      x: {\n        show: true\n      },\n      y: {\n        title: {\n          formatter() {\n            return 'Price: $';\n          }\n        }\n      },\n      marker: {\n        show: false\n      }\n    }\n  };\n  const chart1Data = [\n    {\n      name: 'Bitcoin Price',\n      data: [55.701, 57.598, 48.607, 46.439, 58.755, 46.978, 58.16]\n    }\n  ];\n  const chart2Data = [\n    {\n      name: 'Ethereum Price',\n      data: [13, 16, 14, 20, 8, 11, 20]\n    }\n  ];\n  const chart3Data = [\n    {\n      name: 'Cardano Price',\n      data: [51.85, 41.77, 22.09, 42.0, 71.9, 51.84, 31.84]\n    }\n  ];\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"stretch\"\n      spacing={3}\n    >\n      <Grid item md={4} xs={12}>\n        <Card\n          sx={{\n            overflow: 'visible'\n          }}\n        >\n          <Box\n            sx={{\n              p: 3\n            }}\n          >\n            <Box display=\"flex\" alignItems=\"center\">\n              <AvatarWrapper>\n                <img\n                  alt=\"BTC\"\n                  src=\"/static/images/placeholders/logo/bitcoin.png\"\n                />\n              </AvatarWrapper>\n              <Box>\n                <Typography variant=\"h4\" noWrap>\n                  Bitcoin\n                </Typography>\n                <Typography variant=\"subtitle1\" noWrap>\n                  BTC\n                </Typography>\n              </Box>\n            </Box>\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-start',\n                pt: 3\n              }}\n            >\n              <Typography\n                variant=\"h2\"\n                sx={{\n                  pr: 1,\n                  mb: 1\n                }}\n              >\n                $56,475.99\n              </Typography>\n              <Text color=\"success\">\n                <b>+12.5%</b>\n              </Text>\n            </Box>\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-start'\n              }}\n            >\n              <Label color=\"success\">+$500</Label>\n              <Typography\n                variant=\"body2\"\n                color=\"text.secondary\"\n                sx={{\n                  pl: 1\n                }}\n              >\n                {t('last 24h')}\n              </Typography>\n            </Box>\n          </Box>\n          <Chart\n            options={chartOptions}\n            series={chart1Data}\n            type=\"area\"\n            height={200}\n          />\n        </Card>\n      </Grid>\n      <Grid item md={4} xs={12}>\n        <Card\n          sx={{\n            overflow: 'visible'\n          }}\n        >\n          <Box\n            sx={{\n              p: 3\n            }}\n          >\n            <Box display=\"flex\" alignItems=\"center\">\n              <AvatarWrapper>\n                <img\n                  alt=\"ETH\"\n                  src=\"/static/images/placeholders/logo/ethereum.png\"\n                />\n              </AvatarWrapper>\n              <Box>\n                <Typography variant=\"h4\" noWrap>\n                  Ethereum\n                </Typography>\n                <Typography variant=\"subtitle1\" noWrap>\n                  ETH\n                </Typography>\n              </Box>\n            </Box>\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-start',\n                pt: 3\n              }}\n            >\n              <Typography\n                variant=\"h2\"\n                sx={{\n                  pr: 1,\n                  mb: 1\n                }}\n              >\n                $1,968.00\n              </Typography>\n              <Text color=\"error\">\n                <b>-3.24%</b>\n              </Text>\n            </Box>\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-start'\n              }}\n            >\n              <Label color=\"error\">-$90</Label>\n              <Typography\n                variant=\"body2\"\n                color=\"text.secondary\"\n                sx={{\n                  pl: 1\n                }}\n              >\n                {t('last 24h')}\n              </Typography>\n            </Box>\n          </Box>\n          <Chart\n            options={chartOptions}\n            series={chart2Data}\n            type=\"area\"\n            height={200}\n          />\n        </Card>\n      </Grid>\n      <Grid item md={4} xs={12}>\n        <Card\n          sx={{\n            overflow: 'visible'\n          }}\n        >\n          <Box\n            sx={{\n              p: 3\n            }}\n          >\n            <Box display=\"flex\" alignItems=\"center\">\n              <AvatarWrapper>\n                <img\n                  alt=\"ADA\"\n                  src=\"/static/images/placeholders/logo/cardano.png\"\n                />\n              </AvatarWrapper>\n              <Box>\n                <Typography variant=\"h4\" noWrap>\n                  Cardano\n                </Typography>\n                <Typography variant=\"subtitle1\" noWrap>\n                  ADA\n                </Typography>\n              </Box>\n            </Box>\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-start',\n                pt: 3\n              }}\n            >\n              <Typography\n                variant=\"h2\"\n                sx={{\n                  pr: 1,\n                  mb: 1\n                }}\n              >\n                $23.00\n              </Typography>\n              <Text color=\"error\">\n                <b>-0.33%</b>\n              </Text>\n            </Box>\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-start'\n              }}\n            >\n              <Label color=\"error\">-$5</Label>\n              <Typography\n                variant=\"body2\"\n                color=\"text.secondary\"\n                sx={{\n                  pl: 1\n                }}\n              >\n                {t('last 24h')}\n              </Typography>\n            </Box>\n          </Box>\n          <Chart\n            options={chartOptions}\n            series={chart3Data}\n            type=\"area\"\n            height={200}\n          />\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default WatchListColumn;\n","import {\n  Button,\n  Card,\n  Box,\n  CardActions,\n  Typography,\n  Avatar,\n  alpha,\n  Stack,\n  Divider,\n  styled,\n  useTheme\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport Text from 'src/components/Text';\nimport Label from 'src/components/Label';\nimport Chart from 'react-apexcharts';\n\nimport TrendingDownTwoToneIcon from '@mui/icons-material/TrendingDownTwoTone';\nimport TrendingUpTwoToneIcon from '@mui/icons-material/TrendingUpTwoTone';\nimport TrendingFlatTwoToneIcon from '@mui/icons-material/TrendingFlatTwoTone';\n\nconst AvatarWrapper = styled(Avatar)(\n  ({ theme }) => `\n    margin: ${theme.spacing(0, 0, 1, -0.5)};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: ${theme.spacing(1)};\n    padding: ${theme.spacing(0.5)};\n    border-radius: 60px;\n    height: ${theme.spacing(5.5)};\n    width: ${theme.spacing(5.5)};\n    background: ${\n      theme.palette.mode === 'dark'\n        ? theme.colors.alpha.trueWhite[30]\n        : alpha(theme.colors.alpha.black[100], 0.07)\n    };\n  \n    img {\n      background: ${theme.colors.alpha.trueWhite[100]};\n      padding: ${theme.spacing(0.5)};\n      display: block;\n      border-radius: inherit;\n      height: ${theme.spacing(4.5)};\n      width: ${theme.spacing(4.5)};\n    }\n`\n);\n\nfunction WatchListRow() {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const Box1Options = {\n    chart: {\n      animations: {\n        enabled: false\n      },\n      background: 'transparent',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    labels: [\n      'Monday',\n      'Tueday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n      'Sunday'\n    ],\n    stroke: {\n      curve: 'smooth',\n      colors: [theme.colors.primary.main],\n      width: 2\n    },\n    yaxis: {\n      show: false\n    },\n    colors: [theme.colors.primary.main],\n    grid: {\n      padding: {\n        top: 10,\n        right: 5,\n        bottom: 10,\n        left: 5\n      }\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    tooltip: {\n      fixed: {\n        enabled: true\n      },\n      x: {\n        show: true\n      },\n      y: {\n        title: {\n          formatter() {\n            return 'Price: $';\n          }\n        }\n      },\n      marker: {\n        show: false\n      }\n    }\n  };\n\n  const Box1Data = [\n    {\n      name: 'Bitcoin',\n      data: [55.701, 57.598, 48.607, 46.439, 58.755, 46.978, 58.16]\n    }\n  ];\n\n  const Box2Data = [\n    {\n      name: 'Ethereum',\n      data: [1.854, 1.873, 1.992, 2.009, 1.909, 1.942, 1.884]\n    }\n  ];\n\n  const Box3Data = [\n    {\n      name: 'Cardano',\n      data: [13, 16, 14, 18, 8, 11, 20]\n    }\n  ];\n\n  return (\n    <Card>\n      <Stack\n        direction=\"row\"\n        justifyContent=\"space-evenly\"\n        alignItems=\"stretch\"\n        divider={<Divider orientation=\"vertical\" flexItem />}\n        spacing={0}\n      >\n        <Box\n          sx={{\n            width: '100%',\n            p: 3\n          }}\n        >\n          <Box\n            display=\"flex\"\n            alignItems=\"flex-start\"\n            justifyContent=\"space-between\"\n          >\n            <Box display=\"flex\" alignItems=\"center\">\n              <AvatarWrapper>\n                <img\n                  alt=\"BTC\"\n                  src=\"/static/images/placeholders/logo/bitcoin.png\"\n                />\n              </AvatarWrapper>\n              <Box>\n                <Typography variant=\"h4\" noWrap>\n                  Bitcoin\n                </Typography>\n                <Typography variant=\"subtitle1\" noWrap>\n                  BTC\n                </Typography>\n              </Box>\n            </Box>\n            <Label color=\"secondary\">24h</Label>\n          </Box>\n          <Box\n            mt={3}\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-start'\n              }}\n            >\n              <Typography\n                variant=\"h2\"\n                sx={{\n                  pr: 1\n                }}\n              >\n                $56,475.99\n              </Typography>\n              <Text color=\"success\">\n                <b>+12.5%</b>\n              </Text>\n            </Box>\n            <TrendingUpTwoToneIcon\n              sx={{\n                color: `${theme.colors.success.main}`\n              }}\n            />\n          </Box>\n          <Box pt={2}>\n            <Chart\n              options={Box1Options}\n              series={Box1Data}\n              type=\"line\"\n              height={100}\n            />\n          </Box>\n        </Box>\n        <Box\n          sx={{\n            width: '100%',\n            p: 3\n          }}\n        >\n          <Box\n            display=\"flex\"\n            alignItems=\"flex-start\"\n            justifyContent=\"space-between\"\n          >\n            <Box display=\"flex\" alignItems=\"center\">\n              <AvatarWrapper>\n                <img\n                  alt=\"ETH\"\n                  src=\"/static/images/placeholders/logo/ethereum.png\"\n                />\n              </AvatarWrapper>\n              <Box>\n                <Typography variant=\"h4\" noWrap>\n                  Ethereum\n                </Typography>\n                <Typography variant=\"subtitle1\" noWrap>\n                  ETH\n                </Typography>\n              </Box>\n            </Box>\n            <Label color=\"secondary\">24h</Label>\n          </Box>\n          <Box\n            mt={3}\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-start'\n              }}\n            >\n              <Typography\n                variant=\"h2\"\n                sx={{\n                  pr: 1\n                }}\n              >\n                $1,968.00\n              </Typography>\n              <Text color=\"error\">\n                <b>-3.24%</b>\n              </Text>\n            </Box>\n            <TrendingDownTwoToneIcon\n              sx={{\n                color: `${theme.colors.error.main}`\n              }}\n            />\n          </Box>\n          <Box pt={2}>\n            <Chart\n              options={Box1Options}\n              series={Box2Data}\n              type=\"line\"\n              height={100}\n            />\n          </Box>\n        </Box>\n        <Box\n          sx={{\n            width: '100%',\n            p: 3\n          }}\n        >\n          <Box\n            display=\"flex\"\n            alignItems=\"flex-start\"\n            justifyContent=\"space-between\"\n          >\n            <Box display=\"flex\" alignItems=\"center\">\n              <AvatarWrapper>\n                <img\n                  alt=\"ADA\"\n                  src=\"/static/images/placeholders/logo/cardano.png\"\n                />\n              </AvatarWrapper>\n              <Box>\n                <Typography variant=\"h4\" noWrap>\n                  Cardano\n                </Typography>\n                <Typography variant=\"subtitle1\" noWrap>\n                  ADA\n                </Typography>\n              </Box>\n            </Box>\n            <Label color=\"secondary\">24h</Label>\n          </Box>\n          <Box\n            mt={3}\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-start'\n              }}\n            >\n              <Typography\n                variant=\"h2\"\n                sx={{\n                  pr: 1\n                }}\n              >\n                $23.00\n              </Typography>\n              <Text color=\"error\">\n                <b>-0.33%</b>\n              </Text>\n            </Box>\n            <TrendingFlatTwoToneIcon\n              sx={{\n                color: `${theme.colors.warning.main}`\n              }}\n            />\n          </Box>\n          <Box pt={2}>\n            <Chart\n              options={Box1Options}\n              series={Box3Data}\n              type=\"line\"\n              height={100}\n            />\n          </Box>\n        </Box>\n      </Stack>\n      <Divider />\n      <CardActions\n        disableSpacing\n        sx={{\n          p: 3,\n          display: 'flex',\n          justifyContent: 'center'\n        }}\n      >\n        <Button variant=\"outlined\">{t('View more assets')}</Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default WatchListRow;\n","import { useState } from 'react';\nimport {\n  Button,\n  Box,\n  ToggleButton,\n  ToggleButtonGroup,\n  Card,\n  Typography,\n  styled\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport ViewWeekTwoToneIcon from '@mui/icons-material/ViewWeekTwoTone';\nimport TableRowsTwoToneIcon from '@mui/icons-material/TableRowsTwoTone';\nimport WatchListColumn from './WatchListColumn';\nimport WatchListRow from './WatchListRow';\n\nconst EmptyResultsWrapper = styled('img')(\n  ({ theme }) => `\n      max-width: 100%;\n      width: ${theme.spacing(66)};\n      height: ${theme.spacing(34)};\n`\n);\n\nfunction WatchList() {\n  const { t } = useTranslation();\n\n  const [tabs, setTab] = useState('watch_list_columns');\n\n  const handleViewOrientation = (_event, newValue) => {\n    setTab(newValue);\n  };\n\n  return (\n    <>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        sx={{\n          pb: 3\n        }}\n      >\n        <Typography variant=\"h3\">{t('Watch List')}</Typography>\n        <ToggleButtonGroup\n          value={tabs}\n          exclusive\n          onChange={handleViewOrientation}\n        >\n          <ToggleButton disableRipple value=\"watch_list_columns\">\n            <ViewWeekTwoToneIcon />\n          </ToggleButton>\n          <ToggleButton disableRipple value=\"watch_list_rows\">\n            <TableRowsTwoToneIcon />\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </Box>\n\n      {tabs === 'watch_list_columns' && <WatchListColumn />}\n\n      {tabs === 'watch_list_rows' && <WatchListRow />}\n\n      {!tabs && (\n        <Card\n          sx={{\n            textAlign: 'center',\n            p: 3\n          }}\n        >\n          <EmptyResultsWrapper src=\"/static/images/placeholders/illustrations/1.svg\" />\n\n          <Typography\n            align=\"center\"\n            variant=\"h2\"\n            fontWeight=\"normal\"\n            color=\"text.secondary\"\n            sx={{\n              mt: 3\n            }}\n            gutterBottom\n          >\n            {t('Click something, anything!')}\n          </Typography>\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            sx={{\n              mt: 4\n            }}\n          >\n            Maybe, a button?\n          </Button>\n        </Card>\n      )}\n    </>\n  );\n}\n\nexport default WatchList;\n","import { Typography, Avatar, Grid, useTheme } from '@mui/material';\nimport useAuth from 'src/hooks/useAuth';\nimport { useTranslation } from 'react-i18next';\n\nfunction PageHeader() {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const theme = useTheme();\n\n  return (\n    <Grid container alignItems=\"center\">\n      <Grid item>\n        <Avatar\n          sx={{\n            mr: 2,\n            width: theme.spacing(8),\n            height: theme.spacing(8)\n          }}\n          variant=\"rounded\"\n          alt={user.name}\n          src={user.avatar}\n        />\n      </Grid>\n      <Grid item>\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n          {t('Welcome')}, {user.name}!\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          {t('Today is a good day to start trading crypto assets!')}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PageHeader;\n","import { Helmet } from 'react-helmet-async';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { Grid } from '@mui/material';\nimport Footer from 'src/components/Footer';\n\nimport AccountBalance from './AccountBalance';\nimport Wallets from './Wallets';\nimport AccountSecurity from './AccountSecurity';\nimport RecentOrders from './RecentOrders';\nimport WatchList from './WatchList';\nimport PageHeader from './PageHeader';\n\nfunction DashboardCrypto() {\n  return (\n    <>\n      <Helmet>\n        <title>Crypto Dashboard</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageHeader />\n      </PageTitleWrapper>\n\n      <Grid\n        sx={{\n          px: 4\n        }}\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        spacing={4}\n      >\n        <Grid item xs={12}>\n          <AccountBalance />\n        </Grid>\n        <Grid item lg={8} xs={12}>\n          <Wallets />\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <AccountSecurity />\n        </Grid>\n        <Grid item xs={12}>\n          <RecentOrders />\n        </Grid>\n        <Grid item xs={12}>\n          <WatchList />\n        </Grid>\n      </Grid>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default DashboardCrypto;\n","import PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\n\nconst LabelWrapper = styled('span')(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: ${theme.spacing(0.5, 1)};\n      font-size: ${theme.typography.pxToRem(13)};\n      border-radius: ${theme.general.borderRadius};\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      max-height: ${theme.spacing(3)};\n      \n      &.MuiLabel {\n        &-primary {\n          background-color: ${theme.colors.primary.lighter};\n          color: ${theme.palette.primary.main}\n        }\n\n        &-black {\n          background-color: ${theme.colors.alpha.black[100]};\n          color: ${theme.colors.alpha.white[100]};\n        }\n        \n        &-secondary {\n          background-color: ${theme.colors.secondary.lighter};\n          color: ${theme.palette.secondary.main}\n        }\n        \n        &-success {\n          background-color: ${theme.colors.success.lighter};\n          color: ${theme.palette.success.main}\n        }\n        \n        &-warning {\n          background-color: ${theme.colors.warning.lighter};\n          color: ${theme.palette.warning.main}\n        }\n              \n        &-error {\n          background-color: ${theme.colors.error.lighter};\n          color: ${theme.palette.error.main}\n        }\n        \n        &-info {\n          background-color: ${theme.colors.info.lighter};\n          color: ${theme.palette.info.main}\n        }\n      }\n`\n);\n\nconst Label = ({ className, color = 'secondary', children, ...rest }) => {\n  return (\n    <LabelWrapper className={`MuiLabel-${color}`} {...rest}>\n      {children}\n    </LabelWrapper>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'primary',\n    'black',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info'\n  ])\n};\n\nexport default Label;\n","import PropTypes from 'prop-types';\nimport { Box, styled } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4)};\n`\n);\n\nconst PageTitleWrapper = ({ children }) => {\n  return (\n    <>\n      <PageTitle className=\"MuiPageTitle-wrapper\">{children}</PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","import { useState } from 'react';\nimport {\n  Card,\n  CardHeader,\n  ListItemText,\n  List,\n  ListItem,\n  Divider,\n  Switch,\n  ListItemAvatar,\n  Avatar,\n  styled\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport LockTwoToneIcon from '@mui/icons-material/LockTwoTone';\nimport PhoneLockedTwoToneIcon from '@mui/icons-material/PhoneLockedTwoTone';\nimport EmailTwoToneIcon from '@mui/icons-material/EmailTwoTone';\nimport Text from 'src/components/Text';\n\nconst AvatarWrapperError = styled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.error.lighter};\n      color:  ${theme.colors.error.main};\n`\n);\n\nconst AvatarWrapperSuccess = styled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.success.lighter};\n      color:  ${theme.colors.success.main};\n`\n);\n\nconst AvatarWrapperWarning = styled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.warning.lighter};\n      color:  ${theme.colors.warning.main};\n`\n);\n\nfunction AccountSecurity() {\n  const { t } = useTranslation();\n\n  const [checked, setChecked] = useState(['phone_verification']);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return (\n    <Card>\n      <CardHeader title={t('Account Security')} />\n      <Divider />\n      <List disablePadding>\n        <ListItem\n          sx={{\n            py: 2\n          }}\n        >\n          <ListItemAvatar>\n            <AvatarWrapperError>\n              <LockTwoToneIcon />\n            </AvatarWrapperError>\n          </ListItemAvatar>\n          <ListItemText\n            primary={<Text color=\"black\">{t('2FA Authentication')}</Text>}\n            primaryTypographyProps={{\n              variant: 'body1',\n              fontWeight: 'bold',\n              color: 'textPrimary',\n              gutterBottom: true,\n              noWrap: true\n            }}\n            secondary={<Text color=\"error\">{t('Disabled')}</Text>}\n            secondaryTypographyProps={{ variant: 'body2', noWrap: true }}\n          />\n          <Switch\n            edge=\"end\"\n            color=\"primary\"\n            onChange={handleToggle('2fa')}\n            checked={checked.indexOf('2fa') !== -1}\n          />\n        </ListItem>\n        <Divider />\n        <ListItem\n          sx={{\n            py: 2\n          }}\n        >\n          <ListItemAvatar>\n            <AvatarWrapperSuccess>\n              <PhoneLockedTwoToneIcon />\n            </AvatarWrapperSuccess>\n          </ListItemAvatar>\n          <ListItemText\n            primary={<Text color=\"black\">{t('Phone Verification')}</Text>}\n            primaryTypographyProps={{\n              variant: 'body1',\n              fontWeight: 'bold',\n              color: 'textPrimary',\n              gutterBottom: true,\n              noWrap: true\n            }}\n            secondary={<Text color=\"success\">{t('Active')}</Text>}\n            secondaryTypographyProps={{ variant: 'body2', noWrap: true }}\n          />\n          <Switch\n            edge=\"end\"\n            color=\"primary\"\n            onChange={handleToggle('phone_verification')}\n            checked={checked.indexOf('phone_verification') !== -1}\n          />\n        </ListItem>\n        <Divider />\n        <ListItem\n          sx={{\n            py: 2\n          }}\n        >\n          <ListItemAvatar>\n            <AvatarWrapperWarning>\n              <EmailTwoToneIcon />\n            </AvatarWrapperWarning>\n          </ListItemAvatar>\n          <ListItemText\n            primary={<Text color=\"black\">{t('Recovery Email')}</Text>}\n            primaryTypographyProps={{\n              variant: 'body1',\n              fontWeight: 'bold',\n              color: 'textPrimary',\n              gutterBottom: true,\n              noWrap: true\n            }}\n            secondary={<Text color=\"warning\">{t('Not completed')}</Text>}\n            secondaryTypographyProps={{ variant: 'body2', noWrap: true }}\n          />\n          <Switch\n            edge=\"end\"\n            color=\"primary\"\n            onChange={handleToggle('recovery_email')}\n            checked={checked.indexOf('recovery_email') !== -1}\n          />\n        </ListItem>\n      </List>\n    </Card>\n  );\n}\n\nexport default AccountSecurity;\n","import { useState, useRef } from 'react';\n\nimport {\n  Box,\n  Menu,\n  IconButton,\n  Button,\n  ListItemText,\n  ListItem,\n  List,\n  Typography,\n  styled\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\n\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\n\nconst ButtonError = styled(Button)(\n  ({ theme }) => `\n     background: ${theme.colors.error.main};\n     color: ${theme.palette.error.contrastText};\n\n     &:hover {\n        background: ${theme.colors.error.dark};\n     }\n    `\n);\n\nfunction BulkActions() {\n  const [onMenuOpen, menuOpen] = useState(false);\n  const moreRef = useRef(null);\n  const { t } = useTranslation();\n\n  const openMenu = () => {\n    menuOpen(true);\n  };\n\n  const closeMenu = () => {\n    menuOpen(false);\n  };\n\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Box display=\"flex\" alignItems=\"center\">\n          <Typography variant=\"h5\" color=\"text.secondary\">\n            {t('Bulk actions')}:\n          </Typography>\n          <ButtonError\n            sx={{\n              ml: 1\n            }}\n            startIcon={<DeleteTwoToneIcon />}\n            variant=\"contained\"\n          >\n            {t('Delete')}\n          </ButtonError>\n        </Box>\n        <IconButton\n          color=\"primary\"\n          onClick={openMenu}\n          ref={moreRef}\n          sx={{\n            ml: 2,\n            p: 1\n          }}\n        >\n          <MoreVertTwoToneIcon />\n        </IconButton>\n      </Box>\n\n      <Menu\n        disableScrollLock\n        keepMounted\n        anchorEl={moreRef.current}\n        open={onMenuOpen}\n        onClose={closeMenu}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n      >\n        <List\n          sx={{\n            p: 1\n          }}\n          component=\"nav\"\n        >\n          <ListItem button>\n            <ListItemText primary={t('Bulk delete selected')} />\n          </ListItem>\n          <ListItem button>\n            <ListItemText primary={t('Bulk edit selected')} />\n          </ListItem>\n        </List>\n      </Menu>\n    </>\n  );\n}\n\nexport default BulkActions;\n"],"sourceRoot":""}