{"version":3,"sources":["content/dashboards/Monitoring/HealthStatus.js","content/dashboards/Monitoring/DatacenterClusters.js","content/dashboards/Monitoring/VirtualServers.js","content/dashboards/Monitoring/ActiveServers.js","content/dashboards/Monitoring/DataCenters.js","content/dashboards/Monitoring/CpuUsage.js","content/dashboards/Monitoring/StorageUsage.js","content/dashboards/Monitoring/MemoryUsage.js","content/dashboards/Monitoring/PageHeader.js","content/dashboards/Monitoring/index.js","components/Label/index.js","components/PageTitleWrapper/index.js","content/dashboards/Monitoring/ResourcesAlarm.js"],"names":["BoxChartWrapperText","styled","Box","AvatarSuccess","Avatar","theme","colors","success","lighter","main","spacing","AvatarError","error","IconButtonWrapper","IconButton","alpha","black","transitions","create","secondary","HealthStatus","t","useTranslation","useTheme","chartOptions","chart","background","stacked","toolbar","show","plotOptions","pie","donut","size","states","hover","filter","type","value","active","dataLabels","enabled","formatter","val","dropShadow","top","left","blur","color","opacity","fill","legend","stroke","width","mode","palette","tooltip","Card","sx","height","CardHeader","action","Button","title","p","Grid","container","alignItems","item","xs","sm","className","options","series","mt","display","flexGrow","flexDirection","pb","Typography","variant","lineHeight","pr","fontSize","typography","pxToRem","List","disablePadding","ListItem","disableGutters","py","ListItemText","primary","primaryTypographyProps","Text","ml","Divider","textAlign","px","borderRadius","transform","transition","boxShadow","shadows","startIcon","TextfieldWrapper","white","CardIndicatorWrapper","CardActionsWrapper","CardActions","IconWrapper","AvatarAddWrapper","CardAddAction","DatacenterClusters","clusters","badge","text","sorts","actionRef","useRef","actionRef1","useState","openCluster","setOpenMenuCluster","cluster","setCluster","openSort","setOpenMenuSort","sort","setSort","md","justifyContent","mr","ref","onClick","endIcon","Menu","disableScrollLock","anchorEl","current","onClose","open","anchorOrigin","vertical","horizontal","transformOrigin","map","_cluster","MenuItem","Label","TextField","InputProps","startAdornment","InputAdornment","position","placeholder","pt","_sort","lg","info","CardContent","style","src","alt","gutterBottom","warning","Tooltip","arrow","CardActionArea","DotError","DotSuccess","SwitchSuccess","Switch","VirtualServers","server","state1","setState1","state2","setState2","component","ListItemAvatar","minWidth","mx","orientation","flexItem","checked","onChange","event","target","name","ImageWrapper","ListItemWrapper","ActiveServers","curve","zoom","markers","sizeOffset","shape","strokeWidth","strokeOpacity","strokeColors","dark","light","normal","bar","columnWidth","labels","grid","xaxis","axisBorder","axisTicks","yaxis","tickAmount","deFlag","secondaryTypographyProps","align","noWrap","usFlag","esFlag","frFlag","Alert","severity","data","TooltipWrapper","props","classes","popper","tooltipClasses","backgroundColor","trueWhite","getContrastText","fontWeight","general","borderRadiusSm","DotLegend","DataCenters","projection","projectionConfig","rotate","scale","geography","geographies","geo","rsmKey","coordinates","placement","r","my","CpuUsage","mb","margin","nrOfLevels","hideText","needleColor","needleBaseColor","arcWidth","arcPadding","cornerRadius","percent","StorageUsage","bg","radialBar","track","hollow","chartSeries","MemoryUsage","offsetY","startAngle","endAngle","floating","offsetX","useSeriesColors","seriesName","opts","w","globals","seriesIndex","itemMargin","PageHeader","pending","setPending","LoadingButton","loading","DashboardMonitoring","PageTitleWrapper","direction","ResourcesAlarm","Footer","LabelWrapper","children","rest","PageTitle","CardHeaderWrapper","setOpen","sparkline","strokeDashArray","borderColor","divider","padding","right","bottom","subheader","formatDistance","subMinutes","Date","addSuffix","in"],"mappings":"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","file":"static/js/82.c3bfb20c.chunk.js","sourcesContent":["import {\n  Button,\n  Card,\n  CardHeader,\n  Typography,\n  Box,\n  List,\n  ListItemText,\n  ListItem,\n  IconButton,\n  Avatar,\n  alpha,\n  Grid,\n  Divider,\n  useTheme,\n  styled\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport RefreshTwoToneIcon from '@mui/icons-material/RefreshTwoTone';\nimport CloseTwoToneIcon from '@mui/icons-material/CloseTwoTone';\nimport CheckTwoToneIcon from '@mui/icons-material/CheckTwoTone';\nimport Text from 'src/components/Text';\nimport Chart from 'react-apexcharts';\n\nimport RotateLeftTwoToneIcon from '@mui/icons-material/RotateLeftTwoTone';\n\nconst BoxChartWrapperText = styled(Box)(\n  () => `\n    position: relative;\n    width: 210px;\n    height: 210px;\n    \n    .ChartText {\n      position: absolute;\n      z-index: 7;\n      height: 40px;\n      width: 40px;\n      top: 50%;\n      left: 50%;\n      margin: -31px 0 0 -19px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n`\n);\n\nconst AvatarSuccess = styled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.success.lighter};\n      color: ${theme.colors.success.main};\n      width: ${theme.spacing(4)};\n      height: ${theme.spacing(4)};\n      margin-right: ${theme.spacing(1)};\n`\n);\n\nconst AvatarError = styled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.error.lighter};\n      color: ${theme.colors.error.main};\n      width: ${theme.spacing(4)};\n      height: ${theme.spacing(4)};\n      margin-right: ${theme.spacing(1)};\n`\n);\n\nconst IconButtonWrapper = styled(IconButton)(\n  ({ theme }) => `\n    color: ${theme.colors.alpha.black[70]};\n    border-radius: 100px;\n    transition: ${theme.transitions.create(['all'])};\n    \n    :hover {\n      background-color: ${theme.colors.secondary.lighter};\n      color: ${theme.colors.alpha.black[100]};\n    }\n`\n);\n\nfunction HealthStatus() {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      pie: {\n        donut: {\n          size: '45%'\n        }\n      }\n    },\n    states: {\n      hover: {\n        filter: {\n          type: 'lighten',\n          value: 0.1\n        }\n      },\n      active: {\n        filter: {\n          type: 'none'\n        }\n      }\n    },\n    colors: [\n      theme.colors.success.main,\n      alpha(theme.colors.secondary.main, 0.3)\n    ],\n    dataLabels: {\n      enabled: true,\n      formatter(val) {\n        return `${val}%`;\n      },\n      dropShadow: {\n        enabled: true,\n        top: 1,\n        left: 1,\n        blur: 1,\n        color: theme.colors.alpha.black[50],\n        opacity: 0.5\n      }\n    },\n    fill: {\n      opacity: 1\n    },\n    legend: {\n      show: false\n    },\n    stroke: {\n      width: 0\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    tooltip: {\n      enabled: false\n    }\n  };\n\n  const chartSeries = [82, 18];\n\n  return (\n    <Card\n      sx={{\n        height: '100%'\n      }}\n    >\n      <CardHeader\n        action={<Button>{t('Check status')}</Button>}\n        title={t('Health Status')}\n      />\n      <Box\n        sx={{\n          p: 2\n        }}\n      >\n        <Grid container spacing={6} alignItems=\"center\">\n          <Grid item xs={12} sm={4}>\n            <BoxChartWrapperText>\n              <div className=\"ChartText\">\n                <IconButtonWrapper>\n                  <RefreshTwoToneIcon />\n                </IconButtonWrapper>\n              </div>\n              <Chart\n                height=\"100%\"\n                width=\"100%\"\n                options={chartOptions}\n                series={chartSeries}\n                type=\"donut\"\n              />\n            </BoxChartWrapperText>\n          </Grid>\n          <Grid item xs={12} sm={8}>\n            <Box\n              sx={{\n                mt: `-${theme.spacing(2)}`\n              }}\n              display=\"flex\"\n              alignItems=\"flex-start\"\n              flexGrow={1}\n              flexDirection=\"column\"\n            >\n              <Box\n                sx={{\n                  pb: 1\n                }}\n              >\n                <Typography\n                  color=\"text.primary\"\n                  variant=\"h1\"\n                  lineHeight={1}\n                  sx={{\n                    pr: 0.5,\n                    display: 'inline-flex',\n                    fontSize: `${theme.typography.pxToRem(50)}`\n                  }}\n                >\n                  82\n                </Typography>\n                <Typography\n                  color=\"text.secondary\"\n                  variant=\"h2\"\n                  lineHeight={1}\n                  sx={{\n                    pr: 2,\n                    display: 'inline-flex'\n                  }}\n                >\n                  /100\n                </Typography>\n              </Box>\n              <List\n                disablePadding\n                sx={{\n                  width: '100%'\n                }}\n              >\n                <ListItem\n                  disableGutters\n                  sx={{\n                    py: 0.2\n                  }}\n                >\n                  <ListItemText\n                    primary={t('High accuracy test run')}\n                    primaryTypographyProps={{ variant: 'subtitle2' }}\n                  />\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Text color=\"success\">\n                      <b>{t('Ok')}</b>\n                    </Text>\n                    <AvatarSuccess\n                      sx={{\n                        ml: 1\n                      }}\n                    >\n                      <CheckTwoToneIcon />\n                    </AvatarSuccess>\n                  </Box>\n                </ListItem>\n                <ListItem\n                  disableGutters\n                  sx={{\n                    py: 0.2\n                  }}\n                >\n                  <ListItemText\n                    primary={t('Storage capacity')}\n                    primaryTypographyProps={{ variant: 'subtitle2' }}\n                  />\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Text color=\"success\">\n                      <b>{t('Ok')}</b>\n                    </Text>\n                    <AvatarSuccess\n                      sx={{\n                        ml: 1\n                      }}\n                    >\n                      <CheckTwoToneIcon />\n                    </AvatarSuccess>\n                  </Box>\n                </ListItem>\n                <ListItem\n                  disableGutters\n                  sx={{\n                    py: 0.2\n                  }}\n                >\n                  <ListItemText\n                    primary={t('Performance test')}\n                    primaryTypographyProps={{ variant: 'subtitle2' }}\n                  />\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Text color=\"error\">\n                      <b>{t('Failed')}</b>\n                    </Text>\n                    <AvatarError\n                      sx={{\n                        ml: 1\n                      }}\n                    >\n                      <CloseTwoToneIcon />\n                    </AvatarError>\n                  </Box>\n                </ListItem>\n              </List>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n      <Divider />\n      <Box\n        py={2}\n        sx={{\n          textAlign: 'center'\n        }}\n      >\n        <Button\n          sx={{\n            px: 2.5,\n            borderRadius: 10,\n            transform: 'translateY(0px)',\n            transition: `${theme.transitions.create(['all'])}`,\n            boxShadow: `${theme.colors.shadows.primary}`,\n\n            '&:hover': {\n              transform: 'translateY(-2px)',\n              boxShadow: `${theme.colors.shadows.primary}`\n            },\n            '&:active': {\n              boxShadow: 'none'\n            }\n          }}\n          variant=\"contained\"\n          startIcon={<RotateLeftTwoToneIcon />}\n        >\n          {t('Check again')}\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nexport default HealthStatus;\n","import { useRef, useState } from 'react';\nimport {\n  Button,\n  Card,\n  Box,\n  CardContent,\n  Menu,\n  MenuItem,\n  Grid,\n  Typography,\n  Avatar,\n  CardActionArea,\n  Tooltip,\n  InputAdornment,\n  TextField,\n  CardActions,\n  Divider,\n  useTheme,\n  styled\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport AddCircleTwoToneIcon from '@mui/icons-material/AddCircleTwoTone';\nimport ExpandMoreTwoToneIcon from '@mui/icons-material/ExpandMoreTwoTone';\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\nimport Label from 'src/components/Label';\nimport SearchTwoToneIcon from '@mui/icons-material/SearchTwoTone';\nimport Text from 'src/components/Text';\nimport CheckTwoToneIcon from '@mui/icons-material/CheckTwoTone';\nimport RefreshTwoToneIcon from '@mui/icons-material/RefreshTwoTone';\n\nconst TextfieldWrapper = styled(Box)(\n  ({ theme }) => `\n    .MuiOutlinedInput-root {\n      background: ${theme.colors.alpha.white[100]};\n    }\n`\n);\n\nconst CardIndicatorWrapper = styled(Card)(\n  () => `\n    position: relative;\n    \n    .MuiCard-indicator {\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      height: 5px;\n    }\n`\n);\n\nconst CardActionsWrapper = styled(CardActions)(\n  ({ theme }) => `\n    background: ${theme.colors.alpha.black[5]};\n    padding: ${theme.spacing(2)} ${theme.spacing(2)};\n`\n);\n\nconst IconWrapper = styled(Box)(\n  ({ theme }) => `\n    display: flex;\n    margin-right: ${theme.spacing(0.5)};\n`\n);\n\nconst AvatarAddWrapper = styled(Avatar)(\n  ({ theme }) => `\n        background: ${theme.colors.alpha.black[5]};\n        color: ${theme.colors.primary.main};\n        width: ${theme.spacing(8)};\n        height: ${theme.spacing(8)};\n`\n);\n\nconst CardAddAction = styled(Card)(\n  ({ theme }) => `\n        border: ${theme.colors.primary.main} dashed 1px;\n        height: 100%;\n        color: ${theme.colors.primary.main};\n        transition: ${theme.transitions.create(['all'])};\n        \n        .MuiCardActionArea-root {\n          height: 100%;\n          justify-content: center;\n          align-items: center;\n          display: flex;\n        }\n        \n        .MuiTouchRipple-root {\n          opacity: .2;\n        }\n        \n        &:hover {\n          border-color: ${theme.colors.alpha.black[70]};\n        }\n`\n);\n\nfunction DatacenterClusters() {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const clusters = [\n    {\n      value: '1',\n      badge: '15',\n      text: t('All clusters')\n    },\n    {\n      value: '2',\n      badge: '25',\n      text: t('Oracle')\n    },\n    {\n      value: '3',\n      badge: '35',\n      text: t('IBM')\n    },\n    {\n      value: '4',\n      badge: '45',\n      text: t('Microsoft')\n    }\n  ];\n  const sorts = [\n    {\n      value: '1',\n      text: t('Sort by name')\n    },\n    {\n      value: '2',\n      text: t('Sort by name')\n    },\n    {\n      value: '3',\n      text: t('Sort by status')\n    },\n    {\n      value: '4',\n      text: t('Sort by hosts')\n    }\n  ];\n\n  const actionRef = useRef(null);\n  const actionRef1 = useRef(null);\n  const [openCluster, setOpenMenuCluster] = useState(false);\n  const [cluster, setCluster] = useState(clusters[0].text);\n  const [openSort, setOpenMenuSort] = useState(false);\n  const [sort, setSort] = useState('Sort by...');\n\n  return (\n    <>\n      <Typography\n        variant=\"h3\"\n        sx={{\n          pb: 3\n        }}\n      >\n        {t('Datacenter Clusters')}\n      </Typography>\n      <Box\n        display={{ xs: 'block', md: 'flex' }}\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        sx={{\n          pb: 3\n        }}\n      >\n        <Box display=\"flex\" alignItems=\"center\">\n          <Button\n            sx={{\n              mr: 1\n            }}\n            variant=\"contained\"\n            color=\"secondary\"\n            ref={actionRef}\n            onClick={() => setOpenMenuCluster(true)}\n            endIcon={<ExpandMoreTwoToneIcon fontSize=\"small\" />}\n          >\n            {cluster}\n          </Button>\n          <Menu\n            disableScrollLock\n            anchorEl={actionRef.current}\n            onClose={() => setOpenMenuCluster(false)}\n            open={openCluster}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left'\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'left'\n            }}\n          >\n            {clusters.map((_cluster) => (\n              <MenuItem\n                key={_cluster.value}\n                onClick={() => {\n                  setCluster(_cluster.text);\n                  setOpenMenuCluster(false);\n                }}\n              >\n                {_cluster.text}\n                <Box\n                  sx={{\n                    ml: 1\n                  }}\n                >\n                  <Label color=\"success\">{_cluster.badge}</Label>\n                </Box>\n              </MenuItem>\n            ))}\n          </Menu>\n          <TextfieldWrapper>\n            <TextField\n              size=\"small\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchTwoToneIcon />\n                  </InputAdornment>\n                )\n              }}\n              placeholder={t('Search...')}\n            />\n          </TextfieldWrapper>\n        </Box>\n        <Box\n          sx={{\n            pt: { xs: 2, md: 0 }\n          }}\n        >\n          <Button\n            variant=\"outlined\"\n            ref={actionRef1}\n            onClick={() => setOpenMenuSort(true)}\n            endIcon={<ExpandMoreTwoToneIcon fontSize=\"small\" />}\n          >\n            {sort}\n          </Button>\n          <Menu\n            disableScrollLock\n            anchorEl={actionRef1.current}\n            onClose={() => setOpenMenuSort(false)}\n            open={openSort}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right'\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right'\n            }}\n          >\n            {sorts.map((_sort) => (\n              <MenuItem\n                key={_sort.value}\n                onClick={() => {\n                  setSort(_sort.text);\n                  setOpenMenuSort(false);\n                }}\n              >\n                {_sort.text}\n              </MenuItem>\n            ))}\n          </Menu>\n          <Button\n            sx={{\n              ml: 1\n            }}\n            variant=\"contained\"\n            startIcon={<AddCircleTwoToneIcon />}\n          >\n            {t('Create new cluster')}\n          </Button>\n        </Box>\n      </Box>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6} md={5} lg={4}>\n          <CardIndicatorWrapper>\n            <Box\n              className=\"MuiCard-indicator\"\n              sx={{\n                background: `${theme.colors.info.main}`\n              }}\n            />\n            <CardContent\n              sx={{\n                pb: 4,\n                pt: 7,\n                px: 3,\n                textAlign: 'center'\n              }}\n            >\n              <img\n                style={{ height: '30px' }}\n                src=\"/static/images/placeholders/logo/netflix-logo.jpg\"\n                alt=\"...\"\n              />\n              <Typography\n                variant=\"h3\"\n                sx={{\n                  pt: 2,\n                  px: 3\n                }}\n                gutterBottom\n              >\n                Mainframe Analytics Cluster for Visitors and Page Views\n              </Typography>\n              <Typography variant=\"subtitle2\">\n                {t('Maintained for')} Netflix Inc.\n              </Typography>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                sx={{\n                  mt: 3\n                }}\n              >\n                {t('View details')}\n              </Button>\n            </CardContent>\n            <Divider />\n            <CardActionsWrapper\n              sx={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}\n            >\n              <Typography variant=\"subtitle1\">\n                <Text color=\"black\">\n                  <b>7</b>\n                </Text>{' '}\n                {t('hosts')}\n              </Typography>\n              <Typography\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center'\n                }}\n                variant=\"subtitle1\"\n              >\n                <IconWrapper\n                  sx={{\n                    color: `${theme.colors.success.main}`\n                  }}\n                >\n                  <CheckTwoToneIcon />\n                </IconWrapper>\n                <Text color=\"success\">{t('available')}</Text>\n              </Typography>\n            </CardActionsWrapper>\n          </CardIndicatorWrapper>\n        </Grid>\n        <Grid item xs={12} sm={6} md={5} lg={4}>\n          <CardIndicatorWrapper>\n            <Box\n              className=\"MuiCard-indicator\"\n              sx={{\n                background: `${theme.colors.success.main}`\n              }}\n            />\n            <CardContent\n              sx={{\n                pb: 4,\n                pt: 7,\n                px: 3,\n                textAlign: 'center'\n              }}\n            >\n              <img\n                style={{ height: '30px' }}\n                src=\"/static/images/placeholders/logo/google-logo.jpg\"\n                alt=\"...\"\n              />\n              <Typography\n                variant=\"h3\"\n                sx={{\n                  pt: 2,\n                  px: 3\n                }}\n                gutterBottom\n              >\n                Main Website Sales Monitoring Cluster Database\n              </Typography>\n              <Typography variant=\"subtitle2\">\n                {t('Maintained for')} Google Corp.\n              </Typography>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                sx={{\n                  mt: 3\n                }}\n              >\n                {t('View details')}\n              </Button>\n            </CardContent>\n            <Divider />\n            <CardActionsWrapper\n              sx={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}\n            >\n              <Typography variant=\"subtitle1\">\n                <Text color=\"black\">\n                  <b>15</b>\n                </Text>{' '}\n                {t('hosts')}\n              </Typography>\n              <Typography\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center'\n                }}\n                variant=\"subtitle1\"\n              >\n                <IconWrapper\n                  sx={{\n                    color: `${theme.colors.warning.main}`\n                  }}\n                >\n                  <RefreshTwoToneIcon />\n                </IconWrapper>\n                <Text color=\"warning\">{t('provisioning')}</Text>\n              </Typography>\n            </CardActionsWrapper>\n          </CardIndicatorWrapper>\n        </Grid>\n        <Grid item xs={12} sm={12} md={2} lg={4}>\n          <Tooltip arrow title={t('Click to add a new cluster')}>\n            <CardAddAction>\n              <CardActionArea\n                sx={{\n                  px: 1\n                }}\n              >\n                <CardContent>\n                  <AvatarAddWrapper>\n                    <AddTwoToneIcon fontSize=\"large\" />\n                  </AvatarAddWrapper>\n                </CardContent>\n              </CardActionArea>\n            </CardAddAction>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default DatacenterClusters;\n","import { useState } from 'react';\nimport {\n  Button,\n  Card,\n  Box,\n  Grid,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Divider,\n  IconButton,\n  Tooltip,\n  Switch,\n  alpha,\n  styled\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport Label from 'src/components/Label';\nimport RouterTwoToneIcon from '@mui/icons-material/RouterTwoTone';\nimport DnsTwoToneIcon from '@mui/icons-material/DnsTwoTone';\nimport MemoryTwoToneIcon from '@mui/icons-material/MemoryTwoTone';\nimport ShareTwoToneIcon from '@mui/icons-material/ShareTwoTone';\nimport CachedTwoToneIcon from '@mui/icons-material/CachedTwoTone';\n\nconst DotError = styled('span')(\n  ({ theme }) => `\n    border-radius: 22px;\n    background: ${theme.colors.error.main};\n    width: ${theme.spacing(1.1)};\n    height: ${theme.spacing(1.1)};\n    display: inline-block;\n    margin-right: ${theme.spacing(0.5)};\n`\n);\n\nconst DotSuccess = styled('span')(\n  ({ theme }) => `\n    border-radius: 22px;\n    background: ${theme.colors.success.main};\n    width: ${theme.spacing(1.1)};\n    height: ${theme.spacing(1.1)};\n    display: inline-block;\n    margin-right: ${theme.spacing(0.5)};\n`\n);\n\nconst SwitchSuccess = styled(Switch)(\n  ({ theme }) => `\n  .MuiSwitch-colorPrimary.Mui-checked + .MuiSwitch-track,\n    .MuiSwitch-colorPrimary.Mui-checked .MuiSwitch-thumb {\n      background: ${theme.colors.success.main};\n    }\n    \n    .MuiSwitch-colorPrimary.Mui-checked {\n      color: ${theme.colors.success.main};\n    }\n    \n    .MuiSwitch-colorPrimary.Mui-checked:hover {\n      background-color: ${alpha(theme.colors.success.main, 0.1)};\n    }\n`\n);\n\nfunction VirtualServers() {\n  const { t } = useTranslation();\n\n  const [state1, setState1] = useState({\n    server: true\n  });\n\n  const [state2, setState2] = useState({\n    server: false\n  });\n\n  const serverActivate1 = (event) => {\n    setState1({\n      ...state1,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const serverActivate2 = (event) => {\n    setState2({\n      ...state2,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return (\n    <>\n      <Typography\n        variant=\"h3\"\n        sx={{\n          pb: 3\n        }}\n      >\n        {t('Virtual Servers')}\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <Card>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              p={2}\n            >\n              <Typography variant=\"h5\" lineHeight={1}>\n                App Staging\n              </Typography>\n              <Label color=\"success\">\n                <DotSuccess />\n                {t('active')}\n              </Label>\n            </Box>\n            <Box\n              sx={{\n                px: 2,\n                pb: 2\n              }}\n            >\n              <List disablePadding>\n                <Divider component=\"li\" />\n                <ListItem>\n                  <ListItemAvatar\n                    sx={{\n                      minWidth: 36\n                    }}\n                  >\n                    <RouterTwoToneIcon />\n                  </ListItemAvatar>\n                  <ListItemText primary={t('IP Address')} />\n                  <Typography variant=\"subtitle2\">192.168.1.4</Typography>\n                </ListItem>\n                <Divider component=\"li\" />\n                <ListItem>\n                  <ListItemAvatar\n                    sx={{\n                      minWidth: 36\n                    }}\n                  >\n                    <DnsTwoToneIcon />\n                  </ListItemAvatar>\n                  <ListItemText primary={t('CPU')} />\n                  <Typography variant=\"subtitle2\">12 cores</Typography>\n                </ListItem>\n                <Divider component=\"li\" />\n                <ListItem>\n                  <ListItemAvatar\n                    sx={{\n                      minWidth: 36\n                    }}\n                  >\n                    <MemoryTwoToneIcon />\n                  </ListItemAvatar>\n                  <ListItemText primary={t('RAM')} />\n                  <Typography variant=\"subtitle2\">32.568 MB</Typography>\n                </ListItem>\n                <Divider component=\"li\" />\n              </List>\n              <Box\n                display=\"flex\"\n                alignItems=\"center\"\n                pt={2}\n                justifyContent=\"space-between\"\n              >\n                <Box>\n                  <Button variant=\"text\">{t('More information')}</Button>\n                </Box>\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Tooltip arrow title={t('Share')}>\n                    <IconButton\n                      sx={{\n                        ml: 1\n                      }}\n                      size=\"small\"\n                      color=\"primary\"\n                    >\n                      <ShareTwoToneIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                  <Tooltip arrow title={t('Refresh')}>\n                    <IconButton\n                      sx={{\n                        ml: 1\n                      }}\n                      size=\"small\"\n                      color=\"primary\"\n                    >\n                      <CachedTwoToneIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                  <Divider\n                    sx={{\n                      mx: 2\n                    }}\n                    orientation=\"vertical\"\n                    flexItem\n                  />\n                  <SwitchSuccess\n                    checked={state1.server}\n                    onChange={serverActivate1}\n                    color=\"primary\"\n                    name=\"server\"\n                  />\n                </Box>\n              </Box>\n            </Box>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Card>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              p={2}\n            >\n              <Typography variant=\"h5\" lineHeight={1}>\n                Ubuntu Server\n              </Typography>\n              <Label color=\"error\">\n                <DotError />\n                {t('inactive')}\n              </Label>\n            </Box>\n            <Box\n              sx={{\n                px: 2,\n                pb: 2\n              }}\n            >\n              <List disablePadding>\n                <Divider component=\"li\" />\n                <ListItem>\n                  <ListItemAvatar\n                    sx={{\n                      minWidth: 36\n                    }}\n                  >\n                    <RouterTwoToneIcon />\n                  </ListItemAvatar>\n                  <ListItemText primary={t('IP Address')} />\n                  <Typography variant=\"subtitle2\">185.155.188.53</Typography>\n                </ListItem>\n                <Divider component=\"li\" />\n                <ListItem>\n                  <ListItemAvatar\n                    sx={{\n                      minWidth: 36\n                    }}\n                  >\n                    <DnsTwoToneIcon />\n                  </ListItemAvatar>\n                  <ListItemText primary={t('CPU')} />\n                  <Typography variant=\"subtitle2\">8 cores</Typography>\n                </ListItem>\n                <Divider component=\"li\" />\n                <ListItem>\n                  <ListItemAvatar\n                    sx={{\n                      minWidth: 36\n                    }}\n                  >\n                    <MemoryTwoToneIcon />\n                  </ListItemAvatar>\n                  <ListItemText primary={t('RAM')} />\n                  <Typography variant=\"subtitle2\">16.586 MB</Typography>\n                </ListItem>\n                <Divider component=\"li\" />\n              </List>\n              <Box\n                display=\"flex\"\n                alignItems=\"center\"\n                pt={2}\n                justifyContent=\"space-between\"\n              >\n                <Box>\n                  <Button variant=\"text\">{t('More information')}</Button>\n                </Box>\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Tooltip arrow title={t('Share')}>\n                    <IconButton\n                      sx={{\n                        ml: 1\n                      }}\n                      size=\"small\"\n                      color=\"primary\"\n                    >\n                      <ShareTwoToneIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                  <Tooltip arrow title={t('Refresh')}>\n                    <IconButton\n                      sx={{\n                        ml: 1\n                      }}\n                      size=\"small\"\n                      color=\"primary\"\n                    >\n                      <CachedTwoToneIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                  <Divider\n                    sx={{\n                      mx: 2\n                    }}\n                    orientation=\"vertical\"\n                    flexItem\n                  />\n                  <SwitchSuccess\n                    checked={state2.server}\n                    onChange={serverActivate2}\n                    color=\"primary\"\n                    name=\"server\"\n                  />\n                </Box>\n              </Box>\n            </Box>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default VirtualServers;\n","import {\n  Card,\n  CardHeader,\n  Grid,\n  Divider,\n  Alert,\n  List,\n  ListItem,\n  Box,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  useTheme,\n  styled\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport Label from 'src/components/Label';\nimport Text from 'src/components/Text';\n\nimport deFlag from 'country-flag-icons/3x2/DE.svg';\nimport usFlag from 'country-flag-icons/3x2/US.svg';\nimport esFlag from 'country-flag-icons/3x2/ES.svg';\nimport frFlag from 'country-flag-icons/3x2/FR.svg';\nimport Chart from 'react-apexcharts';\n\nconst ImageWrapper = styled('img')(\n  ({ theme }) => `\n        width: 46px;\n        margin-right: ${theme.spacing(2)};\n`\n);\n\nconst ListItemWrapper = styled(ListItem)(\n  ({ theme }) => `\n        border-radius: 0;\n        padding: ${theme.spacing(2)};\n`\n);\n\nfunction ActiveServers() {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const chartOptions = {\n    stroke: {\n      curve: 'smooth',\n      width: [0, 5]\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    chart: {\n      background: 'transparent',\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    markers: {\n      hover: {\n        sizeOffset: 2\n      },\n      shape: 'circle',\n      size: 6,\n      strokeWidth: 3,\n      strokeOpacity: 1,\n      strokeColors: theme.colors.error.dark,\n      colors: [theme.colors.alpha.white[100]]\n    },\n    colors: [theme.colors.warning.light, theme.colors.error.light],\n    fill: {\n      opacity: 1\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none'\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none'\n        }\n      },\n      active: {\n        filter: {\n          type: 'none'\n        }\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        borderRadius: 10,\n        columnWidth: '28%'\n      }\n    },\n    labels: [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec'\n    ],\n    dataLabels: {\n      enabled: false\n    },\n    grid: {\n      show: false\n    },\n    legend: {\n      show: false\n    },\n    xaxis: {\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    },\n    yaxis: {\n      show: false,\n      tickAmount: 6,\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    }\n  };\n\n  const chartData = [\n    {\n      name: 'Completed',\n      type: 'column',\n      data: [1008, 940, 1010, 821, 1035, 1030, 957, 926, 993, 1021, 997, 879]\n    },\n    {\n      name: 'Cancelled',\n      type: 'line',\n      data: [648, 745, 897, 743, 635, 842, 811, 696, 878, 987, 747, 731]\n    }\n  ];\n\n  return (\n    <Card>\n      <CardHeader title={t('Active Servers')} />\n      <Divider />\n      <Grid container>\n        <Grid item xs={12} md>\n          <List disablePadding component=\"div\">\n            <ListItemWrapper>\n              <ListItemAvatar\n                sx={{\n                  minWidth: '36px',\n                  display: 'flex',\n                  alignItems: 'center'\n                }}\n              >\n                <ImageWrapper alt=\"Germany\" src={deFlag} />\n              </ListItemAvatar>\n              <ListItemText\n                primary=\"Frankfurt\"\n                primaryTypographyProps={{ variant: 'h5' }}\n                secondary=\"material-ui.com\"\n                secondaryTypographyProps={{ variant: 'subtitle1' }}\n              />\n\n              <Box\n                sx={{\n                  textAlign: 'right'\n                }}\n              >\n                <Label color=\"success\">{t('active')}</Label>\n                <Typography\n                  align=\"right\"\n                  variant=\"body2\"\n                  color=\"text.secondary\"\n                  noWrap\n                  sx={{\n                    pt: 0.5\n                  }}\n                >\n                  {t('Page Load')}:{' '}\n                  <Text color=\"black\">\n                    <b>36ms</b>\n                  </Text>\n                </Typography>\n              </Box>\n            </ListItemWrapper>\n            <Divider />\n            <ListItemWrapper>\n              <ListItemAvatar\n                sx={{\n                  minWidth: '36px',\n                  display: 'flex',\n                  alignItems: 'center'\n                }}\n              >\n                <ImageWrapper alt=\"USA\" src={usFlag} />\n              </ListItemAvatar>\n              <ListItemText\n                primary=\"San Francisco\"\n                primaryTypographyProps={{ variant: 'h5' }}\n                secondary=\"google.com\"\n                secondaryTypographyProps={{ variant: 'subtitle1' }}\n              />\n\n              <Box\n                sx={{\n                  textAlign: 'right'\n                }}\n              >\n                <Label color=\"warning\">{t('provisioning')}</Label>\n                <Typography\n                  align=\"right\"\n                  variant=\"body2\"\n                  color=\"text.secondary\"\n                  noWrap\n                  sx={{\n                    pt: 0.5\n                  }}\n                >\n                  {t('Page Load')}:{' '}\n                  <Text color=\"black\">\n                    <b>255ms</b>\n                  </Text>\n                </Typography>\n              </Box>\n            </ListItemWrapper>\n            <Divider />\n            <ListItemWrapper>\n              <ListItemAvatar\n                sx={{\n                  minWidth: '36px',\n                  display: 'flex',\n                  alignItems: 'center'\n                }}\n              >\n                <ImageWrapper alt=\"Spain\" src={esFlag} />\n              </ListItemAvatar>\n              <ListItemText\n                primary=\"Barcelona\"\n                primaryTypographyProps={{ variant: 'h5' }}\n                secondary=\"example.xyz\"\n                secondaryTypographyProps={{ variant: 'subtitle1' }}\n              />\n\n              <Box\n                sx={{\n                  textAlign: 'right'\n                }}\n              >\n                <Label color=\"error\">{t('high risk')}</Label>\n                <Typography\n                  align=\"right\"\n                  variant=\"body2\"\n                  color=\"text.secondary\"\n                  noWrap\n                  sx={{\n                    pt: 0.5\n                  }}\n                >\n                  {t('Page Load')}:{' '}\n                  <Text color=\"black\">\n                    <b>387ms</b>\n                  </Text>\n                </Typography>\n              </Box>\n            </ListItemWrapper>\n            <Divider />\n            <ListItemWrapper>\n              <ListItemAvatar\n                sx={{\n                  minWidth: '36px',\n                  display: 'flex',\n                  alignItems: 'center'\n                }}\n              >\n                <ImageWrapper alt=\"USA\" src={frFlag} />\n              </ListItemAvatar>\n              <ListItemText\n                primary=\"Toulouse\"\n                primaryTypographyProps={{ variant: 'h5' }}\n                secondary=\"city.example\"\n                secondaryTypographyProps={{ variant: 'subtitle1' }}\n              />\n\n              <Box\n                sx={{\n                  textAlign: 'right'\n                }}\n              >\n                <Label color=\"error\">{t('high risk')}</Label>\n                <Typography\n                  align=\"right\"\n                  variant=\"body2\"\n                  color=\"text.secondary\"\n                  noWrap\n                  sx={{\n                    pt: 0.5\n                  }}\n                >\n                  {t('Page Load')}:{' '}\n                  <Text color=\"black\">\n                    <b>456ms</b>\n                  </Text>\n                </Typography>\n              </Box>\n            </ListItemWrapper>\n          </List>\n        </Grid>\n        <Divider orientation=\"vertical\" flexItem />\n        <Grid item xs={12} md>\n          <Box\n            sx={{\n              p: 3,\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column'\n            }}\n          >\n            <Alert severity=\"warning\">\n              {t('Too many servers have problems starting!')}\n            </Alert>\n\n            <Chart\n              options={chartOptions}\n              series={chartData}\n              type=\"line\"\n              height={244}\n            />\n          </Box>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\nexport default ActiveServers;\n","import {\n  Card,\n  CardHeader,\n  Box,\n  Typography,\n  Divider,\n  Tooltip,\n  tooltipClasses,\n  useTheme,\n  styled\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker\n} from 'react-simple-maps';\n\nconst TooltipWrapper = styled(({ className, ...props }) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.colors.alpha.trueWhite[100],\n    color: theme.palette.getContrastText(theme.colors.alpha.trueWhite[100]),\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: 'bold',\n    borderRadius: theme.general.borderRadiusSm,\n    boxShadow:\n      '0 .2rem .8rem rgba(7,9,25,.18), 0 .08rem .15rem rgba(7,9,25,.15)'\n  },\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.colors.alpha.trueWhite[100]\n  }\n}));\n\nconst DotLegend = styled('span')(\n  ({ theme }) => `\n    border-radius: 22px;\n    width: ${theme.spacing(1.5)};\n    height: ${theme.spacing(1.5)};\n    display: inline-block;\n    margin-right: ${theme.spacing(0.5)};\n`\n);\n\nfunction DataCenters() {\n  const { t } = useTranslation();\n  const geoUrl =\n    'https://raw.githubusercontent.com/leakyMirror/map-of-europe/master/TopoJSON/europe.topojson';\n  const theme = useTheme();\n\n  return (\n    <Card\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      }}\n    >\n      <CardHeader title={t('Europe Data Centers')} />\n      <Divider />\n      <ComposableMap\n        projection=\"geoAzimuthalEqualArea\"\n        projectionConfig={{\n          rotate: [-10.0, -48.5, 0],\n          scale: 1350\n        }}\n      >\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map((geo) => (\n              <Geography\n                key={geo.rsmKey}\n                geography={geo}\n                fill={theme.colors.alpha.black[100]}\n                stroke={theme.colors.alpha.white[30]}\n              />\n            ))\n          }\n        </Geographies>\n        <Marker coordinates={[-3.4, 52.3]}>\n          <TooltipWrapper placement=\"top\" arrow title=\"United Kingdom\">\n            <circle r={12} fill={theme.colors.error.main} />\n          </TooltipWrapper>\n        </Marker>\n        <Marker coordinates={[3.12, 48.37]}>\n          <TooltipWrapper placement=\"top\" arrow title=\"France\">\n            <circle r={12} fill={theme.colors.success.main} />\n          </TooltipWrapper>\n        </Marker>\n        <Marker coordinates={[10.51, 51.72]}>\n          <TooltipWrapper placement=\"top\" arrow title=\"Germany 1\">\n            <circle r={12} fill={theme.colors.error.main} />\n          </TooltipWrapper>\n        </Marker>\n        <Marker coordinates={[9.05, 50.74]}>\n          <TooltipWrapper placement=\"top\" arrow title=\"Germany 2\">\n            <circle r={12} fill={theme.colors.success.main} />\n          </TooltipWrapper>\n        </Marker>\n        <Marker coordinates={[18.5, 51.39]}>\n          <TooltipWrapper placement=\"top\" arrow title=\"Poland\">\n            <circle r={12} fill={theme.colors.error.main} />\n          </TooltipWrapper>\n        </Marker>\n        <Marker coordinates={[-4.2, 39.68]}>\n          <TooltipWrapper placement=\"top\" arrow title=\"Spain\">\n            <circle r={12} fill={theme.colors.success.main} />\n          </TooltipWrapper>\n        </Marker>\n        <Marker coordinates={[14.18, 57.83]}>\n          <TooltipWrapper placement=\"top\" arrow title=\"Sweden\">\n            <circle r={12} fill={theme.colors.error.main} />\n          </TooltipWrapper>\n        </Marker>\n        <Marker coordinates={[27.88, 50.08]}>\n          <TooltipWrapper placement=\"top\" arrow title=\"Ukraine\">\n            <circle r={12} fill={theme.colors.success.main} />\n          </TooltipWrapper>\n        </Marker>\n        <Marker coordinates={[24.19, 44.87]}>\n          <TooltipWrapper placement=\"top\" arrow title=\"Romania\">\n            <circle r={16} fill={theme.colors.error.main} />\n          </TooltipWrapper>\n        </Marker>\n        <Marker coordinates={[10.15, 48.73]}>\n          <TooltipWrapper placement=\"top\" arrow title=\"Germany 3\">\n            <circle r={12} fill={theme.colors.success.main} />\n          </TooltipWrapper>\n        </Marker>\n        <Marker coordinates={[21.89, 49.03]}>\n          <TooltipWrapper placement=\"top\" arrow title=\"Slovakia\">\n            <circle r={12} fill={theme.colors.error.main} />\n          </TooltipWrapper>\n        </Marker>\n      </ComposableMap>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" my={2}>\n        <Typography\n          variant=\"subtitle1\"\n          color=\"text.primary\"\n          sx={{\n            mx: 1,\n            display: 'flex',\n            alignItems: 'center'\n          }}\n        >\n          <DotLegend style={{ background: theme.colors.error.main }} />\n          {t('Highest downtime')}\n        </Typography>\n        <Typography\n          variant=\"subtitle1\"\n          color=\"text.primary\"\n          sx={{\n            mx: 1,\n            display: 'flex',\n            alignItems: 'center'\n          }}\n        >\n          <DotLegend style={{ background: theme.colors.success.main }} />\n          {t('Optimal uptime')}\n        </Typography>\n      </Box>\n    </Card>\n  );\n}\n\nexport default DataCenters;\n","import { Card, Typography, Divider, Box, useTheme } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport GaugeChart from 'react-gauge-chart';\nimport Text from 'src/components/Text';\n\nfunction CpuUsage() {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  return (\n    <Card\n      sx={{\n        py: 2,\n        display: 'flex',\n        alignItems: 'center',\n        height: '100%'\n      }}\n    >\n      <Box\n        sx={{\n          width: '100%'\n        }}\n      >\n        <Typography\n          align=\"center\"\n          variant=\"h3\"\n          sx={{\n            mb: 2\n          }}\n        >\n          {t('CPU Usage')}\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"h3\"\n          fontWeight=\"normal\"\n          color=\"text.secondary\"\n          gutterBottom\n        >\n          {t('Today')}\n        </Typography>\n        <GaugeChart\n          style={{ width: '90%', margin: '0 auto' }}\n          nrOfLevels={16}\n          hideText\n          colors={[\n            theme.colors.error.main,\n            theme.colors.warning.main,\n            theme.colors.success.main\n          ]}\n          needleColor={theme.colors.alpha.black[100]}\n          needleBaseColor={theme.colors.alpha.black[100]}\n          arcWidth={0.25}\n          arcPadding={0.02}\n          cornerRadius={3}\n          percent={0.59}\n        />\n        <Typography align=\"center\" variant=\"h1\">\n          59%\n        </Typography>\n        <Divider\n          sx={{\n            mx: 3,\n            mt: 2,\n            mb: 4\n          }}\n        />\n        <Typography\n          align=\"center\"\n          variant=\"h3\"\n          fontWeight=\"normal\"\n          color=\"text.secondary\"\n          gutterBottom\n        >\n          {t('Yesterday')}\n        </Typography>\n\n        <GaugeChart\n          style={{ width: '80%', margin: '0 auto' }}\n          nrOfLevels={16}\n          hideText\n          colors={[\n            theme.colors.primary.main,\n            theme.colors.primary.light,\n            theme.colors.primary.lighter\n          ]}\n          needleColor={theme.colors.alpha.black[100]}\n          needleBaseColor={theme.colors.alpha.black[100]}\n          arcWidth={0.2}\n          arcPadding={0.02}\n          cornerRadius={3}\n          percent={0.47}\n        />\n\n        <Typography align=\"center\" variant=\"h2\">\n          47% <Text color=\"success\">({t('good')})</Text>\n        </Typography>\n      </Box>\n    </Card>\n  );\n}\n\nexport default CpuUsage;\n","import { Card, Typography, useTheme, alpha } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport Chart from 'react-apexcharts';\n\nfunction StorageUsage() {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const data = {\n    series: [\n      {\n        bg: alpha(theme.colors.primary.main, 0.2),\n        data: 40,\n        title: t('Free')\n      },\n      {\n        bg: alpha(theme.colors.primary.main, 0.9),\n        data: 25,\n        title: t('Used')\n      },\n      {\n        bg: alpha(theme.colors.primary.main, 0.5),\n        data: 35,\n        title: t('Available')\n      }\n    ]\n  };\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none'\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none'\n        }\n      },\n      active: {\n        filter: {\n          type: 'none'\n        }\n      }\n    },\n    colors: data.series.map((chart) => chart.bg),\n    labels: data.series.map((chart) => chart.title),\n    plotOptions: {\n      radialBar: {\n        track: {\n          background: theme.colors.alpha.black[5]\n        },\n        hollow: {\n          size: '35%'\n        }\n      }\n    },\n    theme: {\n      mode: theme.palette.mode\n    }\n  };\n\n  const chartSeries = data.series.map((chart) => chart.data);\n\n  return (\n    <Card\n      sx={{\n        display: 'flex',\n        alignItems: 'center'\n      }}\n    >\n      <Chart\n        height={300}\n        options={chartOptions}\n        series={chartSeries}\n        type=\"radialBar\"\n      />\n      <Typography variant=\"h1\">\n        {t('Storage')}\n        <br />\n        {t('Usage')}\n      </Typography>\n    </Card>\n  );\n}\n\nexport default StorageUsage;\n","import { Card, Typography, useTheme } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport Chart from 'react-apexcharts';\n\nfunction MemoryUsage() {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const data = {\n    series: [\n      {\n        bg: theme.colors.success.light,\n        data: 25,\n        title: t('Free')\n      },\n      {\n        bg: theme.colors.error.light,\n        data: 40,\n        title: t('Used')\n      },\n      {\n        bg: theme.colors.info.light,\n        data: 35,\n        title: t('Available')\n      }\n    ]\n  };\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    labels: data.series.map((chart) => chart.title),\n    plotOptions: {\n      radialBar: {\n        track: {\n          background: theme.colors.alpha.black[10]\n        },\n        offsetY: 0,\n        startAngle: 0,\n        endAngle: 270,\n        hollow: {\n          margin: 10,\n          size: '15%'\n        },\n        dataLabels: {\n          name: {\n            show: false\n          },\n          value: {\n            show: false\n          }\n        }\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none'\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none'\n        }\n      },\n      active: {\n        filter: {\n          type: 'none'\n        }\n      }\n    },\n    colors: data.series.map((chart) => chart.bg),\n    legend: {\n      show: true,\n      floating: true,\n      fontSize: '14px',\n      position: 'left',\n      offsetX: 0,\n      offsetY: 25,\n      labels: {\n        useSeriesColors: true\n      },\n      formatter(seriesName, opts) {\n        return `${seriesName}:  ${opts.w.globals.series[opts.seriesIndex]}`;\n      },\n      itemMargin: {\n        vertical: 3\n      }\n    },\n    theme: {\n      mode: theme.palette.mode\n    }\n  };\n\n  const chartSeries = data.series.map((item) => item.data);\n\n  return (\n    <Card\n      sx={{\n        display: 'flex',\n        alignItems: 'center'\n      }}\n    >\n      <Chart\n        height={300}\n        options={chartOptions}\n        series={chartSeries}\n        type=\"radialBar\"\n      />\n      <Typography variant=\"h1\">\n        {t('Memory')}\n        <br />\n        {t('Usage')}\n      </Typography>\n    </Card>\n  );\n}\n\nexport default MemoryUsage;\n","import { useState } from 'react';\nimport { Typography, Box } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport LoadingButton from '@mui/lab/LoadingButton';\n\nfunction PageHeader() {\n  const { t } = useTranslation();\n\n  const [pending, setPending] = useState(false);\n  function handleClick() {\n    setPending(true);\n  }\n\n  return (\n    <Box\n      display=\"flex\"\n      alignItems={{ xs: 'stretch', md: 'center' }}\n      flexDirection={{ xs: 'column', md: 'row' }}\n      justifyContent=\"space-between\"\n    >\n      <Box>\n        <Typography\n          variant=\"h2\"\n          component=\"h2\"\n          sx={{\n            pb: 1\n          }}\n        >\n          {t('Monitoring')}\n        </Typography>\n        <Typography variant=\"h4\" color=\"text.secondary\" fontWeight=\"normal\">\n          {t(\n            'This dashboard shows a live status for all your servers and database clusters!'\n          )}\n        </Typography>\n      </Box>\n      <Box mt={{ xs: 3, md: 0 }}>\n        <LoadingButton\n          sx={{\n            mt: { xs: 2, md: 0 }\n          }}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n          loading={pending}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          {t('Refresh view')}\n        </LoadingButton>\n      </Box>\n    </Box>\n  );\n}\n\nexport default PageHeader;\n","import { Helmet } from 'react-helmet-async';\nimport Footer from 'src/components/Footer';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\n\nimport { Grid } from '@mui/material';\n\nimport ResourcesAlarm from './ResourcesAlarm';\nimport HealthStatus from './HealthStatus';\nimport DatacenterClusters from './DatacenterClusters';\nimport VirtualServers from './VirtualServers';\nimport ActiveServers from './ActiveServers';\nimport DataCenters from './DataCenters';\nimport CpuUsage from './CpuUsage';\nimport StorageUsage from './StorageUsage';\nimport MemoryUsage from './MemoryUsage';\nimport PageHeader from './PageHeader';\n\nfunction DashboardMonitoring() {\n  return (\n    <>\n      <Helmet>\n        <title>Monitoring Dashboard</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageHeader />\n      </PageTitleWrapper>\n\n      <Grid\n        sx={{\n          px: 4\n        }}\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        spacing={4}\n      >\n        <Grid item xs={12} md={6}>\n          <ResourcesAlarm />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <HealthStatus />\n        </Grid>\n        <Grid item xs={12}>\n          <DatacenterClusters />\n        </Grid>\n        <Grid item xs={12}>\n          <VirtualServers />\n        </Grid>\n        <Grid item xs={12}>\n          <ActiveServers />\n        </Grid>\n        <Grid item xs={12} sm={6} md={5}>\n          <DataCenters />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <CpuUsage />\n        </Grid>\n        <Grid item xs={12} sm={12} md={4}>\n          <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"stretch\"\n            spacing={4}\n          >\n            <Grid item xs={12} sm={6} md={12}>\n              <StorageUsage />\n            </Grid>\n            <Grid item xs={12} sm={6} md={12}>\n              <MemoryUsage />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default DashboardMonitoring;\n","import PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\n\nconst LabelWrapper = styled('span')(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: ${theme.spacing(0.5, 1)};\n      font-size: ${theme.typography.pxToRem(13)};\n      border-radius: ${theme.general.borderRadius};\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      max-height: ${theme.spacing(3)};\n      \n      &.MuiLabel {\n        &-primary {\n          background-color: ${theme.colors.primary.lighter};\n          color: ${theme.palette.primary.main}\n        }\n\n        &-black {\n          background-color: ${theme.colors.alpha.black[100]};\n          color: ${theme.colors.alpha.white[100]};\n        }\n        \n        &-secondary {\n          background-color: ${theme.colors.secondary.lighter};\n          color: ${theme.palette.secondary.main}\n        }\n        \n        &-success {\n          background-color: ${theme.colors.success.lighter};\n          color: ${theme.palette.success.main}\n        }\n        \n        &-warning {\n          background-color: ${theme.colors.warning.lighter};\n          color: ${theme.palette.warning.main}\n        }\n              \n        &-error {\n          background-color: ${theme.colors.error.lighter};\n          color: ${theme.palette.error.main}\n        }\n        \n        &-info {\n          background-color: ${theme.colors.info.lighter};\n          color: ${theme.palette.info.main}\n        }\n      }\n`\n);\n\nconst Label = ({ className, color = 'secondary', children, ...rest }) => {\n  return (\n    <LabelWrapper className={`MuiLabel-${color}`} {...rest}>\n      {children}\n    </LabelWrapper>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'primary',\n    'black',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info'\n  ])\n};\n\nexport default Label;\n","import PropTypes from 'prop-types';\nimport { Box, styled } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4)};\n`\n);\n\nconst PageTitleWrapper = ({ children }) => {\n  return (\n    <>\n      <PageTitle className=\"MuiPageTitle-wrapper\">{children}</PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","import { useState } from 'react';\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Alert,\n  Collapse,\n  IconButton,\n  Divider,\n  styled,\n  useTheme\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport { formatDistance, subMinutes } from 'date-fns';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Chart from 'react-apexcharts';\n\nconst CardHeaderWrapper = styled(CardHeader)(\n  () => `\n    .MuiCardHeader-action {\n      align-self: center;\n      margin: 0;\n    }\n`\n);\n\nfunction ResourcesAlarm() {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(true);\n  const theme = useTheme();\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      sparkline: {\n        enabled: true\n      }\n    },\n    stroke: {\n      curve: 'smooth',\n      width: [3, 3]\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    markers: {\n      size: 0\n    },\n    colors: [theme.colors.primary.main, theme.colors.error.main],\n    labels: [\n      '1',\n      '2',\n      '3',\n      '4',\n      '5',\n      '6',\n      '7',\n      '8',\n      '9',\n      '10',\n      '11',\n      '12',\n      '13',\n      '14',\n      '15',\n      '16',\n      '17',\n      '18',\n      '19',\n      '20'\n    ],\n    dataLabels: {\n      enabled: false\n    },\n    tooltip: {\n      enabled: false\n    },\n    grid: {\n      strokeDashArray: 5,\n      borderColor: theme.palette.divider,\n      padding: {\n        right: 8,\n        left: 8,\n        bottom: 5,\n        top: 5\n      }\n    },\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    }\n  };\n\n  const chartData = [\n    {\n      name: 'Previous Period',\n      data: [\n        32, 32, 32, 18, 18, 18, 24, 14, 24, 28, 28, 28, 31, 31, 31, 21, 21, 21,\n        15, 15, 15\n      ]\n    },\n    {\n      name: 'Current Period',\n      data: [\n        22, 40, 37, 14, 34, 13, 31, 30, 15, 29, 25, 39, 21, 26, 19, 16, 20, 36,\n        27, 18\n      ]\n    }\n  ];\n\n  return (\n    <Card>\n      <CardHeaderWrapper\n        action={\n          <Button variant=\"contained\" size=\"small\">\n            {t('Run diagnostics')}\n          </Button>\n        }\n        title={t('Resources Alarm')}\n        subheader={\n          <>\n            {t('Server load snapshot from')}{' '}\n            {formatDistance(subMinutes(new Date(), 13), new Date(), {\n              addSuffix: true\n            })}\n          </>\n        }\n      />\n      <Divider />\n      <CardContent>\n        <Chart\n          options={chartOptions}\n          series={chartData}\n          type=\"line\"\n          height={225}\n        />\n\n        <Collapse in={open}>\n          <Alert\n            action={\n              <IconButton\n                aria-label=\"close\"\n                color=\"inherit\"\n                size=\"small\"\n                onClick={() => {\n                  setOpen(false);\n                }}\n              >\n                <CloseIcon fontSize=\"inherit\" />\n              </IconButton>\n            }\n            severity=\"error\"\n          >\n            {t('Your server is overloaded, fix it as soon as possible!')}\n          </Alert>\n        </Collapse>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default ResourcesAlarm;\n"],"sourceRoot":""}