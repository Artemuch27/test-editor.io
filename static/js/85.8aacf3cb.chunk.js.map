{"version":3,"sources":["content/applications/ProjectsBoard/Task.js","content/applications/ProjectsBoard/Results.js","content/applications/ProjectsBoard/PageHeader.js","content/applications/ProjectsBoard/index.js","components/Label/index.js","components/PageTitleWrapper/index.js"],"names":["LinearProgressWrapper","styled","LinearProgress","theme","colors","alpha","black","primary","main","general","borderRadius","ButtonWrapper","Button","spacing","Task","forwardRef","ref","taskId","dragging","rest","index","list","task","useSelector","state","projectsBoard","tasks","members","byId","memberIds","map","memberId","taskSelector","t","useTranslation","useState","onMenuOpen","menuOpen","moreRef","useRef","Box","Card","sx","m","p","className","clsx","raised","variant","Typography","gutterBottom","noWrap","name","description","py","comments","Tooltip","placement","arrow","title","size","color","attachments","sub_items","formatDistance","due_date","Date","addSuffix","value","progress","pt","display","alignItems","justifyContent","length","AvatarGroup","max","member","Avatar","width","height","src","avatar","id","IconButton","onClick","fontSize","Menu","disableScrollLock","keepMounted","anchorEl","current","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","List","component","ListItem","button","ListItemText","defaultProps","ListColumnWrapper","IconButtonEdit","typography","pxToRem","ButtonAdd","Results","listId","lists","listSelector","dispatch","useDispatch","enqueueSnackbar","useSnackbar","setName","isRenaming","setRename","handleRenameInit","handleRename","a","update","updateList","TransitionComponent","Zoom","console","error","borderColor","px","ClickAwayListener","onClickAway","TextField","onBlur","onChange","event","persist","target","margin","Label","taskIds","fullWidth","textAlign","droppableId","provided","minHeight","innerRef","draggableId","snapshot","isDragging","style","draggableProps","dragHandleProps","placeholder","pb","PageHeader","Grid","container","item","mt","xs","md","startIcon","TasksWrapper","TasksWrapperContent","CardAddAction","AvatarAddWrapper","FilterOptions","TabsContainerWrapper","white","ApplicationsProjectsBoard","currentTab","setCurrentTab","tabs","label","handleDragEnd","source","destination","moveTask","useEffect","getBoard","PageTitleWrapper","direction","Tabs","_event","textColor","indicatorColor","tab","Tab","href","disabled","lg","Autocomplete","multiple","limitTags","options","renderOption","props","option","mr","getOptionLabel","renderInput","params","InputLabelProps","shrink","renderTags","assignees","getTagProps","ev","Chip","autoHighlight","flex","Divider","onDragEnd","allIds","CardActionArea","CardContent","Footer","LabelWrapper","lighter","palette","secondary","success","warning","info","children","PageTitle"],"mappings":"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","file":"static/js/85.8aacf3cb.chunk.js","sourcesContent":["import { forwardRef, useState, useRef } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  LinearProgress,\n  Card,\n  Tooltip,\n  List as ListWrapper,\n  ListItem,\n  ListItemText,\n  Menu,\n  Button,\n  IconButton,\n  Typography,\n  AvatarGroup,\n  styled\n} from '@mui/material';\nimport { formatDistance } from 'date-fns';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'src/store';\nimport CommentTwoToneIcon from '@mui/icons-material/CommentTwoTone';\nimport MoreHorizTwoToneIcon from '@mui/icons-material/MoreHorizTwoTone';\nimport AttachFileTwoToneIcon from '@mui/icons-material/AttachFileTwoTone';\nimport FormatListBulletedTwoToneIcon from '@mui/icons-material/FormatListBulletedTwoTone';\nimport VisibilityTwoToneIcon from '@mui/icons-material/VisibilityTwoTone';\nimport DeleteForeverTwoToneIcon from '@mui/icons-material/DeleteForeverTwoTone';\nimport ArchiveTwoToneIcon from '@mui/icons-material/ArchiveTwoTone';\n\nconst taskSelector = (state, taskId) => {\n  const { tasks, members } = state.projectsBoard;\n  const task = tasks.byId[taskId];\n\n  return {\n    ...task,\n    members: task.memberIds.map((memberId) => members.byId[memberId])\n  };\n};\n\nconst LinearProgressWrapper = styled(LinearProgress)(\n  ({ theme }) => `\n      flex-grow: 1;\n      height: 8px;\n      background-color: ${theme.colors.alpha.black[10]};\n\n      .MuiLinearProgress-barColorPrimary {\n        background-color: ${theme.colors.primary.main};\n        border-top-right-radius: ${theme.general.borderRadius};\n        border-bottom-right-radius: ${theme.general.borderRadius};\n      }\n`\n);\n\nconst ButtonWrapper = styled(Button)(\n  ({ theme }) => `\n      padding: ${theme.spacing(0.5)} ${theme.spacing(1)};\n      min-width: 32px;\n\n      .MuiSvgIcon-root {\n        color: ${theme.colors.alpha.black[30]};\n        margin-right: ${theme.spacing(1)};\n      }\n\n      &:hover {\n        .MuiSvgIcon-root {\n          color: ${theme.colors.primary.main};\n        }\n      }\n`\n);\n\nconst Task = forwardRef(({ taskId, dragging, index, list, ...rest }, ref) => {\n  const task = useSelector((state) => taskSelector(state, taskId));\n  const { t } = useTranslation();\n\n  const [onMenuOpen, menuOpen] = useState(false);\n  const moreRef = useRef(null);\n\n  const openMenu = () => {\n    menuOpen(true);\n  };\n\n  const closeMenu = () => {\n    menuOpen(false);\n  };\n\n  return (\n    <>\n      <Box key={taskId} ref={ref} {...rest}>\n        <Card\n          sx={{\n            m: 2,\n            p: 2\n          }}\n          className={clsx({ dragging })}\n          raised={dragging}\n          variant={dragging ? 'elevation' : 'outlined'}\n        >\n          <Typography variant=\"h4\" gutterBottom noWrap>\n            {task.name}\n          </Typography>\n          <Typography variant=\"subtitle1\" noWrap>\n            {task.description}\n          </Typography>\n          <Box py={1}>\n            {task.comments > 0 && (\n              <Tooltip placement=\"top\" arrow title={t('Comments')}>\n                <ButtonWrapper size=\"small\" color=\"primary\">\n                  <CommentTwoToneIcon />\n                  {task.comments}\n                </ButtonWrapper>\n              </Tooltip>\n            )}\n            {task.attachments > 0 && (\n              <Tooltip placement=\"top\" arrow title={t('File attachments')}>\n                <ButtonWrapper size=\"small\" color=\"primary\">\n                  <AttachFileTwoToneIcon />\n                  {task.attachments}\n                </ButtonWrapper>\n              </Tooltip>\n            )}\n            {task.sub_items > 0 && (\n              <Tooltip placement=\"top\" arrow title={t('Subtasks')}>\n                <ButtonWrapper size=\"small\" color=\"primary\">\n                  <FormatListBulletedTwoToneIcon />\n                  {task.sub_items}\n                </ButtonWrapper>\n              </Tooltip>\n            )}\n          </Box>\n          <Box>\n            <Typography variant=\"subtitle1\">\n              {t('Due')}{' '}\n              {formatDistance(task.due_date, new Date(), { addSuffix: true })}\n            </Typography>\n            <LinearProgressWrapper\n              value={task.progress}\n              color=\"primary\"\n              variant=\"determinate\"\n            />\n          </Box>\n          <Box\n            pt={2}\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Box>\n              {task.members.length > 0 && (\n                <AvatarGroup max={4}>\n                  {task.members.map((member) => (\n                    <Tooltip\n                      arrow\n                      placement=\"top\"\n                      key={member.name}\n                      title={member.name}\n                    >\n                      <Avatar\n                        sx={{\n                          width: 30,\n                          height: 30\n                        }}\n                        key={member.id}\n                        src={member.avatar}\n                      />\n                    </Tooltip>\n                  ))}\n                </AvatarGroup>\n              )}\n            </Box>\n            <IconButton\n              color=\"inherit\"\n              size=\"small\"\n              onClick={openMenu}\n              ref={moreRef}\n            >\n              <MoreHorizTwoToneIcon fontSize=\"small\" />\n            </IconButton>\n          </Box>\n        </Card>\n      </Box>\n      <Menu\n        disableScrollLock\n        keepMounted\n        anchorEl={moreRef.current}\n        open={onMenuOpen}\n        onClose={closeMenu}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n      >\n        <ListWrapper\n          sx={{\n            p: 1\n          }}\n          component=\"nav\"\n        >\n          <ListItem button>\n            <VisibilityTwoToneIcon />\n            <ListItemText primary={t('View details')} />\n          </ListItem>\n          <ListItem button>\n            <ArchiveTwoToneIcon />\n            <ListItemText primary={t('Move to archive')} />\n          </ListItem>\n          <ListItem button>\n            <DeleteForeverTwoToneIcon />\n            <ListItemText primary={t('Delete')} />\n          </ListItem>\n        </ListWrapper>\n      </Menu>\n    </>\n  );\n});\n\nTask.propTypes = {\n  taskId: PropTypes.string.isRequired,\n  dragging: PropTypes.bool.isRequired,\n  index: PropTypes.number,\n\n  list: PropTypes.object.isRequired\n};\n\nTask.defaultProps = {\n  dragging: false\n};\n\nexport default Task;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport {\n  Box,\n  ClickAwayListener,\n  Button,\n  IconButton,\n  Tooltip,\n  Card,\n  Zoom,\n  TextField,\n  Typography,\n  styled\n} from '@mui/material';\nimport { useDispatch, useSelector } from 'src/store';\nimport { updateList } from 'src/slices/projects_board';\nimport Label from 'src/components/Label';\nimport { useTranslation } from 'react-i18next';\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\nimport Task from './Task';\n\nconst ListColumnWrapper = styled(Card)(\n  ({ theme }) => `\n      width: 340px;\n      min-width: 340px;\n      margin-right: ${theme.spacing(3)};\n      border-top-width: 8px;\n      border-top-style: solid;\n  `\n);\n\nconst IconButtonEdit = styled(IconButton)(\n  ({ theme }) => `\n      margin-right: ${theme.spacing(0.5)};\n      padding: ${theme.spacing(0.4)};\n\n      .MuiSvgIcon-root {\n        font-size: ${theme.typography.pxToRem(17)};\n        color: ${theme.colors.primary.main};\n      }\n  `\n);\n\nconst ButtonAdd = styled(Button)(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[10]};\n      padding: ${theme.spacing(1)};\n  `\n);\n\nconst listSelector = (state, listId) => {\n  const { lists } = state.projectsBoard;\n\n  return lists.byId[listId];\n};\n\nconst Results = ({ listId }) => {\n  const { t } = useTranslation();\n\n  const list = useSelector((state) => listSelector(state, listId));\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [name, setName] = useState(list.name);\n  const [isRenaming, setRename] = useState(false);\n\n  const handleChange = (event) => {\n    event.persist();\n    setName(event.target.value);\n  };\n\n  const handleRenameInit = () => {\n    setRename(true);\n  };\n\n  const handleRename = async () => {\n    try {\n      if (!name) {\n        setName(list.name);\n        setRename(false);\n        return;\n      }\n\n      const update = { name };\n\n      setRename(false);\n      await dispatch(updateList(list.id, update));\n      enqueueSnackbar(t('The project board has been successfully updated'), {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        TransitionComponent: Zoom\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(t('There was an error, try again later'), {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        TransitionComponent: Zoom\n      });\n    }\n  };\n\n  return (\n    <ListColumnWrapper\n      sx={{\n        borderColor: list.color\n      }}\n    >\n      <Box\n        px={2}\n        pt={2}\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        {isRenaming ? (\n          <ClickAwayListener onClickAway={handleRename}>\n            <TextField\n              value={name}\n              size=\"small\"\n              onBlur={handleRename}\n              onChange={handleChange}\n              variant=\"outlined\"\n              margin=\"dense\"\n            />\n          </ClickAwayListener>\n        ) : (\n          <Typography color=\"inherit\" variant=\"h3\" onClick={handleRenameInit}>\n            {list.name}\n          </Typography>\n        )}\n        <Box display=\"flex\" alignItems=\"center\">\n          <Tooltip arrow placement=\"top\" title={t('Rename')}>\n            <IconButtonEdit onClick={handleRenameInit}>\n              <EditTwoToneIcon />\n            </IconButtonEdit>\n          </Tooltip>\n          <Label color=\"primary\">\n            <b>{list.taskIds.length}</b>\n          </Label>\n        </Box>\n      </Box>\n      <Box px={2} pt={2}>\n        <Tooltip placement=\"top\" arrow title={t('Add new task')}>\n          <ButtonAdd size=\"small\" color=\"secondary\" fullWidth>\n            <AddTwoToneIcon fontSize=\"small\" />\n          </ButtonAdd>\n        </Tooltip>\n      </Box>\n      {list.taskIds.length === 0 && (\n        <Box p={4} textAlign=\"center\">\n          <Typography variant=\"subtitle2\">\n            {t('Drag tasks here to assign them to this board')}\n          </Typography>\n        </Box>\n      )}\n      <Droppable droppableId={list.id}>\n        {(provided) => (\n          <Box\n            sx={{\n              minHeight: 260\n            }}\n            ref={provided.innerRef}\n          >\n            {list.taskIds.map((taskId, index) => (\n              <Draggable draggableId={taskId} index={index} key={taskId}>\n                {(provided, snapshot) => (\n                  <Task\n                    taskId={taskId}\n                    dragging={snapshot.isDragging}\n                    index={index}\n                    key={taskId}\n                    list={list}\n                    ref={provided.innerRef}\n                    style={{ ...provided.draggableProps.style }}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                  />\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </Box>\n        )}\n      </Droppable>\n      <Box px={2} pb={2}>\n        <Tooltip placement=\"top\" arrow title={t('Add new task')}>\n          <ButtonAdd size=\"small\" color=\"secondary\" fullWidth>\n            <AddTwoToneIcon fontSize=\"small\" />\n          </ButtonAdd>\n        </Tooltip>\n      </Box>\n    </ListColumnWrapper>\n  );\n};\n\nResults.propTypes = {\n  listId: PropTypes.string.isRequired\n};\n\nexport default Results;\n","import { Typography, Button, Grid } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\n\nfunction PageHeader() {\n  const { t } = useTranslation();\n\n  return (\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n      <Grid item>\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n          {t('Projects Board')}\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          {t('This is your Kanban style projects board')}\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          sx={{\n            mt: { xs: 2, md: 0 }\n          }}\n          variant=\"contained\"\n          startIcon={<AddTwoToneIcon fontSize=\"small\" />}\n        >\n          {t('Add task')}\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PageHeader;\n","import { Fragment, useState, useEffect } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'src/store';\nimport { getBoard, moveTask } from 'src/slices/projects_board';\nimport { Helmet } from 'react-helmet-async';\nimport Footer from 'src/components/Footer';\nimport { useTranslation } from 'react-i18next';\nimport { useSnackbar } from 'notistack';\nimport Label from 'src/components/Label';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { styled } from '@mui/material/styles';\nimport {\n  Tabs,\n  Tooltip,\n  Tab,\n  CardActionArea,\n  CardContent,\n  Grid,\n  Avatar,\n  Box,\n  Autocomplete,\n  TextField,\n  Chip,\n  Divider,\n  Typography,\n  Card,\n  LinearProgress,\n  Zoom\n} from '@mui/material';\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\nimport Results from './Results';\nimport PageHeader from './PageHeader';\n\nconst TasksWrapper = styled(Box)(\n  ({ theme }) => `\n      display: flex;\n      overflow-y: hidden;\n      overflow-x: auto;\n      flex-direction: row;\n      padding: ${theme.spacing(2)};\n  `\n);\n\nconst TasksWrapperContent = styled(Box)(\n  ({ theme }) => `\n      margin: 0 -${theme.spacing(2)};\n  `\n);\n\nconst CardAddAction = styled(Card)(\n  ({ theme }) => `\n        border: ${theme.colors.primary.main} dashed 1px;\n        height: 100px;\n        flex: 1;\n        min-width: 120px;\n        color: ${theme.colors.primary.main};\n        \n        .MuiCardActionArea-root {\n          height: 100%;\n          justify-content: center;\n          align-items: center;\n          display: flex;\n        }\n        \n        .MuiTouchRipple-root {\n          opacity: .2;\n        }\n        \n        &:hover {\n          border-color: ${theme.colors.alpha.black[100]};\n        }\n`\n);\n\nconst AvatarAddWrapper = styled(Avatar)(\n  ({ theme }) => `\n        background: ${theme.colors.alpha.black[5]};\n        color: ${theme.colors.primary.main};\n        width: ${theme.spacing(8)};\n        height: ${theme.spacing(8)};\n`\n);\n\nconst FilterOptions = styled(Card)(\n  ({ theme }) => `\n      padding: ${theme.spacing(2)};\n      border: 1px solid ${theme.colors.alpha.black[10]};\n  `\n);\n\nconst LinearProgressWrapper = styled(LinearProgress)(\n  ({ theme }) => `\n      flex-grow: 1;\n      height: 6px;\n      background-color: ${theme.colors.alpha.black[10]};\n\n      .MuiLinearProgress-barColorPrimary {\n        background-color: ${theme.colors.primary.main};\n        border-top-right-radius: ${theme.general.borderRadius};\n        border-bottom-right-radius: ${theme.general.borderRadius};\n      }\n`\n);\n\nconst TabsContainerWrapper = styled(Box)(\n  ({ theme }) => `\n      padding: 0 ${theme.spacing(2)};\n      position: relative;\n      bottom: -1px;\n\n      .MuiTabs-root {\n        height: 44px;\n        min-height: 44px;\n      }\n\n      .MuiTabs-scrollableX {\n        overflow-x: auto !important;\n      }\n\n      .MuiTabs-indicator {\n          min-height: 4px;\n          height: 4px;\n          box-shadow: none;\n          bottom: -4px;\n          background: none;\n          border: 0;\n\n          &:after {\n            position: absolute;\n            left: 50%;\n            width: 28px;\n            content: ' ';\n            margin-left: -14px;\n            background: ${theme.colors.primary.main};\n            border-radius: inherit;\n            height: 100%;\n          }\n      }\n\n      .MuiTab-root {\n          &.MuiButtonBase-root {\n              height: 44px;\n              min-height: 44px;\n              background: ${theme.colors.alpha.white[50]};\n              border: 1px solid ${theme.colors.alpha.black[10]};\n              border-bottom: 0;\n              position: relative;\n              margin-right: ${theme.spacing(1)};\n              font-size: ${theme.typography.pxToRem(13)};\n              color: ${theme.colors.alpha.black[80]};\n              border-bottom-left-radius: 0;\n              border-bottom-right-radius: 0;\n\n              .MuiTouchRipple-root {\n                opacity: .1;\n              }\n\n              &:after {\n                position: absolute;\n                left: 0;\n                right: 0;\n                width: 100%;\n                bottom: 0;\n                height: 1px;\n                content: '';\n                background: ${theme.colors.alpha.black[10]};\n              }\n\n              &:hover {\n                color: ${theme.colors.alpha.black[100]};\n              }\n          }\n\n          &.Mui-selected {\n              color: ${theme.colors.alpha.black[100]};\n              background: ${theme.colors.alpha.white[100]};\n              border-bottom-color: ${theme.colors.alpha.white[100]};\n\n              &:after {\n                height: 0;\n              }\n          }\n      }\n  `\n);\n\nfunction ApplicationsProjectsBoard() {\n  const { t } = useTranslation();\n\n  const [currentTab, setCurrentTab] = useState('development_meeting');\n\n  const tabs = [\n    { value: 'react_migration', label: t('React Project Migration') },\n    { value: 'development_meeting', label: t('Development Meeting') },\n    { value: 'marketing_campaign', label: t('Marketing Campaign') }\n  ];\n\n  const handleTabsChange = (_event, value) => {\n    setCurrentTab(value);\n  };\n\n  const dispatch = useDispatch();\n  const { lists } = useSelector((state) => state.projectsBoard);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleDragEnd = async ({ source, destination, draggableId }) => {\n    try {\n      if (!destination) {\n        return;\n      }\n\n      if (\n        source.droppableId === destination.droppableId &&\n        source.index === destination.index\n      ) {\n        return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n        await dispatch(moveTask(draggableId, destination.index));\n      } else {\n        await dispatch(\n          moveTask(draggableId, destination.index, destination.droppableId)\n        );\n      }\n\n      enqueueSnackbar(t('Task has been successfully moved'), {\n        variant: 'info',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        TransitionComponent: Zoom\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(t('There was an error, try again later'), {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        TransitionComponent: Zoom\n      });\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getBoard());\n  }, [dispatch]);\n\n  const assignees = [\n    {\n      avatar: '/static/images/avatars/1.jpg',\n      name: 'Maren Lipshutz'\n    },\n    {\n      avatar: '/static/images/avatars/2.jpg',\n      name: 'Zain Vetrovs'\n    },\n    {\n      avatar: '/static/images/avatars/3.jpg',\n      name: 'Hanna Siphron'\n    },\n    {\n      avatar: '/static/images/avatars/4.jpg',\n      name: 'Cristofer Aminoff'\n    },\n    {\n      avatar: '/static/images/avatars/5.jpg',\n      name: 'Maria Calzoni'\n    }\n  ];\n\n  const sprints = [\n    {\n      progress: 58,\n      name: 'Sprint 1'\n    },\n    {\n      progress: 43,\n      name: 'Sprint 2'\n    },\n    {\n      progress: 65,\n      name: 'Sprint 3'\n    },\n    {\n      progress: 84,\n      name: 'Sprint 4'\n    },\n    {\n      progress: 43,\n      name: 'Sprint 5'\n    }\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>Projects Board - Applications</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageHeader />\n      </PageTitleWrapper>\n\n      <Grid\n        sx={{ px: 4 }}\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        spacing={3}\n      >\n        <Grid item xs={12}>\n          <TabsContainerWrapper>\n            <Tabs\n              onChange={handleTabsChange}\n              value={currentTab}\n              variant=\"scrollable\"\n              textColor=\"primary\"\n              indicatorColor=\"primary\"\n            >\n              {tabs.map((tab) => (\n                <Tab key={tab.value} label={tab.label} value={tab.value} />\n              ))}\n              <Tab\n                href=\"#\"\n                label={\n                  <Tooltip placement=\"top\" arrow title={t('Add new project')}>\n                    <AddTwoToneIcon />\n                  </Tooltip>\n                }\n                disabled\n              />\n            </Tabs>\n          </TabsContainerWrapper>\n          <FilterOptions>\n            <Grid\n              container\n              direction=\"row\"\n              justifyContent=\"center\"\n              alignItems=\"stretch\"\n              spacing={3}\n            >\n              <Grid item xs={12} lg={6} md={6}>\n                <Autocomplete\n                  multiple\n                  sx={{ m: 2 }}\n                  limitTags={2}\n                  options={assignees}\n                  renderOption={(props, option) => (\n                    <li {...props}>\n                      <Avatar sx={{ mr: 1 }} src={option.avatar} />\n                      {option.name}\n                    </li>\n                  )}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      variant=\"outlined\"\n                      fullWidth\n                      InputLabelProps={{\n                        shrink: true\n                      }}\n                      label={t('Assigned')}\n                      placeholder={t('Select assignees...')}\n                    />\n                  )}\n                  renderTags={(assignees, getTagProps) =>\n                    assignees.map((ev, index) => (\n                      <Chip\n                        key={ev.name}\n                        label={ev.name}\n                        {...getTagProps({ index })}\n                        avatar={<Avatar src={ev.avatar} />}\n                      />\n                    ))\n                  }\n                />\n              </Grid>\n              <Grid item xs={12} lg={6} md={6}>\n                <Autocomplete\n                  sx={{ m: 2 }}\n                  limitTags={2}\n                  autoHighlight\n                  options={sprints}\n                  renderOption={(props, option) => (\n                    <Fragment key={option.name}>\n                      <li {...props}>\n                        <Box flex={1} py={1}>\n                          <Box\n                            display=\"flex\"\n                            alignItems=\"center\"\n                            justifyContent=\"space-between\"\n                            pb={1}\n                          >\n                            <Typography variant=\"h5\">{option.name}</Typography>\n                            <Label color=\"success\">{option.progress}%</Label>\n                          </Box>\n\n                          <LinearProgressWrapper\n                            value={option.progress}\n                            color=\"primary\"\n                            variant=\"determinate\"\n                          />\n                        </Box>\n                      </li>\n                      <Divider />\n                    </Fragment>\n                  )}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      variant=\"outlined\"\n                      fullWidth\n                      InputLabelProps={{\n                        shrink: true\n                      }}\n                      label={t('Sprint')}\n                      placeholder={t('Select sprint...')}\n                    />\n                  )}\n                />\n              </Grid>\n            </Grid>\n          </FilterOptions>\n        </Grid>\n        <Grid item xs={12}>\n          <TasksWrapperContent>\n            <DragDropContext onDragEnd={handleDragEnd}>\n              <TasksWrapper>\n                {lists.allIds.map((listId) => (\n                  <Results key={listId} listId={listId} />\n                ))}\n\n                <Tooltip arrow title={t('Add a new project panel')}>\n                  <CardAddAction>\n                    <CardActionArea sx={{ px: 1 }}>\n                      <CardContent>\n                        <AvatarAddWrapper>\n                          <AddTwoToneIcon fontSize=\"large\" />\n                        </AvatarAddWrapper>\n                      </CardContent>\n                    </CardActionArea>\n                  </CardAddAction>\n                </Tooltip>\n              </TasksWrapper>\n            </DragDropContext>\n          </TasksWrapperContent>\n        </Grid>\n      </Grid>\n      <Footer />\n    </>\n  );\n}\n\nexport default ApplicationsProjectsBoard;\n","import PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\n\nconst LabelWrapper = styled('span')(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: ${theme.spacing(0.5, 1)};\n      font-size: ${theme.typography.pxToRem(13)};\n      border-radius: ${theme.general.borderRadius};\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      max-height: ${theme.spacing(3)};\n      \n      &.MuiLabel {\n        &-primary {\n          background-color: ${theme.colors.primary.lighter};\n          color: ${theme.palette.primary.main}\n        }\n\n        &-black {\n          background-color: ${theme.colors.alpha.black[100]};\n          color: ${theme.colors.alpha.white[100]};\n        }\n        \n        &-secondary {\n          background-color: ${theme.colors.secondary.lighter};\n          color: ${theme.palette.secondary.main}\n        }\n        \n        &-success {\n          background-color: ${theme.colors.success.lighter};\n          color: ${theme.palette.success.main}\n        }\n        \n        &-warning {\n          background-color: ${theme.colors.warning.lighter};\n          color: ${theme.palette.warning.main}\n        }\n              \n        &-error {\n          background-color: ${theme.colors.error.lighter};\n          color: ${theme.palette.error.main}\n        }\n        \n        &-info {\n          background-color: ${theme.colors.info.lighter};\n          color: ${theme.palette.info.main}\n        }\n      }\n`\n);\n\nconst Label = ({ className, color = 'secondary', children, ...rest }) => {\n  return (\n    <LabelWrapper className={`MuiLabel-${color}`} {...rest}>\n      {children}\n    </LabelWrapper>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'primary',\n    'black',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info'\n  ])\n};\n\nexport default Label;\n","import PropTypes from 'prop-types';\nimport { Box, styled } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4)};\n`\n);\n\nconst PageTitleWrapper = ({ children }) => {\n  return (\n    <>\n      <PageTitle className=\"MuiPageTitle-wrapper\">{children}</PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n"],"sourceRoot":""}