{"version":3,"sources":["content/docs/RtlLayout/index.js","components/PageHeaderDocs/index.js"],"names":["RtlLayout","maxWidth","container","spacing","item","xs","heading","subheading","paragraph","showLineNumbers","wrapLines","language","style","a11yDark","RootWrapper","styled","Box","theme","PageHeader","rest","t","useTranslation","variant","sx","mt"],"mappings":"uKAAA,0FA8EeA,UAvEf,WAoBE,OACE,qCACE,cAAC,IAAD,UACE,0GAIF,cAAC,IAAD,CAAWC,UAAU,EAArB,SACE,eAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CAAYC,QAAQ,uBAAuBC,WAAW,OAExD,eAAC,IAAD,CAAMH,MAAI,EAACC,GAAI,GAAf,UACE,cAAC,IAAD,CAAYG,WAAS,EAArB,qKAKA,eAAC,IAAD,CAAYA,WAAS,EAArB,6DACmD,IACjD,mEAEF,cAAC,IAAD,CACEC,iBAAe,EACfC,WAAS,EACTC,SAAS,aACTC,MAAOC,IAJT,SAzCE,6YAiDF,uBACA,eAAC,IAAD,CAAYL,WAAS,EAArB,yCAC8B,sDAD9B,yBAEmB,6CAFnB,WAEiD,wCAAkB,IAFnE,MAGK,wCAHL,WAKA,eAAC,IAAD,CAAYA,WAAS,EAArB,6CACmC,IACjC,0EAFF,gCAGY,0DAHZ,OAGoD,IAClD,qEAJF,qBAImE,IACjE,8CALF,SAK+B,yCAL/B,8D,gIC1DNM,EAAcC,YAAOC,IAAPD,EAClB,gBAAGE,EAAH,EAAGA,MAAH,sCACoBA,EAAMd,QAAQ,GADlC,UA4Bae,IAvBI,SAAC,GAAsC,IAApCZ,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,WAAeY,EAAW,iBAC/CC,EAAMC,cAAND,EAER,OACE,eAACN,EAAD,2BAAiBK,GAAjB,cACGb,GAAW,cAAC,IAAD,CAAYgB,QAAQ,KAApB,SAA0BF,EAAEd,KACvCC,GACC,cAAC,IAAD,CAAYe,QAAQ,YAApB,SAAiCF,EAAEb,KAErC,cAAC,IAAD,CACEgB,GAAI,CACFC,GAAI","file":"static/js/109.445c6437.chunk.js","sourcesContent":["import { Container, Typography, Grid } from '@mui/material';\n\nimport { Helmet } from 'react-helmet-async';\nimport PageHeader from 'src/components/PageHeaderDocs';\nimport { Prism } from 'react-syntax-highlighter';\nimport a11yDark from 'react-syntax-highlighter/dist/cjs/styles/prism/a11y-dark';\n\nfunction RtlLayout() {\n  const intDir = `// import { CacheProvider } from '@emotion/react';\n// import createCache from '@emotion/cache';\n// import stylisRTLPlugin from 'stylis-plugin-rtl';\n\n// const cacheRtl = createCache({\n//   key: 'bloom-ui',\n//   prepend: true,\n//   \n//   stylisPlugins: [stylisRTLPlugin]\n// });\n\nreturn (\n  \n    {/* <CacheProvider value={cacheRtl}> */}\n      \n    {/* </CacheProvider> */}\n  \n);`;\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          Right-to-Left Layout - Tokyo White React Javascript Admin Dashboard\n        </title>\n      </Helmet>\n      <Container maxWidth={false}>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <PageHeader heading=\"Right-to-Left Layout\" subheading=\"\" />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography paragraph>\n              Tokyo White React Javascript Admin Dashboard fully supports\n              right-to-left layouts. By default, the RTL support is disabled,\n              but it's easy to enable it.\n            </Typography>\n            <Typography paragraph>\n              Uncomment the lines in the below example, inside{' '}\n              <code>src\\theme\\ThemeProvider.js</code>\n            </Typography>\n            <Prism\n              showLineNumbers\n              wrapLines\n              language=\"javascript\"\n              style={a11yDark}\n            >\n              {intDir}\n            </Prism>\n            <br />\n            <Typography paragraph>\n              When using a RTL layout, in <code>public\\index.html</code> you\n              will have to add <code>dir=\"rtl\"</code> to the <code>body</code>{' '}\n              or <code>html</code> tag.\n            </Typography>\n            <Typography paragraph>\n              Also, inside the used theme (eg.{' '}\n              <code>src\\theme\\schemes\\PureLightTheme.js</code>) you will have to\n              uncomment <code>direction: i18n.dir(),</code> and{' '}\n              <code>import i18n from 'src/i18n/i18n';</code> or simply replace{' '}\n              <code>i18n.dir()</code> with <code>'rtl'</code> if you don't want\n              automatic RTL detection.\n            </Typography>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default RtlLayout;\n","import PropTypes from 'prop-types';\n\nimport { useTranslation } from 'react-i18next';\nimport { styled, Typography, Box, Divider } from '@mui/material';\n\nconst RootWrapper = styled(Box)(\n  ({ theme }) => `\n        margin-top: ${theme.spacing(5)};\n`\n);\n\nconst PageHeader = ({ heading, subheading, ...rest }) => {\n  const { t } = useTranslation();\n\n  return (\n    <RootWrapper {...rest}>\n      {heading && <Typography variant=\"h1\">{t(heading)}</Typography>}\n      {subheading && (\n        <Typography variant=\"subtitle2\">{t(subheading)}</Typography>\n      )}\n      <Divider\n        sx={{\n          mt: 5\n        }}\n      />\n    </RootWrapper>\n  );\n};\n\nPageHeader.propTypes = {\n  heading: PropTypes.string,\n  subheading: PropTypes.string\n};\n\nexport default PageHeader;\n"],"sourceRoot":""}