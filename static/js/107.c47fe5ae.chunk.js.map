{"version":3,"sources":["content/docs/Introduction/index.js","components/PageHeaderDocs/index.js"],"names":["Introduction","maxWidth","container","spacing","item","xs","heading","subheading","sx","mb","variant","paragraph","RootWrapper","styled","Box","theme","PageHeader","rest","t","useTranslation","mt"],"mappings":"uKAAA,8DA0GeA,UArGf,WACE,OACE,qCACE,cAAC,IAAD,UACE,kGAEF,cAAC,IAAD,CAAWC,UAAU,EAArB,SACE,eAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CAAYC,QAAQ,eAAeC,WAAW,OAEhD,eAAC,IAAD,CAAMH,MAAI,EAACC,GAAI,GAAf,UACE,cAAC,IAAD,CACEG,GAAI,CACFC,GAAI,GAENC,QAAQ,KAJV,qBAQA,cAAC,IAAD,CAAYC,WAAS,EAArB,0KAKA,cAAC,IAAD,CAAYA,WAAS,EAArB,4TAOA,cAAC,IAAD,CAAYA,WAAS,EAArB,iIAIA,cAAC,IAAD,CAAYA,WAAS,EAArB,kLAKA,eAAC,IAAD,CAAYA,WAAS,EAArB,qEAC2D,IACzD,oDAFF,iMAOA,uBACA,cAAC,IAAD,CACEH,GAAI,CACFC,GAAI,GAENC,QAAQ,KAJV,sBAQA,eAAC,IAAD,CAAYC,WAAS,EAArB,yPAKE,oEAEF,uBACA,cAAC,IAAD,CACEH,GAAI,CACFC,GAAI,GAENC,QAAQ,KAJV,0BAQA,cAAC,IAAD,CAAYC,WAAS,EAArB,gcASA,eAAC,IAAD,CAAYA,WAAS,EAArB,8CACoC,IAClC,iEAFF,4MAQA,cAAC,IAAD,CAAYA,WAAS,EAArB,+I,gIC1FNC,EAAcC,YAAOC,IAAPD,EAClB,gBAAGE,EAAH,EAAGA,MAAH,sCACoBA,EAAMZ,QAAQ,GADlC,UA4Baa,IAvBI,SAAC,GAAsC,IAApCV,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,WAAeU,EAAW,iBAC/CC,EAAMC,cAAND,EAER,OACE,eAACN,EAAD,2BAAiBK,GAAjB,cACGX,GAAW,cAAC,IAAD,CAAYI,QAAQ,KAApB,SAA0BQ,EAAEZ,KACvCC,GACC,cAAC,IAAD,CAAYG,QAAQ,YAApB,SAAiCQ,EAAEX,KAErC,cAAC,IAAD,CACEC,GAAI,CACFY,GAAI","file":"static/js/107.c47fe5ae.chunk.js","sourcesContent":["import { Container, Grid, Typography } from '@mui/material';\n\nimport { Helmet } from 'react-helmet-async';\nimport PageHeader from 'src/components/PageHeaderDocs';\n\nfunction Introduction() {\n  return (\n    <>\n      <Helmet>\n        <title>Introduction - Tokyo White React Javascript Admin Dashboard</title>\n      </Helmet>\n      <Container maxWidth={false}>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <PageHeader heading=\"Introduction\" subheading=\"\" />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography\n              sx={{\n                mb: 2\n              }}\n              variant=\"h2\"\n            >\n              Welcome\n            </Typography>\n            <Typography paragraph>\n              Tokyo White React Javascript Admin Dashboard includes multiple pages\n              that can be used to give you a head start when starting you start\n              developing a web app.\n            </Typography>\n            <Typography paragraph>\n              We've built this template with performance in mind, so all pages\n              will get a 96 or more score on Google Lighthouse performance\n              testing. You can inspect the template performance by opening the\n              Google Chrome Inspector and moving to the last tab named\n              \"Lighthouse\". On that tab click on \"Generate report\".\n            </Typography>\n            <Typography paragraph>\n              We designed multiple color schemes that can be switched from the\n              Settings button in the live preview screen corner.\n            </Typography>\n            <Typography paragraph>\n              The documentation includes basic examples on how to work with the\n              template or how to remove certain parts that you will not be using\n              in your production application.\n            </Typography>\n            <Typography paragraph>\n              Tokyo White React Javascript Admin Dashboard is based on{' '}\n              <code>Create React App</code> from Facebook. If required, you can\n              use the eject command to eject the project instance. Read more\n              about ejecting here:\n              https://create-react-app.dev/docs/available-scripts/#npm-run-eject\n            </Typography>\n            <br />\n            <Typography\n              sx={{\n                mb: 2\n              }}\n              variant=\"h2\"\n            >\n              Feedback\n            </Typography>\n            <Typography paragraph>\n              We try to constantly improve all our products. Any feedback or\n              suggestions you might have will help us a lot in developing the\n              next release. If you have any suggestions, bugs report or issue,\n              you can open a ticket by sending an email to\n              <code>support@bloomui.freshdesk.com</code>\n            </Typography>\n            <br />\n            <Typography\n              sx={{\n                mb: 2\n              }}\n              variant=\"h2\"\n            >\n              Custom Pages\n            </Typography>\n            <Typography paragraph>\n              Based on our experience in developing applications user interfaces\n              we chose popular niche areas for the dashboard pages, applications\n              and management sections. We understand that these might not be\n              enough for your app's needs. That's why we are offering to build\n              custom pages based on your needs, if we feel that your requested\n              page design might benefit multiple customers or if they aren't too\n              specific to a particular products niche.\n            </Typography>\n            <Typography paragraph>\n              All you have to do is email us at{' '}\n              <code>support@bloomui.freshdesk.com</code>\n              with a wireframe, prototype or design for the requested pages.\n              After our initial review, we will contact you and let you know if\n              we'll be integrating your custom page in Tokyo React Admin\n              Dashboard.\n            </Typography>\n            <Typography paragraph>\n              Please note that we reserve the right to reject any or all custom\n              page requests that are made for free custom pages.\n            </Typography>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default Introduction;\n","import PropTypes from 'prop-types';\n\nimport { useTranslation } from 'react-i18next';\nimport { styled, Typography, Box, Divider } from '@mui/material';\n\nconst RootWrapper = styled(Box)(\n  ({ theme }) => `\n        margin-top: ${theme.spacing(5)};\n`\n);\n\nconst PageHeader = ({ heading, subheading, ...rest }) => {\n  const { t } = useTranslation();\n\n  return (\n    <RootWrapper {...rest}>\n      {heading && <Typography variant=\"h1\">{t(heading)}</Typography>}\n      {subheading && (\n        <Typography variant=\"subtitle2\">{t(subheading)}</Typography>\n      )}\n      <Divider\n        sx={{\n          mt: 5\n        }}\n      />\n    </RootWrapper>\n  );\n};\n\nPageHeader.propTypes = {\n  heading: PropTypes.string,\n  subheading: PropTypes.string\n};\n\nexport default PageHeader;\n"],"sourceRoot":""}