{"version":3,"sources":["content/pages/Auth/RecoverPassword/index.js","../node_modules/@mui/icons-material/Close.js"],"names":["Transition","forwardRef","props","ref","direction","MainContent","styled","Box","DialogWrapper","Dialog","AvatarSuccess","Avatar","theme","colors","success","main","palette","contrastText","spacing","shadows","typography","pxToRem","RecoverPasswordBasic","t","useTranslation","isMountedRef","useRefMounted","useState","openAlert","setOpenAlert","openDialog","setOpenDialog","handleOpenDialog","handleCloseDialog","maxWidth","sx","mt","p","variant","mb","color","fontWeight","initialValues","email","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","current","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","touched","noValidate","Boolean","fullWidth","helperText","label","margin","name","onBlur","onChange","type","value","disabled","onClick","size","textAlign","component","RouterLink","to","open","TransitionComponent","keepMounted","onClose","px","pb","pt","in","action","fontSize","severity","align","py","href","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"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","file":"static/js/114.4f7fae57.chunk.js","sourcesContent":["import { useState, forwardRef } from 'react';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Box,\n  Card,\n  Link,\n  TextField,\n  Typography,\n  Container,\n  Alert,\n  Slide,\n  Dialog,\n  Collapse,\n  Button,\n  Avatar,\n  IconButton,\n  styled\n} from '@mui/material';\nimport { Helmet } from 'react-helmet-async';\n\nimport useRefMounted from 'src/hooks/useRefMounted';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { useTranslation } from 'react-i18next';\nimport Logo from 'src/components/LogoSign';\nimport CheckTwoToneIcon from '@mui/icons-material/CheckTwoTone';\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\nconst MainContent = styled(Box)(\n  () => `\n    height: 100%;\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`\n);\n\nconst DialogWrapper = styled(Dialog)(\n  () => `\n      .MuiDialog-paper {\n        overflow: visible;\n      }\n`\n);\n\nconst AvatarSuccess = styled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.success.main};\n      color: ${theme.palette.success.contrastText};\n      width: ${theme.spacing(12)};\n      height: ${theme.spacing(12)};\n      box-shadow: ${theme.colors.shadows.success};\n      top: -${theme.spacing(6)};\n      position: absolute;\n      left: 50%;\n      margin-left: -${theme.spacing(6)};\n\n      .MuiSvgIcon-root {\n        font-size: ${theme.typography.pxToRem(45)};\n      }\n`\n);\n\nfunction RecoverPasswordBasic() {\n  const { t } = useTranslation();\n  const isMountedRef = useRefMounted();\n\n  const [openAlert, setOpenAlert] = useState(true);\n\n  const [openDialog, setOpenDialog] = useState(false);\n\n  const handleOpenDialog = () => {\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Recover Password</title>\n      </Helmet>\n      <MainContent>\n        <Container maxWidth=\"sm\">\n          <Logo />\n          <Card\n            sx={{\n              mt: 3,\n              p: 4\n            }}\n          >\n            <Box>\n              <Typography\n                variant=\"h2\"\n                sx={{\n                  mb: 1\n                }}\n              >\n                {t('Recover Password')}\n              </Typography>\n              <Typography\n                variant=\"h4\"\n                color=\"text.secondary\"\n                fontWeight=\"normal\"\n                sx={{\n                  mb: 3\n                }}\n              >\n                {t(\n                  'Enter the email used for registration to reset your password.'\n                )}\n              </Typography>\n            </Box>\n\n            <Formik\n              initialValues={{\n                email: 'demo@example.com',\n                submit: null\n              }}\n              validationSchema={Yup.object().shape({\n                email: Yup.string()\n                  .email(\n                    t('The email provided should be a valid email address')\n                  )\n                  .max(255)\n                  .required(t('The email field is required'))\n              })}\n              onSubmit={async (\n                values,\n                { setErrors, setStatus, setSubmitting }\n              ) => {\n                try {\n                  if (isMountedRef.current) {\n                    setStatus({ success: true });\n                    setSubmitting(false);\n                  }\n                } catch (err) {\n                  console.error(err);\n                  if (isMountedRef.current) {\n                    setStatus({ success: false });\n                    setErrors({ submit: err.message });\n                    setSubmitting(false);\n                  }\n                }\n              }}\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                touched,\n                values\n              }) => (\n                <form noValidate onSubmit={handleSubmit}>\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label={t('Email address')}\n                    margin=\"normal\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"email\"\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n\n                  <Button\n                    sx={{\n                      mt: 3\n                    }}\n                    color=\"primary\"\n                    disabled={Boolean(touched.email && errors.email)}\n                    onClick={handleOpenDialog}\n                    type=\"submit\"\n                    fullWidth\n                    size=\"large\"\n                    variant=\"contained\"\n                  >\n                    {t('Send me a new password')}\n                  </Button>\n                </form>\n              )}\n            </Formik>\n          </Card>\n          <Box mt={3} textAlign=\"right\">\n            <Typography\n              component=\"span\"\n              variant=\"subtitle2\"\n              color=\"text.primary\"\n              fontWeight=\"bold\"\n            >\n              {t('Want to try to sign in again?')}\n            </Typography>{' '}\n            <Link component={RouterLink} to=\"/account/login-basic\">\n              <b>Click here</b>\n            </Link>\n          </Box>\n        </Container>\n      </MainContent>\n\n      <DialogWrapper\n        open={openDialog}\n        maxWidth=\"sm\"\n        fullWidth\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleCloseDialog}\n      >\n        <Box\n          sx={{\n            px: 4,\n            pb: 4,\n            pt: 10\n          }}\n        >\n          <AvatarSuccess>\n            <CheckTwoToneIcon />\n          </AvatarSuccess>\n\n          <Collapse in={openAlert}>\n            <Alert\n              action={\n                <IconButton\n                  aria-label=\"close\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  onClick={() => {\n                    setOpenAlert(false);\n                  }}\n                >\n                  <CloseIcon fontSize=\"inherit\" />\n                </IconButton>\n              }\n              severity=\"info\"\n            >\n              {t(\n                'The password reset instructions have been sent to your email'\n              )}\n            </Alert>\n          </Collapse>\n\n          <Typography\n            align=\"center\"\n            sx={{\n              py: 4,\n              px: 10\n            }}\n            variant=\"h3\"\n          >\n            {t('Check your email for further instructions')}\n          </Typography>\n\n          <Button\n            fullWidth\n            size=\"large\"\n            variant=\"contained\"\n            onClick={handleCloseDialog}\n            href=\"/account/login-basic\"\n          >\n            {t('Continue to login')}\n          </Button>\n        </Box>\n      </DialogWrapper>\n    </>\n  );\n}\n\nexport default RecoverPasswordBasic;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;"],"sourceRoot":""}