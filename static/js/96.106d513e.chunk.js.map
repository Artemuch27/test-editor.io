{"version":3,"sources":["content/applications/JobsPlatform/Results.js","content/applications/JobsPlatform/PageHeader.js","content/applications/JobsPlatform/Sidebar.js","content/applications/JobsPlatform/index.js","components/Label/index.js"],"names":["Results","jobs","theme","useTheme","useState","page","setPage","limit","setLimit","t","useTranslation","paginatedJobs","slice","applyPagination","actionRef","useRef","openSort","setOpenMenuSort","sort","setSort","sorts","value","text","AvatarWrapper","styled","Avatar","spacing","ChipWrapper","Chip","colors","alpha","black","IconButtonSuccess","IconButton","success","lighter","main","lighten","IconButtonError","error","Box","mb","display","alignItems","justifyContent","Typography","component","variant","length","Button","size","ref","onClick","endIcon","fontSize","Menu","disableScrollLock","anchorEl","current","onClose","open","anchorOrigin","vertical","horizontal","transformOrigin","map","_sort","MenuItem","Grid","container","item","xs","md","Card","sx","textAlign","height","flexDirection","p","typography","pxToRem","py","fontWeight","color","px","lineHeight","job","src","company_logo","title","company_name","location","tags","label","Divider","fullWidth","id","TablePagination","count","onPageChange","_event","newPage","onRowsPerPageChange","event","parseInt","target","rowsPerPage","rowsPerPageOptions","defaultProps","PageHeader","align","AccordionSummaryWrapper","AccordionSummary","ListItemWrapper","ListItemButton","Sidebar","typeOfEmployment","amount","seniorityLevel","salaryRange","checked","setChecked","handleToggle","currentIndex","indexOf","newChecked","push","splice","checked2","setChecked2","handleToggle2","checked3","setChecked3","handleToggle3","Accordion","defaultExpanded","expandIcon","AccordionDetails","List","disablePadding","ListItemIcon","minWidth","Checkbox","edge","tabIndex","disableRipple","ListItemText","primary","primaryTypographyProps","Label","SearchIconWrapper","SearchTwoToneIcon","DrawerWrapperMobile","Drawer","IconButtonToggle","white","header","jobsTags","jobsLocations","ApplicationsJobsPlatform","mobileOpen","setMobileOpen","handleDrawerToggle","isMountedRef","useRefMounted","setJobs","getJobs","useCallback","a","axios","get","response","data","console","useEffect","direction","mt","lg","ml","flexShrink","Stack","flex","divider","orientation","flexItem","Autocomplete","multiple","limitTags","options","getOptionLabel","option","defaultValue","renderInput","params","TextField","placeholder","anchor","Scrollbar","Footer","LabelWrapper","general","borderRadius","palette","secondary","warning","info","className","children","rest"],"mappings":"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","file":"static/js/96.106d513e.chunk.js","sourcesContent":["import { useState, useRef } from 'react';\n\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  Chip,\n  Typography,\n  Card,\n  Box,\n  IconButton,\n  Avatar,\n  Button,\n  MenuItem,\n  Menu,\n  useTheme,\n  Divider,\n  lighten,\n  styled,\n  TablePagination\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\nimport ExpandMoreTwoToneIcon from '@mui/icons-material/ExpandMoreTwoTone';\nimport ThumbUpTwoToneIcon from '@mui/icons-material/ThumbUpTwoTone';\nimport ThumbDownTwoToneIcon from '@mui/icons-material/ThumbDownTwoTone';\n\nconst applyPagination = (jobs, page, limit) => {\n  return jobs.slice(page * limit, page * limit + limit);\n};\n\nconst Results = ({ jobs }) => {\n  const theme = useTheme();\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const { t } = useTranslation();\n\n  const handlePageChange = (_event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  const paginatedJobs = applyPagination(jobs, page, limit);\n\n  const actionRef = useRef(null);\n  const [openSort, setOpenMenuSort] = useState(false);\n  const [sort, setSort] = useState('Sort by...');\n\n  const sorts = [\n    {\n      value: '1',\n      text: t('Most recent')\n    },\n    {\n      value: '2',\n      text: t('Company name')\n    },\n    {\n      value: '3',\n      text: t('Location')\n    },\n    {\n      value: '4',\n      text: t('Salary range')\n    }\n  ];\n\n  const AvatarWrapper = styled(Avatar)(\n    ({ theme }) => `\n        height: ${theme.spacing(12)};\n        width: ${theme.spacing(12)};\n`\n  );\n\n  const ChipWrapper = styled(Chip)(\n    ({ theme }) => `\n        background: ${theme.colors.alpha.black[10]};\n        margin: ${theme.spacing(0.5)};\n        padding: ${theme.spacing(1)};\n        height: 28px;\n        line-height: 28px;\n        font-weight: bold;\n`\n  );\n\n  const IconButtonSuccess = styled(IconButton)(\n    ({ theme }) => `\n        background: ${theme.colors.success.lighter};\n        color: ${theme.colors.success.main};\n        width: ${theme.spacing(10)};\n        height: ${theme.spacing(10)};\n        margin: ${theme.spacing(1.5)};\n\n        &:hover {\n            background: ${lighten(theme.colors.success.lighter, 0.4)};\n        }\n`\n  );\n\n  const IconButtonError = styled(IconButton)(\n    ({ theme }) => `\n        background: ${theme.colors.error.lighter};\n        color: ${theme.colors.error.main};\n        width: ${theme.spacing(10)};\n        height: ${theme.spacing(10)};\n        margin: ${theme.spacing(1.5)};\n\n        &:hover {\n            background: ${lighten(theme.colors.error.lighter, 0.4)};\n        }\n`\n  );\n\n  return (\n    <>\n      <Box\n        mb={3}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Box>\n          <Typography component=\"span\" variant=\"subtitle1\">\n            {t('Showing')}\n          </Typography>{' '}\n          <b>{limit}</b> {t('of')} <b>{paginatedJobs.length}</b>{' '}\n          <b>{t('total job positions')}</b>\n        </Box>\n        <Button\n          size=\"small\"\n          variant=\"outlined\"\n          ref={actionRef}\n          onClick={() => setOpenMenuSort(true)}\n          endIcon={<ExpandMoreTwoToneIcon fontSize=\"small\" />}\n        >\n          {sort}\n        </Button>\n        <Menu\n          disableScrollLock\n          anchorEl={actionRef.current}\n          onClose={() => setOpenMenuSort(false)}\n          open={openSort}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n        >\n          {sorts.map((_sort) => (\n            <MenuItem\n              key={_sort.value}\n              onClick={() => {\n                setSort(_sort.text);\n                setOpenMenuSort(false);\n              }}\n            >\n              {_sort.text}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Box>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={6}>\n          <Card\n            sx={{\n              textAlign: 'center',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              height: '100%',\n              flexDirection: 'column',\n              p: 3\n            }}\n          >\n            <Typography\n              variant=\"h3\"\n              sx={{\n                fontSize: `${theme.typography.pxToRem(23)}`\n              }}\n            >\n              {t('Are these jobs right for you?')}\n            </Typography>\n            <Box py={2}>\n              <IconButtonSuccess>\n                <ThumbUpTwoToneIcon fontSize=\"large\" />\n              </IconButtonSuccess>\n              <IconButtonError>\n                <ThumbDownTwoToneIcon fontSize=\"large\" />\n              </IconButtonError>\n            </Box>\n            <Typography\n              variant=\"h4\"\n              fontWeight=\"normal\"\n              color=\"text.secondary\"\n              sx={{\n                px: 2,\n                lineHeight: 1.5\n              }}\n            >\n              {t(\"We'll use your feedback to improve future recommendations\")}\n            </Typography>\n          </Card>\n        </Grid>\n        {paginatedJobs.map((job) => {\n          return (\n            <Grid key={job.id} item xs={12} md={6}>\n              <Card>\n                <Box\n                  p={3}\n                  display=\"flex\"\n                  alignItems=\"flex-start\"\n                  justifyContent=\"space-between\"\n                >\n                  <AvatarWrapper src={job.company_logo} variant=\"rounded\" />\n                  <IconButton color=\"primary\">\n                    <MoreVertTwoToneIcon />\n                  </IconButton>\n                </Box>\n                <Box px={3}>\n                  <Typography\n                    variant=\"h4\"\n                    sx={{\n                      mb: 1\n                    }}\n                  >\n                    {job.title}\n                  </Typography>\n                  <Typography variant=\"h6\" color=\"text.secondary\">\n                    {job.company_name}\n                  </Typography>\n                  <Typography variant=\"subtitle1\">{job.location}</Typography>\n                </Box>\n                <Box px={2} py={1}>\n                  {job.tags.map((value) => {\n                    return (\n                      <ChipWrapper\n                        key={value}\n                        color=\"secondary\"\n                        label={value}\n                      />\n                    );\n                  })}\n                </Box>\n\n                <Divider />\n                <Box px={3} py={2}>\n                  <Grid container spacing={3}>\n                    <Grid item md={6}>\n                      <Button size=\"small\" fullWidth variant=\"contained\">\n                        {t('Apply Now')}\n                      </Button>\n                    </Grid>\n                    <Grid item md={6}>\n                      <Button size=\"small\" fullWidth variant=\"outlined\">\n                        {t('View details')}\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </Card>\n            </Grid>\n          );\n        })}\n        <Grid item xs={12}>\n          <Card\n            sx={{\n              p: 2\n            }}\n          >\n            <TablePagination\n              component=\"div\"\n              count={jobs.length}\n              onPageChange={handlePageChange}\n              onRowsPerPageChange={handleLimitChange}\n              page={page}\n              rowsPerPage={limit}\n              rowsPerPageOptions={[5, 10, 15]}\n            />\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nResults.propTypes = {\n  jobs: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  jobs: []\n};\n\nexport default Results;\n","import { Typography } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\n\nfunction PageHeader() {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Typography\n        align=\"center\"\n        variant=\"h1\"\n        component=\"h3\"\n        sx={{\n          mb: 1\n        }}\n      >\n        {t('Jobs Platform')}\n      </Typography>\n      <Typography\n        align=\"center\"\n        variant=\"h4\"\n        fontWeight=\"normal\"\n        color=\"text.secondary\"\n      >\n        {t('Find your dream job, fast and easy!')}\n      </Typography>\n    </>\n  );\n}\n\nexport default PageHeader;\n","import { useState } from 'react';\n\nimport {\n  Typography,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Divider,\n  ListItemIcon,\n  Checkbox,\n  List,\n  ListItemButton,\n  ListItemText,\n  styled\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Label from 'src/components/Label';\n\nconst AccordionSummaryWrapper = styled(AccordionSummary)(\n  () => `\n      &.Mui-expanded {\n        min-height: 48px;\n      }\n\n      .MuiAccordionSummary-content.Mui-expanded {\n        margin: 12px 0;\n      }\n  `\n);\n\nconst ListItemWrapper = styled(ListItemButton)(\n  () => `\n  \n      &.MuiButtonBase-root {\n        border-radius: 0;\n      }\n  `\n);\n\nfunction Sidebar() {\n  const { t } = useTranslation();\n\n  const typeOfEmployment = [\n    {\n      id: 1,\n      amount: 12,\n      value: 'full_time',\n      text: t('Full Time')\n    },\n    {\n      id: 2,\n      amount: 16,\n      value: 'part_time',\n      text: t('Part Time')\n    },\n    {\n      id: 3,\n      amount: 9,\n      value: 'remote',\n      text: t('Remote')\n    },\n    {\n      id: 4,\n      amount: 19,\n      value: 'internship',\n      text: t('Internship')\n    },\n    {\n      id: 5,\n      amount: 25,\n      value: 'freelance',\n      text: t('Freelance')\n    }\n  ];\n\n  const seniorityLevel = [\n    {\n      id: 1,\n      amount: 7,\n      value: 'student',\n      text: t('Student')\n    },\n    {\n      id: 2,\n      amount: 35,\n      value: 'entry',\n      text: t('Entry Level')\n    },\n    {\n      id: 3,\n      amount: 27,\n      value: 'mid',\n      text: t('Mid Level')\n    },\n    {\n      id: 4,\n      amount: 8,\n      value: 'director',\n      text: t('Director')\n    },\n    {\n      id: 5,\n      amount: 4,\n      value: 'vp',\n      text: t('VP and above')\n    }\n  ];\n\n  const salaryRange = [\n    {\n      id: 1,\n      amount: 65,\n      value: '700_1200',\n      text: '$700 - $1200'\n    },\n    {\n      id: 2,\n      amount: 345,\n      value: '1200_3000',\n      text: '$1200 - $3000'\n    },\n    {\n      id: 3,\n      amount: 23,\n      value: '3000_5000',\n      text: '$3000 - $5000'\n    },\n    {\n      id: 4,\n      amount: 12,\n      value: '5000_above',\n      text: t('$5000 and above')\n    }\n  ];\n\n  const [checked, setChecked] = useState([0]);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const [checked2, setChecked2] = useState([0]);\n\n  const handleToggle2 = (value) => () => {\n    const currentIndex = checked2.indexOf(value);\n    const newChecked = [...checked2];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked2(newChecked);\n  };\n\n  const [checked3, setChecked3] = useState([0]);\n\n  const handleToggle3 = (value) => () => {\n    const currentIndex = checked3.indexOf(value);\n    const newChecked = [...checked3];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked3(newChecked);\n  };\n\n  return (\n    <>\n      <Accordion\n        sx={{\n          p: 1\n        }}\n        defaultExpanded\n      >\n        <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\n          <Typography variant=\"h5\">{t('Type of Employment')}</Typography>\n        </AccordionSummaryWrapper>\n        <AccordionDetails\n          sx={{\n            p: 0\n          }}\n        >\n          <List disablePadding component=\"div\">\n            {typeOfEmployment.map((value) => {\n              return (\n                <ListItemWrapper\n                  sx={{\n                    py: 0,\n                    px: 2\n                  }}\n                  key={value.id}\n                  onClick={handleToggle(value.id)}\n                >\n                  <ListItemIcon\n                    sx={{\n                      minWidth: 32\n                    }}\n                  >\n                    <Checkbox\n                      edge=\"start\"\n                      checked={checked.indexOf(value.id) !== -1}\n                      tabIndex={-1}\n                      disableRipple\n                    />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={value.text}\n                    primaryTypographyProps={{ variant: 'body1' }}\n                  />\n                  <Label color=\"primary\">{value.amount}</Label>\n                </ListItemWrapper>\n              );\n            })}\n          </List>\n        </AccordionDetails>\n      </Accordion>\n      <Divider />\n      <Accordion\n        sx={{\n          p: 1\n        }}\n        defaultExpanded\n      >\n        <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\n          <Typography variant=\"h5\">{t('Seniority Level')}</Typography>\n        </AccordionSummaryWrapper>\n        <AccordionDetails\n          sx={{\n            p: 0\n          }}\n        >\n          <List disablePadding component=\"div\">\n            {seniorityLevel.map((value) => {\n              return (\n                <ListItemWrapper\n                  sx={{\n                    py: 0,\n                    px: 2\n                  }}\n                  key={value.id}\n                  onClick={handleToggle2(value.id)}\n                >\n                  <ListItemIcon\n                    sx={{\n                      minWidth: 32\n                    }}\n                  >\n                    <Checkbox\n                      edge=\"start\"\n                      checked={checked2.indexOf(value.id) !== -1}\n                      tabIndex={-1}\n                      disableRipple\n                    />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={value.text}\n                    primaryTypographyProps={{ variant: 'body1' }}\n                  />\n                  <Label color=\"primary\">{value.amount}</Label>\n                </ListItemWrapper>\n              );\n            })}\n          </List>\n        </AccordionDetails>\n      </Accordion>\n      <Divider />\n      <Accordion\n        sx={{\n          p: 1\n        }}\n        defaultExpanded\n      >\n        <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\n          <Typography variant=\"h5\">{t('Salary Range')}</Typography>\n        </AccordionSummaryWrapper>\n        <AccordionDetails\n          sx={{\n            p: 0\n          }}\n        >\n          <List disablePadding component=\"div\">\n            {salaryRange.map((value) => {\n              return (\n                <ListItemWrapper\n                  sx={{\n                    py: 0,\n                    px: 2\n                  }}\n                  key={value.id}\n                  onClick={handleToggle3(value.id)}\n                >\n                  <ListItemIcon\n                    sx={{\n                      minWidth: 32\n                    }}\n                  >\n                    <Checkbox\n                      edge=\"start\"\n                      checked={checked3.indexOf(value.id) !== -1}\n                      tabIndex={-1}\n                      disableRipple\n                    />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={value.text}\n                    primaryTypographyProps={{ variant: 'body1' }}\n                  />\n                  <Label color=\"primary\">{value.amount}</Label>\n                </ListItemWrapper>\n              );\n            })}\n          </List>\n        </AccordionDetails>\n      </Accordion>\n    </>\n  );\n}\n\nexport default Sidebar;\n","import { useState, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Footer from 'src/components/Footer';\n\nimport {\n  TextField,\n  Divider,\n  Card,\n  Stack,\n  Box,\n  Autocomplete,\n  Grid,\n  IconButton,\n  Drawer,\n  styled,\n  useTheme\n} from '@mui/material';\nimport SearchTwoToneIcon from '@mui/icons-material/SearchTwoTone';\nimport { useTranslation } from 'react-i18next';\nimport axios from 'src/utils/axios';\nimport MenuTwoToneIcon from '@mui/icons-material/MenuTwoTone';\n\nimport useRefMounted from 'src/hooks/useRefMounted';\n\nimport Scrollbar from 'src/components/Scrollbar';\nimport Results from './Results';\nimport PageHeader from './PageHeader';\nimport Sidebar from './Sidebar';\n\nconst SearchIconWrapper = styled(SearchTwoToneIcon)(\n  ({ theme }) => `\n        color: ${theme.colors.alpha.black[30]}\n`\n);\n\nconst DrawerWrapperMobile = styled(Drawer)(\n  () => `\n    width: 340px;\n    flex-shrink: 0;\n\n  & > .MuiPaper-root {\n        width: 340px;\n        z-index: 3;\n  }\n`\n);\n\nconst IconButtonToggle = styled(IconButton)(\n  ({ theme }) => `\n  width: ${theme.spacing(6)};\n  height: ${theme.spacing(6)};\n  position: absolute;\n  background: ${theme.colors.alpha.white[100]};\n  z-index: 5;\n  top: calc(${theme.header.height} + ${theme.spacing(4)});\n`\n);\n\nconst jobsTags = [\n  { title: 'QA Engineer' },\n  { title: 'Team Lead' },\n  { title: 'React Developer' },\n  { title: 'Project Manager' }\n];\n\nconst jobsLocations = [\n  { title: 'Bucharest, Romania' },\n  { title: 'San Francisco, USA' },\n  { title: 'Madrid, Spain' },\n  { title: 'Berlin, Germany' },\n  { title: 'Paris, France' },\n  { title: 'London, UK' }\n];\n\nfunction ApplicationsJobsPlatform() {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const isMountedRef = useRefMounted();\n  const [jobs, setJobs] = useState([]);\n\n  const getJobs = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/jobs');\n\n      if (isMountedRef.current) {\n        setJobs(response.data.jobs);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getJobs();\n  }, [getJobs]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Jobs Platform - Applications</title>\n      </Helmet>\n\n      <Grid\n        sx={{\n          px: 4\n        }}\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        spacing={4}\n      >\n        <Grid item xs={12}>\n          <Box mt={4}>\n            <PageHeader />\n          </Box>\n          <IconButtonToggle\n            sx={{\n              display: { lg: 'none', xs: 'flex' }\n            }}\n            color=\"primary\"\n            onClick={handleDrawerToggle}\n            size=\"small\"\n          >\n            <MenuTwoToneIcon />\n          </IconButtonToggle>\n        </Grid>\n        <Grid item xs={12}>\n          <Card\n            sx={{\n              display: 'flex',\n              alignItems: 'center'\n            }}\n          >\n            <Box display={{ xs: 'none', lg: 'flex' }} ml={2} flexShrink={1}>\n              <SearchIconWrapper />\n            </Box>\n            <Stack\n              sx={{\n                p: 2,\n                flex: 1\n              }}\n              direction={{ xs: 'column', md: 'row' }}\n              justifyContent=\"space-evenly\"\n              alignItems=\"center\"\n              spacing={2}\n              divider={<Divider orientation=\"vertical\" flexItem />}\n            >\n              <Autocomplete\n                multiple\n                fullWidth\n                limitTags={2}\n                options={jobsTags}\n                getOptionLabel={(option) => option.title}\n                defaultValue={[jobsTags[0], jobsTags[1]]}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    fullWidth\n                    variant=\"outlined\"\n                    label={t('Jobs Tags')}\n                    placeholder={t('Select tags...')}\n                  />\n                )}\n              />\n              <Autocomplete\n                fullWidth\n                multiple\n                limitTags={2}\n                options={jobsLocations}\n                getOptionLabel={(option) => option.title}\n                defaultValue={[jobsLocations[1]]}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    fullWidth\n                    variant=\"outlined\"\n                    label={t('Location')}\n                    placeholder={t('Select location...')}\n                  />\n                )}\n              />\n            </Stack>\n          </Card>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          lg={3}\n          sx={{\n            display: { xs: 'none', lg: 'inline-block' }\n          }}\n        >\n          <Card>\n            <Sidebar />\n          </Card>\n        </Grid>\n        <Grid item xs={12} lg={9}>\n          {jobs && <Results jobs={jobs} />}\n        </Grid>\n      </Grid>\n      <DrawerWrapperMobile\n        sx={{\n          display: { lg: 'none', xs: 'inline-block' }\n        }}\n        variant=\"temporary\"\n        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n        open={mobileOpen}\n        onClose={handleDrawerToggle}\n      >\n        <Scrollbar>\n          <Sidebar />\n        </Scrollbar>\n      </DrawerWrapperMobile>\n      <Footer />\n    </>\n  );\n}\n\nexport default ApplicationsJobsPlatform;\n","import PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\n\nconst LabelWrapper = styled('span')(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: ${theme.spacing(0.5, 1)};\n      font-size: ${theme.typography.pxToRem(13)};\n      border-radius: ${theme.general.borderRadius};\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      max-height: ${theme.spacing(3)};\n      \n      &.MuiLabel {\n        &-primary {\n          background-color: ${theme.colors.primary.lighter};\n          color: ${theme.palette.primary.main}\n        }\n\n        &-black {\n          background-color: ${theme.colors.alpha.black[100]};\n          color: ${theme.colors.alpha.white[100]};\n        }\n        \n        &-secondary {\n          background-color: ${theme.colors.secondary.lighter};\n          color: ${theme.palette.secondary.main}\n        }\n        \n        &-success {\n          background-color: ${theme.colors.success.lighter};\n          color: ${theme.palette.success.main}\n        }\n        \n        &-warning {\n          background-color: ${theme.colors.warning.lighter};\n          color: ${theme.palette.warning.main}\n        }\n              \n        &-error {\n          background-color: ${theme.colors.error.lighter};\n          color: ${theme.palette.error.main}\n        }\n        \n        &-info {\n          background-color: ${theme.colors.info.lighter};\n          color: ${theme.palette.info.main}\n        }\n      }\n`\n);\n\nconst Label = ({ className, color = 'secondary', children, ...rest }) => {\n  return (\n    <LabelWrapper className={`MuiLabel-${color}`} {...rest}>\n      {children}\n    </LabelWrapper>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'primary',\n    'black',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info'\n  ])\n};\n\nexport default Label;\n"],"sourceRoot":""}