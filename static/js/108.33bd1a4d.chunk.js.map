{"version":3,"sources":["content/docs/Routing/index.js","components/PageHeaderDocs/index.js"],"names":["Routing","maxWidth","container","spacing","item","xs","heading","subheading","paragraph","showLineNumbers","wrapLines","language","style","a11yDark","variant","sx","mb","RootWrapper","styled","Box","theme","PageHeader","rest","t","useTranslation","mt"],"mappings":"uKAAA,0FA0JeA,UAnJf,WAsFE,OACE,qCACE,cAAC,IAAD,UACE,6FAEF,cAAC,IAAD,CAAWC,UAAU,EAArB,SACE,eAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CAAYC,QAAQ,UAAUC,WAAW,OAE3C,eAAC,IAAD,CAAMH,MAAI,EAACC,GAAI,GAAf,UACE,eAAC,IAAD,CAAYG,WAAS,EAArB,2DACiD,IAC/C,kDAFF,4CAGQ,qDAER,cAAC,IAAD,CAAYA,WAAS,EAArB,iFAIA,cAAC,IAAD,CACEC,iBAAe,EACfC,WAAS,EACTC,SAAS,aACTC,MAAOC,IAJT,SAzGU,87BAiHV,uBACA,cAAC,IAAD,CACEC,QAAQ,KACRC,GAAI,CACFC,GAAI,GAHR,gCAQA,eAAC,IAAD,CAAYR,WAAS,EAArB,8EACoE,IAClE,uGAFF,uHAMuD,IACrD,gDAEF,cAAC,IAAD,CACEC,iBAAe,EACfC,WAAS,EACTC,SAAS,aACTC,MAAOC,IAJT,SA5FU,w/B,gIC1ChBI,EAAcC,YAAOC,IAAPD,EAClB,gBAAGE,EAAH,EAAGA,MAAH,sCACoBA,EAAMjB,QAAQ,GADlC,UA4BakB,IAvBI,SAAC,GAAsC,IAApCf,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,WAAee,EAAW,iBAC/CC,EAAMC,cAAND,EAER,OACE,eAACN,EAAD,2BAAiBK,GAAjB,cACGhB,GAAW,cAAC,IAAD,CAAYQ,QAAQ,KAApB,SAA0BS,EAAEjB,KACvCC,GACC,cAAC,IAAD,CAAYO,QAAQ,YAApB,SAAiCS,EAAEhB,KAErC,cAAC,IAAD,CACEQ,GAAI,CACFU,GAAI","file":"static/js/108.33bd1a4d.chunk.js","sourcesContent":["import { Container, Typography, Grid } from '@mui/material';\n\nimport { Helmet } from 'react-helmet-async';\nimport PageHeader from 'src/components/PageHeaderDocs';\nimport { Prism } from 'react-syntax-highlighter';\nimport a11yDark from 'react-syntax-highlighter/dist/cjs/styles/prism/a11y-dark';\n\nfunction Routing() {\n  const routingExample = `import Guest from 'src/components/Guest';\nimport Authenticated from 'src/components/Authenticated';\nimport ExtendedSidebarLayout from 'src/layouts/ExtendedSidebarLayout';\n\nconst Analytics = Loader(lazy(() => import('src/content/dashboards/Analytics')));\nconst Banking = Loader(lazy(() => import('src/content/dashboards/Banking')));\nconst Commerce = Loader(lazy(() => import('src/content/dashboards/Commerce')));\n\nconst routes = [\n  {\n    path: 'dashboards',\n    element: (\n      <Authenticated>\n        <ExtendedSidebarLayout />\n      </Authenticated>\n    ),\n    children: [\n      {\n        path: '/',\n        element: (\n          <Navigate\n            to=\"/dashboards/analytics\"\n            replace\n          />\n        )\n      },\n      {\n        path: 'analytics',\n        element: <Analytics />\n      },\n      {\n        path: 'banking',\n        element: <Banking />\n      }\n    ]\n  }\n];\n\nexport default routes;`;\n  const sidebarExample = `\n\n  import AnalyticsTwoToneIcon from '@mui/icons-material/AnalyticsTwoTone';\n  \n  const menuItems= [\n    {\n      heading: 'Dashboards',\n      items: [\n        {\n          name: 'Analytics',\n          icon: AnalyticsTwoToneIcon,\n          link: '/dashboards/analytics'\n        },\n        {\n          name: 'Healthcare',\n          icon: AnalyticsTwoToneIcon,\n          link: '/dashboards/healthcare',\n          items: [\n            {\n              name: 'Doctors Page',\n              badge: 'Hot',\n              link: '/dashboards/healthcare/doctor'\n            },\n            {\n              name: 'Hospital Overview',\n              link: '/dashboards/healthcare/hospital'\n            }\n          ]\n        }\n      ]\n    },\n    {\n      heading: 'Applications',\n      items: [\n        {\n          name: 'Calendar',\n          icon: AnalyticsTwoToneIcon,\n          link: '/applications/calendar'\n        }\n      ]\n    }\n  ];\n  \n  export default menuItems;\n  `;\n\n  return (\n    <>\n      <Helmet>\n        <title>Routing - Tokyo White React Javascript Admin Dashboard</title>\n      </Helmet>\n      <Container maxWidth={false}>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <PageHeader heading=\"Routing\" subheading=\"\" />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography paragraph>\n              The routing in Tokyo React Admin Dashboad uses{' '}\n              <code>react-router@6</code> and can be configured inside this\n              file: <code>src\\router.js</code>\n            </Typography>\n            <Typography paragraph>\n              Below you'll find a code snippet extracted from the router.js\n              file:\n            </Typography>\n            <Prism\n              showLineNumbers\n              wrapLines\n              language=\"javascript\"\n              style={a11yDark}\n            >\n              {routingExample}\n            </Prism>\n            <br />\n            <Typography\n              variant=\"h2\"\n              sx={{\n                mb: 2\n              }}\n            >\n              Sidebar Navigation\n            </Typography>\n            <Typography paragraph>\n              To modify the current sidebar navigation, edit the following file{' '}\n              <code>\n                src\\layouts\\ExtendedSidebarLayout\\Sidebar\\SidebarMenu\\items.js\n              </code>\n              . It contains an items array used for building the sidebar menu\n              tree. The 'link' parameter represents the entry from{' '}\n              <code>router.js</code>\n            </Typography>\n            <Prism\n              showLineNumbers\n              wrapLines\n              language=\"javascript\"\n              style={a11yDark}\n            >\n              {sidebarExample}\n            </Prism>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default Routing;\n","import PropTypes from 'prop-types';\n\nimport { useTranslation } from 'react-i18next';\nimport { styled, Typography, Box, Divider } from '@mui/material';\n\nconst RootWrapper = styled(Box)(\n  ({ theme }) => `\n        margin-top: ${theme.spacing(5)};\n`\n);\n\nconst PageHeader = ({ heading, subheading, ...rest }) => {\n  const { t } = useTranslation();\n\n  return (\n    <RootWrapper {...rest}>\n      {heading && <Typography variant=\"h1\">{t(heading)}</Typography>}\n      {subheading && (\n        <Typography variant=\"subtitle2\">{t(subheading)}</Typography>\n      )}\n      <Divider\n        sx={{\n          mt: 5\n        }}\n      />\n    </RootWrapper>\n  );\n};\n\nPageHeader.propTypes = {\n  heading: PropTypes.string,\n  subheading: PropTypes.string\n};\n\nexport default PageHeader;\n"],"sourceRoot":""}