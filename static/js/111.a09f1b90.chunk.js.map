{"version":3,"sources":["content/applications/Calendar/PageHeader.js","content/applications/Calendar/Actions.js","content/applications/Calendar/EventDrawer.js","content/applications/Calendar/index.js","components/PageTitleWrapper/index.js"],"names":["PageHeader","handleCreateEvent","t","useTranslation","Grid","container","justifyContent","alignItems","item","Typography","variant","component","gutterBottom","Button","sx","mt","xs","md","onClick","color","startIcon","fontSize","defaultProps","viewOptions","label","value","icon","CalendarViewMonthTwoToneIcon","ViewWeekTwoToneIcon","ViewDayTwoToneIcon","ViewAgendaTwoToneIcon","Actions","date","onNext","onPrevious","onToday","changeView","view","spacing","Tooltip","arrow","placement","title","IconButton","mx","display","sm","format","map","viewOption","Icon","IconButtonError","styled","theme","colors","error","lighter","main","lighten","CardActionsWrapper","Card","alpha","black","getInitialValues","event","range","_","merge","allDay","description","end","setHours","setMinutes","subDays","Date","start","submit","EventDrawer","onAddComplete","onCancel","onDeleteComplete","onEditComplete","dispatch","useDispatch","enqueueSnackbar","useSnackbar","isCreating","handleDelete","a","deleteEvent","id","anchorOrigin","vertical","horizontal","TransitionComponent","Zoom","err","console","initialValues","validationSchema","Yup","shape","max","when","schema","min","required","onSubmit","values","resetForm","setErrors","setStatus","setSubmitting","data","updateEvent","createEvent","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","touched","Box","p","Divider","px","py","TextField","Boolean","fullWidth","helperText","name","margin","onBlur","onChange","multiline","minRows","FormControlLabel","control","Checkbox","checked","DateTimePicker","renderInput","params","Alert","mb","severity","mr","type","CircularProgress","size","disabled","FullCalendarWrapper","primary","selectedEventSelector","state","calendar","events","selectedEventId","find","_event","ApplicationsCalendar","useTheme","calendarRef","useRef","mobile","useMediaQuery","breakpoints","down","useSelector","isDrawerOpen","selectedRange","selectedEvent","useState","setDate","setView","handleEventResize","handleEventDrop","closeDrawer","closeDrawerPanel","useEffect","getEvents","calItem","current","calApi","getApi","changedView","PageTitleWrapper","openDrawerPanel","direction","next","getDate","prev","today","allDayMaintainDuration","initialDate","initialView","droppable","editable","eventDisplay","eventClick","arg","selectEvent","eventDrop","dayMaxEventRows","eventResizableFromStart","eventResize","headerToolbar","height","ref","rerenderDelay","select","unselect","selectRange","selectable","weekends","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","Footer","Drawer","anchor","onClose","open","elevation","PageTitle","children","className"],"mappings":"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","file":"static/js/111.a09f1b90.chunk.js","sourcesContent":["import { Typography, Button, Grid } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport EventTwoToneIcon from '@mui/icons-material/EventTwoTone';\nimport PropTypes from 'prop-types';\n\nconst PageHeader = ({ handleCreateEvent }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n      <Grid item>\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n          {t('Events')}\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          {t('Check out the latest events and meetings in your calendar')}\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          sx={{\n            mt: { xs: 2, md: 0 }\n          }}\n          onClick={handleCreateEvent}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<EventTwoToneIcon fontSize=\"small\" />}\n        >\n          {t('Add meeting')}\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nPageHeader.propTypes = {\n  handleCreateEvent: PropTypes.func\n};\n\nPageHeader.defaultProps = {\n  handleCreateEvent: () => {}\n};\n\nexport default PageHeader;\n","import { format } from 'date-fns';\nimport PropTypes from 'prop-types';\nimport { Grid, IconButton, Tooltip, Typography } from '@mui/material';\n\nimport ViewAgendaTwoToneIcon from '@mui/icons-material/ViewAgendaTwoTone';\n\nimport ViewDayTwoToneIcon from '@mui/icons-material/ViewDayTwoTone';\nimport CalendarViewMonthTwoToneIcon from '@mui/icons-material/CalendarViewMonthTwoTone';\nimport ViewWeekTwoToneIcon from '@mui/icons-material/ViewWeekTwoTone';\nimport { useTranslation } from 'react-i18next';\nimport TodayTwoToneIcon from '@mui/icons-material/TodayTwoTone';\nimport ArrowForwardTwoToneIcon from '@mui/icons-material/ArrowForwardTwoTone';\nimport ArrowBackTwoToneIcon from '@mui/icons-material/ArrowBackTwoTone';\n\nconst viewOptions = [\n  {\n    label: 'Month',\n    value: 'dayGridMonth',\n    icon: CalendarViewMonthTwoToneIcon\n  },\n  {\n    label: 'Week',\n    value: 'timeGridWeek',\n    icon: ViewWeekTwoToneIcon\n  },\n  {\n    label: 'Day',\n    value: 'timeGridDay',\n    icon: ViewDayTwoToneIcon\n  },\n  {\n    label: 'Agenda',\n    value: 'listWeek',\n    icon: ViewAgendaTwoToneIcon\n  }\n];\n\nconst Actions = ({ date, onNext, onPrevious, onToday, changeView, view }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n    >\n      <Grid item>\n        <Tooltip arrow placement=\"top\" title={t('Previous Day')}>\n          <IconButton color=\"primary\" onClick={onPrevious}>\n            <ArrowBackTwoToneIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip arrow placement=\"top\" title={t('Today')}>\n          <IconButton\n            color=\"primary\"\n            sx={{\n              mx: 1\n            }}\n            onClick={onToday}\n          >\n            <TodayTwoToneIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip arrow placement=\"top\" title={t('Next Day')}>\n          <IconButton color=\"primary\" onClick={onNext}>\n            <ArrowForwardTwoToneIcon />\n          </IconButton>\n        </Tooltip>\n      </Grid>\n      <Grid\n        item\n        sx={{\n          display: { xs: 'none', sm: 'inline-block' }\n        }}\n      >\n        <Typography variant=\"h3\" color=\"text.primary\">\n          {format(date, 'MMMM yyyy')}\n        </Typography>\n      </Grid>\n      <Grid\n        item\n        sx={{\n          display: { xs: 'none', sm: 'inline-block' }\n        }}\n      >\n        {viewOptions.map((viewOption) => {\n          const Icon = viewOption.icon;\n\n          return (\n            <Tooltip\n              key={viewOption.value}\n              arrow\n              placement=\"top\"\n              title={t(viewOption.label)}\n            >\n              <IconButton\n                color={viewOption.value === view ? 'primary' : 'secondary'}\n                onClick={() => changeView(viewOption.value)}\n              >\n                <Icon />\n              </IconButton>\n            </Tooltip>\n          );\n        })}\n      </Grid>\n    </Grid>\n  );\n};\n\nActions.propTypes = {\n  date: PropTypes.instanceOf(Date).isRequired,\n  onNext: PropTypes.func,\n  onPrevious: PropTypes.func,\n  onToday: PropTypes.func,\n  changeView: PropTypes.func,\n  view: PropTypes.oneOf([\n    'dayGridMonth',\n    'timeGridWeek',\n    'timeGridDay',\n    'listWeek'\n  ])\n};\n\nActions.defaultProps = {\n  onNext: () => {},\n  onPrevious: () => {},\n  onToday: () => {},\n  handleCreateEvent: () => {},\n  changeView: () => {}\n};\n\nexport default Actions;\n","import PropTypes from 'prop-types';\nimport { setHours, setMinutes, subDays } from 'date-fns';\nimport _ from 'lodash';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport { styled } from '@mui/material/styles';\n\nimport {\n  Box,\n  Card,\n  TextField,\n  Button,\n  IconButton,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Alert,\n  Checkbox,\n  CircularProgress,\n  Tooltip,\n  Typography,\n  lighten,\n  Zoom\n} from '@mui/material';\nimport { DateTimePicker } from '@mui/lab';\nimport { useDispatch } from 'src/store';\nimport { createEvent, updateEvent, deleteEvent } from 'src/slices/calendar';\nimport { useTranslation } from 'react-i18next';\n\nconst IconButtonError = styled(IconButton)(\n  ({ theme }) => `\n     background: ${theme.colors.error.lighter};\n     color: ${theme.colors.error.main};\n\n     &:hover {\n      background: ${lighten(theme.colors.error.lighter, 0.4)};\n     }\n`\n);\n\nconst CardActionsWrapper = styled(Card)(\n  ({ theme }) => `\n     background: ${theme.colors.alpha.black[5]};\n     box-shadow: none;\n     margin: 0 ${theme.spacing(3)};\n`\n);\n\nconst getInitialValues = (event, range) => {\n  if (event) {\n    return _.merge(\n      {},\n      {\n        allDay: false,\n        color: '',\n        description: '',\n        end: setHours(setMinutes(subDays(new Date(), 3), 30), 10),\n        start: setHours(setMinutes(subDays(new Date(), 3), 60), 8),\n        title: '',\n        submit: null\n      },\n      event\n    );\n  }\n\n  if (range) {\n    return _.merge(\n      {},\n      {\n        allDay: false,\n        color: '',\n        description: '',\n        end: new Date(range.end),\n        start: new Date(range.start),\n        title: '',\n        submit: null\n      },\n      event\n    );\n  }\n\n  return {\n    allDay: false,\n    color: '',\n    description: '',\n    end: setHours(setMinutes(subDays(new Date(), 1), 35), 20),\n    start: setHours(setMinutes(subDays(new Date(), 1), 25), 17),\n    title: '',\n    submit: null\n  };\n};\n\nconst EventDrawer = ({\n  event,\n  onAddComplete,\n  onCancel,\n  onDeleteComplete,\n  onEditComplete,\n  range\n}) => {\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const isCreating = !event;\n\n  const handleDelete = async () => {\n    try {\n      dispatch(deleteEvent(event.id));\n      onDeleteComplete();\n\n      enqueueSnackbar(t('The event has been deleted'), {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        TransitionComponent: Zoom\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const { t } = useTranslation();\n\n  return (\n    <Formik\n      initialValues={getInitialValues(event, range)}\n      validationSchema={Yup.object().shape({\n        allDay: Yup.bool(),\n        description: Yup.string().max(5000),\n        end: Yup.date().when(\n          'start',\n          (start, schema) =>\n            start &&\n            schema.min(start, t('The end date should be after start date'))\n        ),\n        start: Yup.date(),\n        title: Yup.string().max(255).required(t('The title field is required'))\n      })}\n      onSubmit={async (\n        values,\n        { resetForm, setErrors, setStatus, setSubmitting }\n      ) => {\n        try {\n          const data = {\n            allDay: values.allDay,\n            description: values.description,\n            end: values.end,\n            start: values.start,\n            title: values.title\n          };\n\n          if (event) {\n            dispatch(updateEvent(event.id, data));\n          } else {\n            dispatch(createEvent(data));\n          }\n\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar(t('The calendar has been successfully updated!'), {\n            variant: 'success',\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'center'\n            },\n            TransitionComponent: Zoom\n          });\n\n          if (isCreating) {\n            onAddComplete();\n          } else {\n            onEditComplete();\n          }\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        touched,\n        values\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Box p={3}>\n            <Typography variant=\"h4\">\n              {isCreating\n                ? t('Create new calendar event')\n                : t('Edit calendar event')}\n            </Typography>\n          </Box>\n          <Divider />\n          <Box px={3} py={2}>\n            <TextField\n              error={Boolean(touched.title && errors.title)}\n              fullWidth\n              helperText={touched.title && errors.title}\n              label={t('Event title')}\n              name=\"title\"\n              margin=\"normal\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.title}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={Boolean(touched.description && errors.description)}\n              fullWidth\n              multiline\n              minRows={3}\n              helperText={touched.description && errors.description}\n              label={t('Event description')}\n              name=\"description\"\n              margin=\"normal\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.description}\n              variant=\"outlined\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={values.allDay}\n                  onChange={handleChange}\n                  name=\"allDay\"\n                  color=\"primary\"\n                />\n              }\n              label={t('This event lasts all day')}\n            />\n\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={6}>\n                <DateTimePicker\n                  value={values.start}\n                  onChange={(date) => setFieldValue('start', date)}\n                  label={t('Event start date')}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      fullWidth\n                      name=\"start\"\n                    />\n                  )}\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <DateTimePicker\n                  value={values.end}\n                  onChange={(date) => setFieldValue('end', date)}\n                  label={t('Event end date')}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      fullWidth\n                      name=\"end\"\n                    />\n                  )}\n                />\n              </Grid>\n            </Grid>\n            {Boolean(touched.end && errors.end) && (\n              <Alert\n                sx={{\n                  mt: 2,\n                  mb: 1\n                }}\n                severity=\"error\"\n              >\n                {errors.end}\n              </Alert>\n            )}\n          </Box>\n          <CardActionsWrapper\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              p: 2\n            }}\n          >\n            <Box>\n              {!isCreating && (\n                <Tooltip arrow title={t('Delete this event')}>\n                  <IconButtonError onClick={() => handleDelete()}>\n                    <DeleteTwoToneIcon />\n                  </IconButtonError>\n                </Tooltip>\n              )}\n            </Box>\n            <Box>\n              <Button\n                variant=\"outlined\"\n                sx={{\n                  mr: 1\n                }}\n                color=\"secondary\"\n                onClick={onCancel}\n              >\n                {t('Cancel')}\n              </Button>\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                startIcon={\n                  isSubmitting ? <CircularProgress size=\"1rem\" /> : null\n                }\n                disabled={isSubmitting}\n                color=\"primary\"\n              >\n                {isCreating ? t('Add meeting') : t('Save modifications')}\n              </Button>\n            </Box>\n          </CardActionsWrapper>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nEventDrawer.propTypes = {\n  event: PropTypes.object,\n\n  range: PropTypes.object,\n  onAddComplete: PropTypes.func,\n  onCancel: PropTypes.func,\n  onDeleteComplete: PropTypes.func,\n  onEditComplete: PropTypes.func\n};\n\nEventDrawer.defaultProps = {\n  onAddComplete: () => {},\n  onCancel: () => {},\n  onDeleteComplete: () => {},\n  onEditComplete: () => {}\n};\n\nexport default EventDrawer;\n","import { useState, useRef, useEffect } from 'react';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { Helmet } from 'react-helmet-async';\nimport Footer from 'src/components/Footer';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport listPlugin from '@fullcalendar/list';\n\nimport {\n  Grid,\n  Drawer,\n  Box,\n  Card,\n  Divider,\n  useMediaQuery,\n  styled,\n  useTheme\n} from '@mui/material';\n\nimport { useDispatch, useSelector } from 'src/store';\nimport {\n  getEvents,\n  updateEvent,\n  selectEvent,\n  selectRange,\n  openDrawerPanel,\n  closeDrawerPanel\n} from 'src/slices/calendar';\nimport PageHeader from './PageHeader';\n\nimport Actions from './Actions';\nimport EventDrawer from './EventDrawer';\n\nconst FullCalendarWrapper = styled(Box)(\n  ({ theme }) => `\n    padding: ${theme.spacing(3)};\n\n    & .fc-license-message {\n      display: none;\n    }\n    .fc {\n\n      .fc-col-header-cell {\n        padding: ${theme.spacing(1)};\n        background: ${theme.colors.alpha.black[5]};\n      }\n\n      .fc-scrollgrid {\n        border: 2px solid ${theme.colors.alpha.black[10]};\n        border-right-width: 1px;\n        border-bottom-width: 1px;\n      }\n\n      .fc-cell-shaded,\n      .fc-list-day-cushion {\n        background: ${theme.colors.alpha.black[5]};\n      }\n\n      .fc-list-event-graphic {\n        padding-right: ${theme.spacing(1)};\n      }\n\n      .fc-theme-standard td, .fc-theme-standard th,\n      .fc-col-header-cell {\n        border: 1px solid ${theme.colors.alpha.black[10]};\n      }\n\n      .fc-event {\n        padding: ${theme.spacing(0.1)} ${theme.spacing(0.3)};\n      }\n\n      .fc-list-day-side-text {\n        font-weight: normal;\n        color: ${theme.colors.alpha.black[70]};\n      }\n\n      .fc-list-event:hover td,\n      td.fc-daygrid-day.fc-day-today {\n        background-color: ${theme.colors.primary.lighter};\n      }\n\n      td.fc-daygrid-day:hover,\n      .fc-highlight {\n        background: ${theme.colors.alpha.black[10]};\n      }\n\n      .fc-daygrid-dot-event:hover, \n      .fc-daygrid-dot-event.fc-event-mirror {\n        background: ${theme.colors.primary.lighter};\n      }\n\n      .fc-daygrid-day-number {\n        padding: ${theme.spacing(1)};\n        font-weight: bold;\n      }\n\n      .fc-list-sticky .fc-list-day > * {\n        background: ${theme.colors.alpha.black[5]} !important;\n      }\n\n      .fc-cell-shaded, \n      .fc-list-day-cushion {\n        background: ${theme.colors.alpha.black[10]} !important;\n        color: ${theme.colors.alpha.black[70]} !important;\n      }\n\n      &.fc-theme-standard td, \n      &.fc-theme-standard th,\n      &.fc-theme-standard .fc-list {\n        border-color: ${theme.colors.alpha.black[30]};\n      }\n    }\n`\n);\n\nconst selectedEventSelector = (state) => {\n  const { events, selectedEventId } = state.calendar;\n\n  if (selectedEventId) {\n    return events.find((_event) => _event.id === selectedEventId);\n  }\n  return null;\n};\n\nfunction ApplicationsCalendar() {\n  const theme = useTheme();\n\n  const calendarRef = useRef(null);\n  const mobile = useMediaQuery(theme.breakpoints.down('md'));\n  const dispatch = useDispatch();\n  const { events, isDrawerOpen, selectedRange } = useSelector(\n    (state) => state.calendar\n  );\n  const selectedEvent = useSelector(selectedEventSelector);\n  const [date, setDate] = useState(new Date());\n  const [view, setView] = useState(mobile ? 'listWeek' : 'dayGridMonth');\n\n  const handleDateToday = () => {\n    const calItem = calendarRef.current;\n\n    if (calItem) {\n      const calApi = calItem.getApi();\n\n      calApi.today();\n      setDate(calApi.getDate());\n    }\n  };\n\n  const changeView = (changedView) => {\n    const calItem = calendarRef.current;\n\n    if (calItem) {\n      const calApi = calItem.getApi();\n\n      calApi.changeView(changedView);\n      setView(changedView);\n    }\n  };\n\n  const handleDatePrev = () => {\n    const calItem = calendarRef.current;\n\n    if (calItem) {\n      const calApi = calItem.getApi();\n\n      calApi.prev();\n      setDate(calApi.getDate());\n    }\n  };\n\n  const handleDateNext = () => {\n    const calItem = calendarRef.current;\n\n    if (calItem) {\n      const calApi = calItem.getApi();\n\n      calApi.next();\n      setDate(calApi.getDate());\n    }\n  };\n\n  const handleAddClick = () => {\n    dispatch(openDrawerPanel());\n  };\n\n  const handleRangeSelect = (arg) => {\n    const calItem = calendarRef.current;\n\n    if (calItem) {\n      const calApi = calItem.getApi();\n\n      calApi.unselect();\n    }\n\n    dispatch(selectRange(arg.start, arg.end));\n  };\n\n  const handleEventSelect = (arg) => {\n    dispatch(selectEvent(arg.event.id));\n  };\n\n  const handleEventResize = async ({ event }) => {\n    try {\n      await dispatch(\n        updateEvent(event.id, {\n          allDay: event.allDay,\n          start: event.start,\n          end: event.end\n        })\n      );\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleEventDrop = async ({ event }) => {\n    try {\n      dispatch(\n        updateEvent(event.id, {\n          allDay: event.allDay,\n          start: event.start,\n          end: event.end\n        })\n      );\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const closeDrawer = () => {\n    dispatch(closeDrawerPanel());\n  };\n\n  useEffect(() => {\n    dispatch(getEvents());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const calItem = calendarRef.current;\n\n    if (calItem) {\n      const calApi = calItem.getApi();\n      const changedView = mobile ? 'listWeek' : 'dayGridMonth';\n\n      calApi.changeView(changedView);\n      setView(changedView);\n    }\n  }, [mobile]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Calendar - Applications</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageHeader handleCreateEvent={handleAddClick} />\n      </PageTitleWrapper>\n      <Grid\n        sx={{\n          px: 4\n        }}\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        spacing={4}\n      >\n        <Grid item xs={12}>\n          <Card>\n            <Box p={3}>\n              <Actions\n                date={date}\n                onNext={handleDateNext}\n                onPrevious={handleDatePrev}\n                onToday={handleDateToday}\n                changeView={changeView}\n                view={view}\n              />\n            </Box>\n            <Divider />\n            <FullCalendarWrapper>\n              <FullCalendar\n                allDayMaintainDuration\n                initialDate={date}\n                initialView={view}\n                droppable\n                editable\n                eventDisplay=\"block\"\n                eventClick={handleEventSelect}\n                eventDrop={handleEventDrop}\n                dayMaxEventRows={4}\n                eventResizableFromStart\n                eventResize={handleEventResize}\n                events={events}\n                headerToolbar={false}\n                height={660}\n                ref={calendarRef}\n                rerenderDelay={10}\n                select={handleRangeSelect}\n                selectable\n                weekends\n                plugins={[\n                  dayGridPlugin,\n                  timeGridPlugin,\n                  interactionPlugin,\n                  listPlugin\n                ]}\n              />\n            </FullCalendarWrapper>\n          </Card>\n        </Grid>\n      </Grid>\n      <Footer />\n      <Drawer\n        variant=\"temporary\"\n        anchor={theme.direction === 'rtl' ? 'left' : 'right'}\n        onClose={closeDrawer}\n        open={isDrawerOpen}\n        elevation={9}\n      >\n        {isDrawerOpen && (\n          <EventDrawer\n            event={selectedEvent}\n            range={selectedRange}\n            onAddComplete={closeDrawer}\n            onCancel={closeDrawer}\n            onDeleteComplete={closeDrawer}\n            onEditComplete={closeDrawer}\n          />\n        )}\n      </Drawer>\n    </>\n  );\n}\n\nexport default ApplicationsCalendar;\n","import PropTypes from 'prop-types';\nimport { Box, styled } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4)};\n`\n);\n\nconst PageTitleWrapper = ({ children }) => {\n  return (\n    <>\n      <PageTitle className=\"MuiPageTitle-wrapper\">{children}</PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n"],"sourceRoot":""}